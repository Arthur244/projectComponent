{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.mdx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.mdx","mtime":1595216288852},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js","mtime":1609062631902},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.mdx"],"names":["React","mdx","Playground","Props","FormUtil","IFormItemDataC","PhoneFormItem","layoutProps","MDXLayout","MDXContent","components","props","Input","Form","Button","Checkbox","list","span","content","height","width","border","display","label","name","rules","required","valuePropName","value","console","log","renderFormItems","Component","contentIsFormItem","labelSpan","wrapSpan","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport FormUtil from './FormUtil';\nimport { IFormItemDataC } from '../interfaces/Demo';\nimport {Input, Form, Button, Checkbox} from 'antd';\nimport PhoneFormItem from '../forms/PhoneFormItem';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"formutil\"\n    }}>{`FormUtil`}</h1>\n    <p>{`表单的辅助工具`}</p>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <h3 {...{\n      \"id\": \"渲染表单\"\n    }}>{`渲染表单`}</h3>\n    <p>{`目标是解决表单对齐，间距的问题。\n规则如下：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`默认一行2列，标签和内容的宽度为：1:4`}</li>\n      <li parentName=\"ul\">{`标签文字大于6个字，独占一行`}</li>\n      <li parentName=\"ul\">{`可手动修改：默认的列数、标签宽度`}</li>\n      <li parentName=\"ul\">{`可单独设置每一个表单项宽度、表单项标签的宽度`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"一个标准示例\"\n    }}>{`一个标准示例`}</h3>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          span: 24,\\n          content: (\\n            <img\\n              style={{\\n                height: 160,\\n                width: 120,\\n                border: \\'1px solid gray\\',\\n                display: \\'inline-block\\',\\n              }}\\n              alt=\\\"头像\\\"\\n            />\\n          ),\\n        },\\n        {\\n          label: \\'姓名\\',\\n          name: \\'name\\',\\n          content: <Input />,\\n          rules: [\\n            {\\n              required: true,\\n            },\\n          ],\\n        },\\n        {\\n          label: \\'启用\\',\\n          name: \\'enable\\',\\n          valuePropName: \\'checked\\',\\n          content: <Checkbox />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          name: \\'sex\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'公司地址\\',\\n          name: \\'companyAddress\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'身份证号码\\',\\n          name: \\'idCard\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'个人签名\\',\\n          span: 24,\\n          name: \\'sign\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'紧急联系人\\',\\n          span: 8,\\n          name: \\'friend\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'座机\\',\\n          span: 8,\\n          name: \\'phone\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'座机\\',\\n          span: 6,\\n          name: \\'phone2\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'座机\\',\\n          span: 6,\\n          content: <Input />,\\n        },\\n        {\\n          span: 24,\\n          content: (\\n            <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n              保存，我是自动对齐\\n            </Button>\\n          ),\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form\\n            layout=\\\"Horizontal\\\"\\n            onFinish={value => {\\n              console.log(value)\\n            }}\\n          >\\n            {FormUtil.renderFormItems(list)}\\n          </Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            span: 24,\n            content: <img style={{\n              height: 160,\n              width: 120,\n              border: '1px solid gray',\n              display: 'inline-block'\n            }} alt=\"头像\" />\n          }, {\n            label: '姓名',\n            name: 'name',\n            content: <Input mdxType=\"Input\" />,\n            rules: [{\n              required: true\n            }]\n          }, {\n            label: '启用',\n            name: 'enable',\n            valuePropName: 'checked',\n            content: <Checkbox mdxType=\"Checkbox\" />\n          }, {\n            label: '性别',\n            name: 'sex',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '公司地址',\n            name: 'companyAddress',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '身份证号码',\n            name: 'idCard',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '个人签名',\n            span: 24,\n            name: 'sign',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '紧急联系人',\n            span: 8,\n            name: 'friend',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '座机',\n            span: 8,\n            name: 'phone',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '座机',\n            span: 6,\n            name: 'phone2',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '座机',\n            span: 6,\n            content: <Input mdxType=\"Input\" />\n          }, {\n            span: 24,\n            content: <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">保存，我是自动对齐</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" onFinish={value => {\n              console.log(value);\n            }} mdxType=\"Form\">\n          {FormUtil.renderFormItems(list)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"使用特殊的formitem\"\n    }}>{`使用特殊的formItem`}</h3>\n    <p>{`本示例，使用`}<inlineCode parentName=\"p\">{`<PhoneFormItem />`}</inlineCode>{` 做为content值，此时需设置`}<inlineCode parentName=\"p\">{`contentIsFormItem:true`}</inlineCode></p>\n    <Playground __position={1} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'手机号\\',\\n          span: 8,\\n          contentIsFormItem: true,\\n          content: <PhoneFormItem required name=\\\"mobilePhone\\\" />,\\n        },\\n        {\\n          span: 24,\\n          content: (\\n            <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n              保存\\n            </Button>\\n          ),\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form\\n            layout=\\\"Horizontal\\\"\\n            onFinish={value => {\\n              console.log(value)\\n            }}\\n          >\\n            {FormUtil.renderFormItems(list)}\\n          </Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '手机号',\n            span: 8,\n            contentIsFormItem: true,\n            content: <PhoneFormItem required name='mobilePhone' mdxType=\"PhoneFormItem\" />\n          }, {\n            span: 24,\n            content: <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">保存</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" onFinish={value => {\n              console.log(value);\n            }} mdxType=\"Form\">\n          {FormUtil.renderFormItems(list)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"一些特殊情况的处理\"\n    }}>{`一些特殊情况的处理`}</h3>\n    <Playground __position={2} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          content: (\\n            <img\\n              style={{\\n                height: 160,\\n                width: 120,\\n                border: \\'1px solid gray\\',\\n                display: \\'inline-block\\',\\n              }}\\n              alt=\\\"头像\\\"\\n            />\\n          ),\\n        },\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'四个文字\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'这里六个文字\\',\\n          content: <Input />,\\n        },\\n        {\\n          label:\\n            \\'我是标签字数超过7，会自动独占一行，但可能需要手动调整labe占位，否则显示不全\\',\\n          labelSpan: 15,\\n          content: <Input value=\\\"我手动调整了标签占位\\\" />,\\n        },\\n        {\\n          label: \\'我也很长\\',\\n          span: 12,\\n          content: <Input value=\\\"我也很长，但手动设置了只占半行\\\" />,\\n        },\\n        {\\n          label: \\'标签\\',\\n          span: 24,\\n          content: <Input value=\\\"我标签文字不长，但手动设置了独占一行\\\" />,\\n        },\\n        {\\n          content: <Button type=\\\"primary\\\">保存，我是自动对齐</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">{FormUtil.renderFormItems(list)}</Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            content: <img style={{\n              height: 160,\n              width: 120,\n              border: '1px solid gray',\n              display: 'inline-block'\n            }} alt=\"头像\" />\n          }, {\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '四个文字',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '这里六个文字',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '我是标签字数超过7，会自动独占一行，但可能需要手动调整labe占位，否则显示不全',\n            labelSpan: 15,\n            content: <Input value=\"我手动调整了标签占位\" mdxType=\"Input\" />\n          }, {\n            label: '我也很长',\n            span: 12,\n            content: <Input value=\"我也很长，但手动设置了只占半行\" mdxType=\"Input\" />\n          }, {\n            label: '标签',\n            span: 24,\n            content: <Input value=\"我标签文字不长，但手动设置了独占一行\" mdxType=\"Input\" />\n          }, {\n            content: <Button type=\"primary\" mdxType=\"Button\">保存，我是自动对齐</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"渲染表单项--表单项为奇数时，按钮换行\"\n    }}>{`渲染表单项--表单项为奇数时，按钮换行`}</h3>\n    <p>{`额外添加一个空项`}</p>\n    <Playground __position={3} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'年龄\\',\\n          content: <Input />,\\n        },\\n        {\\n          content: null,\\n        },\\n        {\\n          content: <Button type=\\\"primary\\\">保存，我是自动对齐</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">{FormUtil.renderFormItems(list)}</Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '年龄',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            content: null\n          }, {\n            content: <Button type=\"primary\" mdxType=\"Button\">保存，我是自动对齐</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"渲染表单项--三列\"\n    }}>{`渲染表单项--三列`}</h3>\n    <Playground __position={4} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'年龄\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          content: <Button type=\\\"primary\\\">保存，我是自动对齐</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">{FormUtil.renderFormItems(list, 3)}</Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '年龄',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            content: <Button type=\"primary\" mdxType=\"Button\">保存，我是自动对齐</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list, 3)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"渲染表单项--三列时，按钮另起一行\"\n    }}>{`渲染表单项--三列时，按钮另起一行`}</h3>\n    <Playground __position={5} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'年龄\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          span: 24,\\n          content: <Button type=\\\"primary\\\">保存</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">{FormUtil.renderFormItems(list, 3)}</Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '年龄',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            span: 24,\n            content: <Button type=\"primary\" mdxType=\"Button\">保存</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list, 3)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"渲染表单项--三列-1\"\n    }}>{`渲染表单项--三列`}</h3>\n    <Playground __position={6} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'年龄\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          content: <Button type=\\\"primary\\\">保存，我是自动对齐</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">{FormUtil.renderFormItems(list, 3)}</Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '年龄',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            content: <Button type=\"primary\" mdxType=\"Button\">保存，我是自动对齐</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list, 3)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"增加每列的间隔\"\n    }}>{`增加每列的间隔`}</h3>\n    <p>{`FormUtil.renderFormItems(list, 3, 6, `}<strong parentName=\"p\">{`15`}</strong>{`)\n通过设置renderFormItems的第4个参数,使labelSpan + wrapSpan < 24，达到增加每列间隔的目的`}</p>\n    <p>{`同时，也可以给表单项单独设置wrawSpan`}</p>\n    <Playground __position={7} __code={'class Demo extends React.Component {\\n    render() {\\n      const list = [\\n        {\\n          label: \\'姓名\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'年龄\\',\\n          content: <Input />,\\n        },\\n        {\\n          label: \\'性别\\',\\n          content: <Input value=\\\"我单独设置了wrapSpan\\\" />,\\n          wrapSpan: 10,\\n        },\\n        {\\n          content: <Button type=\\\"primary\\\">保存</Button>,\\n        },\\n      ]\\n      return (\\n        <div>\\n          <Form layout=\\\"Horizontal\\\">\\n            {FormUtil.renderFormItems(list, 3, 6, 15)}\\n          </Form>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      FormUtil,\n      IFormItemDataC,\n      Input,\n      Form,\n      Button,\n      Checkbox,\n      PhoneFormItem\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        render() {\n          const list = [{\n            label: '姓名',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '年龄',\n            content: <Input mdxType=\"Input\" />\n          }, {\n            label: '性别',\n            content: <Input value='我单独设置了wrapSpan' mdxType=\"Input\" />,\n            wrapSpan: 10\n          }, {\n            content: <Button type=\"primary\" mdxType=\"Button\">保存</Button>\n          }];\n          return <div>\n          <Form layout=\"Horizontal\" mdxType=\"Form\">\n          {FormUtil.renderFormItems(list, 3, 6, 15)}\n          </Form>\n        </div>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"参考-iformitemdata\"\n    }}>{`参考 IFormItemData`}</h2>\n    <Props of={IFormItemDataC} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}