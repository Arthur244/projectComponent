{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts","mtime":1594367130786},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIi9Vc2Vycy94dWp1bmppZS9Eb2N1bWVudHMvZ2l0L3Byb2plY3RDb21wb25lbnQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjtpbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20iL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiO3ZhciBEQVlfVE9fSE9VUj0yNDt2YXIgSE9VUl9UT19NSU5VVEU9NjA7dmFyIE1JTlVURV9UT19TRUNPTkQ9NjA7dmFyIFNFQ09ORF9UT19NSUxMSVNFQ09ORD0xMDAwOy8qKgogKiDooajnpLrkuIDkuKrml7bpl7TmrrUKICogQGF1dGhvciA6IHh1anVuamllICh5aW5odW5mZWl4dWVAMTYzLmNvbSkKICogQERhdGUgICA6IDIwMTctMTEtMTkgMTI6NTI6NTMKICovdmFyIFRpbWVTcGFuPS8qI19fUFVSRV9fKi9mdW5jdGlvbigpey8qKgogICAqIOWunuS+i+WMllRpbWVTcGFuLgogICAqIEBwYXJhbSB7bnVtYmVyfSBkYXlzIOWkqeaVsC4KICAgKiBAcGFyYW0ge251bWJlcn0gaG91cnMg5bCP5pe2LgogICAqIEBwYXJhbSB7bnVtYmVyfSBtaW51dGVzIOWIhumSny4KICAgKiBAcGFyYW0ge251bWJlcn0gc2Vjb25kcyDnp5LmlbAuCiAgICogQHBhcmFtIHtudW1iZXJ9IG1pbGxpc2Vjb25kcyDmr6vnp5IuCiAgICovZnVuY3Rpb24gVGltZVNwYW4oKXt2YXIgZGF5cz1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06MDt2YXIgaG91cnM9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzFdOjA7dmFyIG1pbnV0ZXM9YXJndW1lbnRzLmxlbmd0aD4yJiZhcmd1bWVudHNbMl0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzJdOjA7dmFyIHNlY29uZHM9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT11bmRlZmluZWQ/YXJndW1lbnRzWzNdOjA7dmFyIG1pbGxpc2Vjb25kcz1hcmd1bWVudHMubGVuZ3RoPjQmJmFyZ3VtZW50c1s0XSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbNF06MDtfY2xhc3NDYWxsQ2hlY2sodGhpcyxUaW1lU3Bhbik7dGhpcy5fbWlsbGlzZWNvbmRzPXZvaWQgMDt0aGlzLl9taWxsaXNlY29uZHM9bWlsbGlzZWNvbmRzO3RoaXMuX21pbGxpc2Vjb25kcys9c2Vjb25kcypTRUNPTkRfVE9fTUlMTElTRUNPTkQ7dGhpcy5fbWlsbGlzZWNvbmRzKz1taW51dGVzKk1JTlVURV9UT19TRUNPTkQqU0VDT05EX1RPX01JTExJU0VDT05EO3RoaXMuX21pbGxpc2Vjb25kcys9aG91cnMqSE9VUl9UT19NSU5VVEUqTUlOVVRFX1RPX1NFQ09ORCpTRUNPTkRfVE9fTUlMTElTRUNPTkQ7dGhpcy5fbWlsbGlzZWNvbmRzKz1kYXlzKkRBWV9UT19IT1VSKkhPVVJfVE9fTUlOVVRFKk1JTlVURV9UT19TRUNPTkQqU0VDT05EX1RPX01JTExJU0VDT05EO30vKioKICAgKiDmraTlrp7kvovliqDkuIrlj6bkuIDkuKpUaW1lU3BhbgogICAqIEBwYXJhbSB7VGltZVNwYW59IHRzCiAgICoKICAgKiBAcmV0dXJuIHtUaW1lU3Bhbn0g5q2k5a6e5L6L55qE5YC85LiOIHRzIOeahOWAvOS5i+WSjOeahOaWsOeahCBUaW1lU3Bhbu+8jOS4jeaUueWPmOW9k+WJjeWunuS+iy4KICAgKi9fY3JlYXRlQ2xhc3MoVGltZVNwYW4sW3trZXk6ImFkZCIsdmFsdWU6ZnVuY3Rpb24gYWRkKHRzKXtyZXR1cm4gbmV3IFRpbWVTcGFuKDAsMCwwLDAsdGhpcy5fbWlsbGlzZWNvbmRzK3RzLl9taWxsaXNlY29uZHMpO30vKioKICAgKiDov5Tlm57mlrDnmoQgVGltZVNwYW4g5a+56LGh77yM5YW25YC85piv5b2T5YmNIFRpbWVTcGFuIOWvueixoeeahOe7neWvueWAvC4KICAgKiBAcmV0dXJuIHtUaW1lU3Bhbn0g5paw55qEIFRpbWVTcGFu77yM5YW25YC85piv5b2T5YmNIFRpbWVTcGFuIOWvueixoeeahOe7neWvueWAvC4KICAgKi99LHtrZXk6ImFicyIsdmFsdWU6ZnVuY3Rpb24gYWJzKCl7cmV0dXJuIG5ldyBUaW1lU3BhbigwLDAsMCwwLE1hdGguYWJzKHRoaXMuX21pbGxpc2Vjb25kcykpO30vKioKICAgKiDojrflj5bnlLHlvZPliY0gVGltZVNwYW4g57uT5p6E6KGo56S655qE5pW05aSp5pWwCiAgICogQHR5cGUge251bWJlcn0KICAgKi99LHtrZXk6ImZvcm1hdCIsLyoqCiAgICog5oyJ5oyH5a6a5qC85byP5qC85byP5YyWCiAgICogROKAlOKAlHRvdGFsRGF5cwogICAqIEjigJTigJR0b3RhbEhvdXJzCiAgICogTeKAlOKAlHRvdGFsTWludXRlcwogICAqIFPigJTigJR0b3RhbFNlY29uZHMKICAgKiBJ4oCU4oCUdG90YWxNaWxsaXNlY29uZHMKICAgKiBk4oCU4oCU5aSpCiAgICogaOKAlOKAlOaXtgogICAqIG3igJTigJTliIYKICAgKiBz4oCU4oCU56eSCiAgICogaeKAlOKAlOavq+enkgogICAqCiAgICogQHBhcmFtIHtzdHJpbmd9IGZvcm1hdFN0ciDmoLzlvI/lrZfnrKbkuLIKICAgKiBAcmV0dXJuIHtzdHJpbmd9IOagvOW8j+WMluS5i+WQjueahOWtl+espuS4sgogICAqCiAgICovdmFsdWU6ZnVuY3Rpb24gZm9ybWF0KCl7dmFyIGZvcm1hdFN0cj1hcmd1bWVudHMubGVuZ3RoPjAmJmFyZ3VtZW50c1swXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMF06J2hoOm1tOnNzJzt2YXIgbz17RDpNYXRoLmZsb29yKHRoaXMudG90YWxEYXlzKSxIOk1hdGguZmxvb3IodGhpcy50b3RhbEhvdXJzKSxNOk1hdGguZmxvb3IodGhpcy50b3RhbE1pbnV0ZXMpLFM6TWF0aC5mbG9vcih0aGlzLnRvdGFsU2Vjb25kcyksSTpNYXRoLmZsb29yKHRoaXMudG90YWxNaWxsaXNlY29uZHMpLGQ6dGhpcy5kYXlzLGg6dGhpcy5ob3VycyxtOnRoaXMubWludXRlcyxzOnRoaXMuc2Vjb25kcyxpOnRoaXMubWlsbGlzZWNvbmRzfTt2YXIgcmVzdWx0PWZvcm1hdFN0cjt2YXIgX2xvb3A9ZnVuY3Rpb24gX2xvb3Aoa2V5KXtyZXN1bHQ9cmVzdWx0LnJlcGxhY2UobmV3IFJlZ0V4cCgnKCcra2V5KycrKScpLHJlcGxhY2VmdW4pO2Z1bmN0aW9uIHJlcGxhY2VmdW4oKXt2YXIgYXJnPWFyZ3VtZW50czt2YXIgbnVtYmVyPW9ba2V5XTt2YXIgY3VycmVudFJlZ1N0cj1hcmdbMV0ucmVwbGFjZShuZXcgUmVnRXhwKGtleSwnZycpLCcwJyk7dmFyIG51bWJlclN0cj1udW1iZXIudG9TdHJpbmcoKTtpZihudW1iZXJTdHIubGVuZ3RoPmN1cnJlbnRSZWdTdHIubGVuZ3RoKXJldHVybiBudW1iZXJTdHI7ZWxzZSByZXR1cm4gY3VycmVudFJlZ1N0ci5zdWJzdHIoMCxjdXJyZW50UmVnU3RyLmxlbmd0aC1udW1iZXJTdHIubGVuZ3RoKStudW1iZXJTdHI7fX07Zm9yKHZhciBrZXkgaW4gbyl7X2xvb3Aoa2V5KTt9cmV0dXJuIHJlc3VsdDt9fSx7a2V5OiJkYXlzIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7aWYodGhpcy5fbWlsbGlzZWNvbmRzPj0wKXJldHVybiBNYXRoLmZsb29yKHRoaXMudG90YWxEYXlzKTtlbHNlIHJldHVybiBNYXRoLmNlaWwodGhpcy50b3RhbERheXMpO30vKioKICAgKiDojrflj5bnlLHlvZPliY0gVGltZVNwYW4g57uT5p6E6KGo56S655qE5pW05bCP5pe25pWwCiAgICogQHR5cGUge251bWJlcn0KICAgKi99LHtrZXk6ImhvdXJzIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7aWYodGhpcy5fbWlsbGlzZWNvbmRzPj0wKXJldHVybiBNYXRoLmZsb29yKHRoaXMudG90YWxIb3VycyklREFZX1RPX0hPVVI7ZWxzZSByZXR1cm4gTWF0aC5jZWlsKHRoaXMudG90YWxIb3VycyklREFZX1RPX0hPVVI7fS8qKgogICAqIOiOt+WPlueUseW9k+WJjSBUaW1lU3BhbiDnu5PmnoTooajnpLrnmoTmlbTliIbpkp/mlbAKICAgKiBAdHlwZSB7bnVtYmVyfQogICAqL30se2tleToibWludXRlcyIsZ2V0OmZ1bmN0aW9uIGdldCgpe2lmKHRoaXMuX21pbGxpc2Vjb25kcz49MClyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnRvdGFsTWludXRlcyklSE9VUl9UT19NSU5VVEU7ZWxzZSByZXR1cm4gTWF0aC5jZWlsKHRoaXMudG90YWxNaW51dGVzKSVIT1VSX1RPX01JTlVURTt9LyoqCiAgICog6I635Y+W55Sx5b2T5YmNIFRpbWVTcGFuIOe7k+aehOihqOekuueahOaVtOenkuaVsAogICAqIEB0eXBlIHtudW1iZXJ9CiAgICovfSx7a2V5OiJzZWNvbmRzIixnZXQ6ZnVuY3Rpb24gZ2V0KCl7aWYodGhpcy5fbWlsbGlzZWNvbmRzPj0wKXJldHVybiBNYXRoLmZsb29yKHRoaXMudG90YWxTZWNvbmRzKSVNSU5VVEVfVE9fU0VDT05EO2Vsc2UgcmV0dXJuIE1hdGguY2VpbCh0aGlzLnRvdGFsU2Vjb25kcyklTUlOVVRFX1RPX1NFQ09ORDt9LyoqCiAgICog6I635Y+W55Sx5b2T5YmNIFRpbWVTcGFuIOe7k+aehOihqOekuueahOaVtOavq+enkuaVsAogICAqIEB0eXBlIHtudW1iZXJ9CiAgICovfSx7a2V5OiJtaWxsaXNlY29uZHMiLGdldDpmdW5jdGlvbiBnZXQoKXtpZih0aGlzLl9taWxsaXNlY29uZHM+PTApcmV0dXJuIE1hdGguZmxvb3IodGhpcy5fbWlsbGlzZWNvbmRzKSVTRUNPTkRfVE9fTUlMTElTRUNPTkQ7ZWxzZSByZXR1cm4gTWF0aC5jZWlsKHRoaXMuX21pbGxpc2Vjb25kcyklU0VDT05EX1RPX01JTExJU0VDT05EO30vKioKICAgKiDojrflj5bku6XmlbTlpKnmlbDlkozlpKnnmoTlsI/mlbDpg6jliIbooajnpLrnmoTlvZPliY0gVGltZVNwYW4g57uT5p6E55qE5YC8CiAgICogQHR5cGUge251bWJlcn0KICAgKi99LHtrZXk6InRvdGFsRGF5cyIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLnRvdGFsSG91cnMvREFZX1RPX0hPVVI7fS8qKgogICAqIOiOt+WPluS7peaVtOWwj+aXtuaVsOWSjOWwj+aXtueahOWwj+aVsOmDqOWIhuihqOekuueahOW9k+WJjSBUaW1lU3BhbiDnu5PmnoTnmoTlgLwKICAgKiBAdHlwZSB7bnVtYmVyfQogICAqL30se2tleToidG90YWxIb3VycyIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLnRvdGFsTWludXRlcy9IT1VSX1RPX01JTlVURTt9LyoqCiAgICog6I635Y+W5Lul5pW05YiG6ZKf5pWw5ZKM5YiG6ZKf55qE5bCP5pWw6YOo5YiG6KGo56S655qE5b2T5YmNIFRpbWVTcGFuIOe7k+aehOeahOWAvAogICAqIEB0eXBlIHtudW1iZXJ9CiAgICovfSx7a2V5OiJ0b3RhbE1pbnV0ZXMiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy50b3RhbFNlY29uZHMvTUlOVVRFX1RPX1NFQ09ORDt9LyoqCiAgICog6I635Y+W5Lul5pW056eS5pWw5ZKM56eS55qE5bCP5pWw6YOo5YiG6KGo56S655qE5b2T5YmNIFRpbWVTcGFuIOe7k+aehOeahOWAvAogICAqIEB0eXBlIHtudW1iZXJ9CiAgICovfSx7a2V5OiJ0b3RhbFNlY29uZHMiLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fbWlsbGlzZWNvbmRzL1NFQ09ORF9UT19NSUxMSVNFQ09ORDt9LyoqCiAgICog6I635Y+W5Lul5pW05q+r56eS5pWw5ZKM5q+r56eS55qE5bCP5pWw6YOo5YiG6KGo56S655qE5b2T5YmNIFRpbWVTcGFuIOe7k+aehOeahOWAvAogICAqIEB0eXBlIHtudW1iZXJ9CiAgICovfSx7a2V5OiJ0b3RhbE1pbGxpc2Vjb25kcyIsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9taWxsaXNlY29uZHM7fX1dKTtyZXR1cm4gVGltZVNwYW47fSgpO2V4cG9ydCBkZWZhdWx0IFRpbWVTcGFuO2lmKHR5cGVvZiBUaW1lU3BhbiE9PSd1bmRlZmluZWQnJiZUaW1lU3BhbiYmVGltZVNwYW49PT1PYmplY3QoVGltZVNwYW4pJiZPYmplY3QuaXNFeHRlbnNpYmxlKFRpbWVTcGFuKSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KFRpbWVTcGFuLCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJUaW1lU3BhbiIsZmlsZW5hbWU6InNyYy9jb3JlL1RpbWVTcGFuLnRzIn19KTt9"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts"],"names":["DAY_TO_HOUR","HOUR_TO_MINUTE","MINUTE_TO_SECOND","SECOND_TO_MILLISECOND","TimeSpan","days","hours","minutes","seconds","milliseconds","_milliseconds","ts","Math","abs","formatStr","o","D","floor","totalDays","H","totalHours","M","totalMinutes","S","totalSeconds","I","totalMilliseconds","d","h","m","s","i","result","key","replace","RegExp","replacefun","arg","arguments","number","currentRegStr","numberStr","toString","length","substr","ceil"],"mappings":"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","sourcesContent":["const DAY_TO_HOUR = 24;\nconst HOUR_TO_MINUTE = 60;\nconst MINUTE_TO_SECOND = 60;\nconst SECOND_TO_MILLISECOND = 1000;\n\n/**\n * 表示一个时间段\n * @author : xujunjie (yinhunfeixue@163.com)\n * @Date   : 2017-11-19 12:52:53\n */\nclass TimeSpan {\n  private _milliseconds: number;\n\n  /**\n   * 实例化TimeSpan.\n   * @param {number} days 天数.\n   * @param {number} hours 小时.\n   * @param {number} minutes 分钟.\n   * @param {number} seconds 秒数.\n   * @param {number} milliseconds 毫秒.\n   */\n  constructor(days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n    this._milliseconds = milliseconds;\n    this._milliseconds += seconds * SECOND_TO_MILLISECOND;\n    this._milliseconds += minutes * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n    this._milliseconds += hours * HOUR_TO_MINUTE * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n    this._milliseconds +=\n      days * DAY_TO_HOUR * HOUR_TO_MINUTE * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n  }\n\n  /**\n   * 此实例加上另一个TimeSpan\n   * @param {TimeSpan} ts\n   *\n   * @return {TimeSpan} 此实例的值与 ts 的值之和的新的 TimeSpan，不改变当前实例.\n   */\n  add(ts: TimeSpan) {\n    return new TimeSpan(0, 0, 0, 0, this._milliseconds + ts._milliseconds);\n  }\n\n  /**\n   * 返回新的 TimeSpan 对象，其值是当前 TimeSpan 对象的绝对值.\n   * @return {TimeSpan} 新的 TimeSpan，其值是当前 TimeSpan 对象的绝对值.\n   */\n  abs() {\n    return new TimeSpan(0, 0, 0, 0, Math.abs(this._milliseconds));\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整天数\n   * @type {number}\n   */\n  get days() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalDays);\n    else return Math.ceil(this.totalDays);\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整小时数\n   * @type {number}\n   */\n  get hours() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalHours) % DAY_TO_HOUR;\n    else return Math.ceil(this.totalHours) % DAY_TO_HOUR;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整分钟数\n   * @type {number}\n   */\n  get minutes() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalMinutes) % HOUR_TO_MINUTE;\n    else return Math.ceil(this.totalMinutes) % HOUR_TO_MINUTE;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整秒数\n   * @type {number}\n   */\n  get seconds() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalSeconds) % MINUTE_TO_SECOND;\n    else return Math.ceil(this.totalSeconds) % MINUTE_TO_SECOND;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整毫秒数\n   * @type {number}\n   */\n  get milliseconds() {\n    if (this._milliseconds >= 0) return Math.floor(this._milliseconds) % SECOND_TO_MILLISECOND;\n    else return Math.ceil(this._milliseconds) % SECOND_TO_MILLISECOND;\n  }\n\n  /**\n   * 获取以整天数和天的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalDays() {\n    return this.totalHours / DAY_TO_HOUR;\n  }\n  /**\n   * 获取以整小时数和小时的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalHours() {\n    return this.totalMinutes / HOUR_TO_MINUTE;\n  }\n  /**\n   * 获取以整分钟数和分钟的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalMinutes() {\n    return this.totalSeconds / MINUTE_TO_SECOND;\n  }\n  /**\n   * 获取以整秒数和秒的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalSeconds() {\n    return this._milliseconds / SECOND_TO_MILLISECOND;\n  }\n  /**\n   * 获取以整毫秒数和毫秒的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalMilliseconds() {\n    return this._milliseconds;\n  }\n\n  /**\n   * 按指定格式格式化\n   * D——totalDays\n   * H——totalHours\n   * M——totalMinutes\n   * S——totalSeconds\n   * I——totalMilliseconds\n   * d——天\n   * h——时\n   * m——分\n   * s——秒\n   * i——毫秒\n   *\n   * @param {string} formatStr 格式字符串\n   * @return {string} 格式化之后的字符串\n   *\n   */\n  format(formatStr = 'hh:mm:ss') {\n    let o = {\n      D: Math.floor(this.totalDays),\n      H: Math.floor(this.totalHours),\n      M: Math.floor(this.totalMinutes),\n      S: Math.floor(this.totalSeconds),\n      I: Math.floor(this.totalMilliseconds),\n      d: this.days,\n      h: this.hours,\n      m: this.minutes,\n      s: this.seconds,\n      i: this.milliseconds,\n    };\n    let result = formatStr;\n    for (let key in o) {\n      result = result.replace(new RegExp('(' + key + '+)'), replacefun);\n\n      function replacefun() {\n        let arg = arguments;\n        let number = (o as any)[key];\n        let currentRegStr = arg[1].replace(new RegExp(key, 'g'), '0');\n\n        let numberStr = number.toString();\n        if (numberStr.length > currentRegStr.length) return numberStr;\n        else return currentRegStr.substr(0, currentRegStr.length - numberStr.length) + numberStr;\n      }\n    }\n    return result;\n  }\n}\n\nexport default TimeSpan;\n"]}]}