{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/utils/AntdUtil.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/utils/AntdUtil.tsx","mtime":1608989771294},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSIvVXNlcnMveHVqdW5qaWUvRG9jdW1lbnRzL2dpdC9wcm9qZWN0Q29tcG9uZW50L25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjtpbXBvcnQiYW50ZC9lcy90cmVlL3N0eWxlL2NzcyI7aW1wb3J0IF9UcmVlIGZyb20iYW50ZC9lcy90cmVlIjtpbXBvcnQiYW50ZC9lcy9zZWxlY3Qvc3R5bGUvY3NzIjtpbXBvcnQgX1NlbGVjdCBmcm9tImFudGQvZXMvc2VsZWN0IjtpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20iL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siO2ltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSIvVXNlcnMveHVqdW5qaWUvRG9jdW1lbnRzL2dpdC9wcm9qZWN0Q29tcG9uZW50L25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO3ZhciBBbnRkVXRpbD0vKiNfX1BVUkVfXyovZnVuY3Rpb24oKXtmdW5jdGlvbiBBbnRkVXRpbCgpe19jbGFzc0NhbGxDaGVjayh0aGlzLEFudGRVdGlsKTt9X2NyZWF0ZUNsYXNzKEFudGRVdGlsLG51bGwsW3trZXk6ImNyZWF0ZVNlbGVjdE9wdGlvbnMiLC8qKgogICAqIOagueaNruaVsOaNrua6kOWIm+W7unNlbGVjdOeahG9wdGlvbnPliJfooagKICAgKiBAcGFyYW0gZGF0YVNvdXJjZSDmlbDmja7mupAKICAgKiBAcGFyYW0gbGFiZWxGdW5jdGlvbiDmiormr4/kuIDpobnovazmjaLmiJDmmL7npLrmloflrZfnmoTlh73mlbDvvIzlpoLmnpzkuI3orr7nva7vvIzliJnkvb/nlKh0b1N0cmluZygpCiAgICovdmFsdWU6ZnVuY3Rpb24gY3JlYXRlU2VsZWN0T3B0aW9ucyhkYXRhU291cmNlLGxhYmVsRnVuY3Rpb24sdmFsdWVGdW5jdGlvbil7aWYoZGF0YVNvdXJjZSYmZGF0YVNvdXJjZS5sZW5ndGgpe3JldHVybiBkYXRhU291cmNlLm1hcChmdW5jdGlvbihpdGVtLGkpe3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KF9TZWxlY3QuT3B0aW9uLHtrZXk6aS50b1N0cmluZygpLHZhbHVlOnZhbHVlRnVuY3Rpb24/dmFsdWVGdW5jdGlvbihpdGVtKTppdGVtfSxsYWJlbEZ1bmN0aW9uP2xhYmVsRnVuY3Rpb24oaXRlbSk6aXRlbSk7fSk7fXJldHVybltdO30vKioKICAgKiDmuLLmn5PmoJEKICAgKgogICAqIEBwYXJhbSBkYXRhU291cmNlIOaVsOaNrua6kAogICAqIEBwYXJhbSB0cmVlUHJvcHMg57uZ5qCR55qEcHJvcHPvvIzkvovlpoJvblNlbGVjdAogICAqIEBwYXJhbSBnZXRLZXkg6I635Y+Wa2V55YC877yM5Y+v5Lul5piv5bGe5oCn5ZCN56ew77yM5Lmf5Y+v5Lul5piv5LiA5Liq5Ye95pWwCiAgICogQHBhcmFtIGdldFRpdGxlIOiOt+WPlnRpdGxl5YC877yM5Y+v5Lul5piv5bGe5oCn5ZCN56ew77yM5Lmf5Y+v5Lul5piv5LiA5Liq5Ye95pWwCiAgICogQHBhcmFtIGdldENoaWxkcmVuIOiOt+WPluWtkOWFg+e0oOWIl+ihqO+8jOWPr+S7peaYr+WxnuaAp+WQjeensO+8jOS5n+WPr+S7peaYr+S4gOS4quWHveaVsAogICAqIEBwYXJhbSBjcmVhdGVOb2RlUHJvcHMg5Yib5bu657uZ5q+P5Liqbm9kZeeahHByb3BzCiAgICovfSx7a2V5OiJyZW5kZVRyZWUiLHZhbHVlOmZ1bmN0aW9uIHJlbmRlVHJlZShkYXRhU291cmNlLHRyZWVQcm9wcyl7dmFyIGdldEtleT1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06J2lkJzt2YXIgZ2V0VGl0bGU9YXJndW1lbnRzLmxlbmd0aD4zJiZhcmd1bWVudHNbM10hPT11bmRlZmluZWQ/YXJndW1lbnRzWzNdOiduYW1lJzt2YXIgZ2V0Q2hpbGRyZW49YXJndW1lbnRzLmxlbmd0aD40JiZhcmd1bWVudHNbNF0hPT11bmRlZmluZWQ/YXJndW1lbnRzWzRdOidjaGlsZHJlbic7dmFyIGNyZWF0ZU5vZGVQcm9wcz1hcmd1bWVudHMubGVuZ3RoPjU/YXJndW1lbnRzWzVdOnVuZGVmaW5lZDtpZihkYXRhU291cmNlKXt2YXIgdHJlZURhdGE9dGhpcy5sb29wVHJlZU5vZGUoZGF0YVNvdXJjZSxnZXRLZXksZ2V0VGl0bGUsZ2V0Q2hpbGRyZW4sY3JlYXRlTm9kZVByb3BzKTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChfVHJlZSxPYmplY3QuYXNzaWduKHt9LHRyZWVQcm9wcyx7dHJlZURhdGE6dHJlZURhdGF9KSk7fXJldHVybiBudWxsO319LHtrZXk6Imxvb3BUcmVlTm9kZSIsdmFsdWU6ZnVuY3Rpb24gbG9vcFRyZWVOb2RlKHRyZWVEYXRhKXt2YXIgX3RoaXM9dGhpczt2YXIgZ2V0S2V5PWFyZ3VtZW50cy5sZW5ndGg+MSYmYXJndW1lbnRzWzFdIT09dW5kZWZpbmVkP2FyZ3VtZW50c1sxXTonaWQnO3ZhciBnZXRUaXRsZT1hcmd1bWVudHMubGVuZ3RoPjImJmFyZ3VtZW50c1syXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMl06J25hbWUnO3ZhciBnZXRDaGlsZHJlbj1hcmd1bWVudHMubGVuZ3RoPjMmJmFyZ3VtZW50c1szXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbM106J2NoaWxkcmVuJzt2YXIgY3JlYXRlTm9kZVByb3BzPWFyZ3VtZW50cy5sZW5ndGg+ND9hcmd1bWVudHNbNF06dW5kZWZpbmVkO3JldHVybiB0cmVlRGF0YS5tYXAoZnVuY3Rpb24oaXRlbSl7dmFyIGNoaWxkcmVuPXR5cGVvZiBnZXRDaGlsZHJlbj09PSdzdHJpbmcnP2l0ZW1bZ2V0Q2hpbGRyZW5dOmdldENoaWxkcmVuKGl0ZW0pO3ZhciBrZXk9dHlwZW9mIGdldEtleT09PSdzdHJpbmcnP2l0ZW1bZ2V0S2V5XTpnZXRLZXkoaXRlbSk7dmFyIHRpdGxlPXR5cGVvZiBnZXRUaXRsZT09PSdzdHJpbmcnP2l0ZW1bZ2V0VGl0bGVdOmdldFRpdGxlKGl0ZW0pO3ZhciBvdGhlclByb3BzPWNyZWF0ZU5vZGVQcm9wcz9jcmVhdGVOb2RlUHJvcHMoaXRlbSk6bnVsbDt2YXIgcmVzdWx0PV9vYmplY3RTcHJlYWQoe2tleTprZXksdGl0bGU6dGl0bGV9LG90aGVyUHJvcHMpO2lmKGNoaWxkcmVuKXtyZXN1bHQuY2hpbGRyZW49X3RoaXMubG9vcFRyZWVOb2RlKGNoaWxkcmVuLGdldEtleSxnZXRUaXRsZSxnZXRDaGlsZHJlbixjcmVhdGVOb2RlUHJvcHMpO31yZXR1cm4gcmVzdWx0O30pO319XSk7cmV0dXJuIEFudGRVdGlsO30oKTtleHBvcnQgZGVmYXVsdCBBbnRkVXRpbDtpZih0eXBlb2YgQW50ZFV0aWwhPT0ndW5kZWZpbmVkJyYmQW50ZFV0aWwmJkFudGRVdGlsPT09T2JqZWN0KEFudGRVdGlsKSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShBbnRkVXRpbCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShBbnRkVXRpbCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiQW50ZFV0aWwiLGZpbGVuYW1lOiJzcmMvdXRpbHMvQW50ZFV0aWwudHN4In19KTt9"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/utils/AntdUtil.tsx"],"names":["React","AntdUtil","dataSource","labelFunction","valueFunction","length","map","item","i","toString","treeProps","getKey","getTitle","getChildren","createNodeProps","treeData","loopTreeNode","children","key","title","otherProps","result"],"mappings":"gnBAGA,MAAOA,CAAAA,KAAP,KAAiC,OAAjC,C,GAEMC,CAAAA,Q,oIACJ;AACF;AACA;AACA;AACA,K,mCAEIC,U,CACAC,a,CACAC,a,CACW,CACX,GAAIF,UAAU,EAAIA,UAAU,CAACG,MAA7B,CAAqC,CACnC,MAAOH,CAAAA,UAAU,CAACI,GAAX,CAAe,SAACC,IAAD,CAAOC,CAAP,CAAa,CACjC,mBACE,4BAAQ,MAAR,EAAe,GAAG,CAAEA,CAAC,CAACC,QAAF,EAApB,CAAkC,KAAK,CAAEL,aAAa,CAAGA,aAAa,CAACG,IAAD,CAAhB,CAAyBA,IAA/E,EACGJ,aAAa,CAAGA,aAAa,CAACI,IAAD,CAAhB,CAAyBA,IADzC,CADF,CAKD,CANM,CAAP,CAOD,CACD,MAAO,EAAP,CACD,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K,4CAEIL,U,CACAQ,S,CAK2B,IAJ3BC,CAAAA,MAI2B,2DAJc,IAId,IAH3BC,CAAAA,QAG2B,2DAHmB,MAGnB,IAF3BC,CAAAA,WAE2B,2DAFgB,UAEhB,IAD3BC,CAAAA,eAC2B,2CAC3B,GAAIZ,UAAJ,CAAgB,CACd,GAAMa,CAAAA,QAAQ,CAAG,KAAKC,YAAL,CACfd,UADe,CAEfS,MAFe,CAGfC,QAHe,CAIfC,WAJe,CAKfC,eALe,CAAjB,CAOA,mBAAO,2CAAUJ,SAAV,EAAqB,QAAQ,CAAEK,QAA/B,GAAP,CACD,CACD,MAAO,KAAP,CACD,C,kDAGCA,Q,CAKwB,mBAJxBJ,CAAAA,MAIwB,2DAJiB,IAIjB,IAHxBC,CAAAA,QAGwB,2DAHsB,MAGtB,IAFxBC,CAAAA,WAEwB,2DAFmB,UAEnB,IADxBC,CAAAA,eACwB,2CACxB,MAAOC,CAAAA,QAAQ,CAACT,GAAT,CAAa,SAAAC,IAAI,CAAI,CAC1B,GAAMU,CAAAA,QAAQ,CACZ,MAAOJ,CAAAA,WAAP,GAAuB,QAAvB,CAAmCN,IAAD,CAAcM,WAAd,CAAlC,CAA+DA,WAAW,CAACN,IAAD,CAD5E,CAEA,GAAMW,CAAAA,GAAG,CAAG,MAAOP,CAAAA,MAAP,GAAkB,QAAlB,CAA8BJ,IAAD,CAAcI,MAAd,CAA7B,CAAqDA,MAAM,CAACJ,IAAD,CAAvE,CACA,GAAMY,CAAAA,KAAK,CACT,MAAOP,CAAAA,QAAP,GAAoB,QAApB,CAAiCL,IAAD,CAAcK,QAAd,CAAhC,CAAwEA,QAAQ,CAACL,IAAD,CADlF,CAEA,GAAMa,CAAAA,UAAU,CAAGN,eAAe,CAAGA,eAAe,CAACP,IAAD,CAAlB,CAA2B,IAA7D,CACA,GAAMc,CAAAA,MAAgB,gBAAKH,GAAG,CAAHA,GAAL,CAAUC,KAAK,CAALA,KAAV,EAAoBC,UAApB,CAAtB,CACA,GAAIH,QAAJ,CAAc,CACZI,MAAM,CAACJ,QAAP,CAAkB,KAAI,CAACD,YAAL,CAChBC,QADgB,CAEhBN,MAFgB,CAGhBC,QAHgB,CAIhBC,WAJgB,CAKhBC,eALgB,CAAlB,CAOD,CACD,MAAOO,CAAAA,MAAP,CACD,CAlBM,CAAP,CAmBD,C,wBAGH,cAAepB,CAAAA,QAAf,C","sourcesContent":["import { Select, Tree } from 'antd';\nimport { TreeProps } from 'antd/lib/tree';\nimport { DataNode } from 'rc-tree/lib/interface';\nimport React, { ReactNode } from 'react';\n\nclass AntdUtil {\n  /**\n   * 根据数据源创建select的options列表\n   * @param dataSource 数据源\n   * @param labelFunction 把每一项转换成显示文字的函数，如果不设置，则使用toString()\n   */\n  public static createSelectOptions<T extends React.ReactText>(\n    dataSource: T[],\n    labelFunction?: (item: T) => ReactNode,\n    valueFunction?: (item: T) => React.ReactText,\n  ): ReactNode {\n    if (dataSource && dataSource.length) {\n      return dataSource.map((item, i) => {\n        return (\n          <Select.Option key={i.toString()} value={valueFunction ? valueFunction(item) : item}>\n            {labelFunction ? labelFunction(item) : item}\n          </Select.Option>\n        );\n      });\n    }\n    return [];\n  }\n\n  /**\n   * 渲染树\n   *\n   * @param dataSource 数据源\n   * @param treeProps 给树的props，例如onSelect\n   * @param getKey 获取key值，可以是属性名称，也可以是一个函数\n   * @param getTitle 获取title值，可以是属性名称，也可以是一个函数\n   * @param getChildren 获取子元素列表，可以是属性名称，也可以是一个函数\n   * @param createNodeProps 创建给每个node的props\n   */\n  public static rendeTree<T extends any>(\n    dataSource: T[],\n    treeProps?: TreeProps,\n    getKey: ((item: T) => string) | string = 'id',\n    getTitle: ((item: T) => ReactNode) | string = 'name',\n    getChildren: ((item: T) => T[]) | string = 'children',\n    createNodeProps?: (item: T) => DataNode,\n  ): React.ReactElement | null {\n    if (dataSource) {\n      const treeData = this.loopTreeNode(\n        dataSource,\n        getKey,\n        getTitle,\n        getChildren,\n        createNodeProps,\n      );\n      return <Tree {...treeProps} treeData={treeData} />;\n    }\n    return null;\n  }\n\n  private static loopTreeNode<T extends any>(\n    treeData: T[],\n    getKey: ((item: T) => string) | string = 'id',\n    getTitle: ((item: T) => ReactNode) | string = 'name',\n    getChildren: ((item: T) => T[]) | string = 'children',\n    createNodeProps?: (item: T) => DataNode,\n  ): DataNode[] | undefined {\n    return treeData.map(item => {\n      const children =\n        typeof getChildren === 'string' ? (item as any)[getChildren] : getChildren(item);\n      const key = typeof getKey === 'string' ? (item as any)[getKey] : getKey(item);\n      const title =\n        typeof getTitle === 'string' ? ((item as any)[getTitle] as ReactNode) : getTitle(item);\n      const otherProps = createNodeProps ? createNodeProps(item) : null;\n      const result: DataNode = { key, title, ...otherProps };\n      if (children) {\n        result.children = this.loopTreeNode(\n          children,\n          getKey,\n          getTitle,\n          getChildren,\n          createNodeProps,\n        );\n      }\n      return result;\n    });\n  }\n}\n\nexport default AntdUtil;\n"]}]}