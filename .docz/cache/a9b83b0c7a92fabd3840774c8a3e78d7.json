{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/TreeCurd/TreeCurd.mdx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/TreeCurd/TreeCurd.mdx","mtime":1594367130784},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js","mtime":1609062631902},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/TreeCurd/TreeCurd.mdx"],"names":["React","mdx","Playground","Props","TreeCurd","EditType","FormUtil","layoutProps","MDXLayout","MDXContent","components","props","Button","Input","Form","Space","message","formRef","createRef","ids","info","fetch","then","id","name","children","extraData","selectedItems","selectedKeys","type","refresh","current","ADD","resetFields","EDIT","setFieldsValue","renderFormItems","label","content","labelSpan","formItemProps","rules","required","Component","marginTop","state","checkedItems","defaultCheckedKeys","checkedInfo","checkedNodes","filter","item","length","map","key","setState","node","style","color","childrenCustom","expandedKeys","defaultRender","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport TreeCurd, {EditType} from './TreeCurd';\nimport { Button, Input, Form, Space, message } from 'antd';\nimport FormUtil from '../utils/FormUtil'\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"treecurd\"\n    }}>{`TreeCurd`}</h1>\n    <p>{`一个可以自定义树操作的树组件`}</p>\n    <h3 {...{\n      \"id\": \"主要做了以下工作\"\n    }}>{`主要做了以下工作`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`处理树的编辑 新增  删除  编辑`}</li>\n      <li parentName=\"ul\">{`处理树的多选`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"你可以\"\n    }}>{`你可以`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`自定义树编辑区域`}</li>\n      <li parentName=\"ul\">{`自定义对树的操作`}</li>\n      <li parentName=\"ul\">{`自定义是否可多选`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <p>{`涉及网络操作，建议在开发者工具中限制后观察示例`}</p>\n    <h2 {...{\n      \"id\": \"基本用法\"\n    }}>{`基本用法`}</h2>\n    <Playground __position={0} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.formRef = React.createRef()\\n    }\\n    render() {\\n      return (\\n        <TreeCurd\\n          getKey=\\\"id\\\"\\n          showSearch\\n          deleteFunction={ids => message.info(ids)}\\n          getTreeData={() => {\\n            return fetch(\\'./\\').then(() => {\\n              return [\\n                {\\n                  id: \\'0-0\\',\\n                  name: \\'0-0\\',\\n                  children: [\\n                    {\\n                      id: \\'0-0-1\\',\\n                      name: \\'0-0-1\\',\\n                    },\\n                  ],\\n                },\\n                {\\n                  id: \\'0-1\\',\\n                  name: \\'0-1\\',\\n                  children: [\\n                    {\\n                      id: \\'0-1-1\\',\\n                      name: \\'0-1-1\\',\\n                    },\\n                  ],\\n                },\\n              ]\\n            })\\n          }}\\n          renderEditExtra={extraData => {\\n            const { selectedItems, selectedKeys, type, refresh } = extraData\\n            if (type && this.formRef && this.formRef.current) {\\n              if (type === EditType.ADD) {\\n                this.formRef.current.resetFields()\\n              } else if (type === EditType.EDIT) {\\n                this.formRef.current.setFieldsValue(selectedItems[0])\\n              } else {\\n                this.formRef.current.resetFields()\\n              }\\n            }\\n            return (\\n              <React.Fragment>\\n                <Form ref={this.formRef}>\\n                  {FormUtil.renderFormItems(\\n                    [\\n                      {\\n                        label: \\'类型\\',\\n                        content: (\\n                          <span>\\n                            {type === \\'add\\' ? \\'新增\\' : type ? \\'编辑\\' : \\'\\'}\\n                          </span>\\n                        ),\\n                        name: \\'type\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: false,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'名称\\',\\n                        content: <Input />,\\n                        name: \\'name\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'编码\\',\\n                        content: <Input />,\\n                        name: \\'id\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        labelSpan: 3,\\n                        content: (\\n                          <div className=\\\"fb-ControlGroup\\\">\\n                            <Space>\\n                              <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n                                确定\\n                              </Button>\\n                              <Button onClick={refresh}>重置</Button>\\n                            </Space>\\n                          </div>\\n                        ),\\n                      },\\n                    ],\\n                    1,\\n                  )}\\n                </Form>\\n              </React.Fragment>\\n            )\\n          }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={``} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.formRef = React.createRef();\n        }\n\n        render() {\n          return <TreeCurd getKey='id' showSearch deleteFunction={ids => message.info(ids)} getTreeData={() => {\n            return fetch('./').then(() => {\n              return [{\n                id: \"0-0\",\n                name: \"0-0\",\n                children: [{\n                  id: \"0-0-1\",\n                  name: \"0-0-1\"\n                }]\n              }, {\n                id: \"0-1\",\n                name: \"0-1\",\n                children: [{\n                  id: \"0-1-1\",\n                  name: \"0-1-1\"\n                }]\n              }];\n            });\n          }} renderEditExtra={extraData => {\n            const {\n              selectedItems,\n              selectedKeys,\n              type,\n              refresh\n            } = extraData;\n\n            if (type && this.formRef && this.formRef.current) {\n              if (type === EditType.ADD) {\n                this.formRef.current.resetFields();\n              } else if (type === EditType.EDIT) {\n                this.formRef.current.setFieldsValue(selectedItems[0]);\n              } else {\n                this.formRef.current.resetFields();\n              }\n            }\n\n            return <React.Fragment>\n                <Form ref={this.formRef} mdxType=\"Form\">\n                  {FormUtil.renderFormItems([{\n                  label: '类型',\n                  content: <span>{type === 'add' ? '新增' : type ? '编辑' : ''}</span>,\n                  name: 'type',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: false\n                    }]\n                  }\n                }, {\n                  label: '名称',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'name',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  label: '编码',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'id',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  labelSpan: 3,\n                  content: <div className=\"fb-ControlGroup\">\n                            <Space mdxType=\"Space\">\n                              <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">\n                                确定\n                              </Button>\n                              <Button onClick={refresh} mdxType=\"Button\">重置</Button>\n                            </Space>\n                          </div>\n                }], 1)}\n                </Form>\n              </React.Fragment>;\n          }} mdxType=\"TreeCurd\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"可以设置为可多选的树\"\n    }}>{`可以设置为可多选的树`}</h2>\n    <Playground __position={1} __code={'<TreeCurd\\n  checkable\\n  editEnable={false}\\n  getTreeData={() => {\\n    return fetch(\\'./\\').then(() => {\\n      return [\\n        {\\n          id: \\'0-0\\',\\n          name: \\'0-0\\',\\n          children: [\\n            {\\n              id: \\'0-0-1\\',\\n              name: \\'0-0-1\\',\\n            },\\n          ],\\n        },\\n        {\\n          id: \\'0-1\\',\\n          name: \\'0-1\\',\\n          children: [\\n            {\\n              id: \\'0-1-1\\',\\n              name: \\'0-1-1\\',\\n            },\\n          ],\\n        },\\n      ]\\n    })\\n  }}\\n  renderCheckExtra={extraData => {\\n    return (\\n      <div style={{ marginTop: 20 }}>\\n        <Space>\\n          <Button type=\\\"primary\\\">确定</Button>\\n          <Button>取消</Button>\\n        </Space>\\n      </div>\\n    )\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <TreeCurd checkable editEnable={false} getTreeData={() => {\n        return fetch('./').then(() => {\n          return [{\n            id: \"0-0\",\n            name: \"0-0\",\n            children: [{\n              id: \"0-0-1\",\n              name: \"0-0-1\"\n            }]\n          }, {\n            id: \"0-1\",\n            name: \"0-1\",\n            children: [{\n              id: \"0-1-1\",\n              name: \"0-1-1\"\n            }]\n          }];\n        });\n      }} renderCheckExtra={extraData => {\n        return <div style={{\n          marginTop: 20\n        }}>\n        <Space mdxType=\"Space\">\n          <Button type='primary' mdxType=\"Button\">确定</Button>\n          <Button mdxType=\"Button\">取消</Button>\n        </Space>\n      </div>;\n      }} mdxType=\"TreeCurd\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义结点props\"\n    }}>{`自定义结点props`}</h2>\n    <h2 {...{\n      \"id\": \"设置oncheck回调\"\n    }}>{`设置onCheck回调`}</h2>\n    <Playground __position={2} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.formRef = React.createRef()\\n      this.state = {\\n        checkedItems: [],\\n        defaultCheckedKeys: [],\\n      }\\n    }\\n    render() {\\n      return (\\n        <TreeCurd\\n          getKey=\\\"id\\\"\\n          deleteFunction={ids => message.info(ids)}\\n          checkable\\n          editEnable={false}\\n          defaultCheckedKeys={this.state.defaultCheckedKeys}\\n          onCheck={(extraData, checkedInfo) => {\\n            const { checkedItems } = extraData\\n            const { checkedNodes } = checkedInfo\\n            const defaultCheckedKeys = checkedNodes\\n              .filter(item => !item.children || !item.children.length)\\n              .map(item => item.key)\\n            this.setState({\\n              checkedItems,\\n              defaultCheckedKeys,\\n            })\\n          }}\\n          getTreeData={() => {\\n            return fetch(\\'./\\').then(() => {\\n              return [\\n                {\\n                  id: \\'0-0\\',\\n                  name: \\'0-0\\',\\n                  children: [\\n                    {\\n                      id: \\'0-0-1\\',\\n                      name: \\'0-0-1\\',\\n                    },\\n                  ],\\n                },\\n                {\\n                  id: \\'0-1\\',\\n                  name: \\'0-1\\',\\n                  children: [\\n                    {\\n                      id: \\'0-1-1\\',\\n                      name: \\'0-1-1\\',\\n                    },\\n                    {\\n                      id: \\'0-1-2\\',\\n                      name: \\'0-1-2\\',\\n                    },\\n                  ],\\n                },\\n              ]\\n            })\\n          }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtKZ2ncAh0B3FFJFI9APjgOACIgqwuhgew-kWdgoLPLtLESeZ2Ewo1ZXaD04AEchJEsZjWIEcjJKCaT0AYoiOPYa9wgiVAlgaVAZnCJYADEhSIJZnBmCUYCWI86NcNJ-KwoTqKU9V2EMgQiAAVRiKB7PdSRRPE8JoDgSRXI8rynPtQNJR8-UzXaMFUF0FFjlOXDnAIRIsXYbgOPWKIBGeVArnaAAGdgkxmLB2j3aszM7ApioAFkq9gADZKuq9YwGA_TvWgRJiv4ZxDgRB1MBgoR-Es6hKDgMyEU66tupoZwIFwy52AARkamr5ASpKpgAQTmbL2AjKDyBsKB0DDfiOWysQzujGR2BRTKYG4YA8PS964HkLca2AS7oBu4IADIwfGXiYEoZpgeu27uCRuUwGQyUBlQdp2AAfg2EGwwje6rnh0HUD26spBkKs3zMGFnMwMAwigKZCYep6KeO5dqwsYBWe4R7gBXCxyDguj2C1GAiGHbAQPQOwooIHA12oF1Be5mtheoFE0UlIUI37Sg7nutWNdN17QlhfX0LfM2NYmWwcG6tyxWaHKFY-U1aBdwmhdN-24BwFEslOk3bY1y6tm2bIm0l-52AAbQAXRqsONYZpmCHsTYdmyABpGBEjjpOU9T8mw7L23J0jY3fY1roCD6cwo3VsPGDkli2Nr23T3zxI-BUdB-C7s3MFgWh9LR7tUE-rg7H59grIqNIcDQbqI1njkK9TmsI52VwPFgYfTeyF4z1QffYE-xmoDgGAt-344YEZ0JmazyO84LuBPv9wOCCyHB04v0ztnKO6Be5_SPhragb8difQjDLTIWpoiuCWLvUB2lur3XnqHB-O8taQQ2O_dAMciAYVOgg1wSC_6QNNgdFSaDsgADkix2Rygw4hqBuo0PDvgx-z9X4gI_oXU67DmHlG4abR20BaACHXrQWU88ACELxJYfCuqTdgAAfTR7BlHyLUfjOgOBYAzgmDbXBkiogzDkZLNmKiiA4CjokcxFj8QO1vgQdKWRzoSPDoI4h8i4Al1cRYQBAiiHgOCRY-QLiH7yHvtvU87cqGuDgVggWviJyjkboaUcl1HwelfDgCYdAIx8wyS3Cx9ccnx0yRrHBISNZcGKiVc0JVFqNLNufI8LS2kdM6X4wxRUE51Ntg0gZTT0C9NaZtfpEzTbdI2qVNp5pZlRPmUoUZGtk5bP4uskJ4zOnNLlDMuZEzFm9LWbs4W6iwxXFqZUgZhz5nHOWZtVZZz5kWAuSc1ZHz9kDM2Y8zpzyJmvJmeaAATJ8r5Py3lQphYCgFISdnAtwUCgZidMkxIkfEmhm4j6xI1gk_ivtqkCHMIwCWUt2AEvVniimkhObUzMF-EA_kJJSTYpy-SbFilwCwIBXQIEDBgUIs5KCakbjUC0jpPS7BTJoDsoJOUjkVSoHFfaKCKSxHdAEm6To5BzSoiCJIKAEAPCSDQDIxmC11Wao1GaJYUFlYZgIEsBWurlUGtNIqe1jFHCcIgG5KVGkYo4A9LoSAIb1LUEkIG6NRBQ3UAilMBorr9BoUNnYFVwkPTWoyLa-Akh02OhVjQLNdxU3sEOjQdAnloDho9IFG-TK60NqgNW4SPKO4yWMfAei6qzB0JFv4OAiy55ZIAI6hGDTAR8o66ITtfEOxKvCoLOHFGJPEmEcraV0gQVddN7R0FCLKLiLweJ8VDodLUWpTokU7P0s8WoGiWAfSfF8JctRnn0oddyAAZd9OV2iLXJnyPQAgi2NHbgpLxtA24VIsFASgHYGrsC8JQckqB1UWDCBEM8WAzIYGgq4MMBAriYew7h8YzEUlXEsEnGjMJKhCLjkiJj6xb6wElGxq47sFaWBlpx6s3Gti0ACbHBjImbkRM_lcDjicaPsJIXHRjSmuNbsugANXiAyK42sCg0YyvMK4F6CBXpgOq8DGrIPQbfVymShHUSuEQ7lasxhTDcyMOwQAkAmADXlQAQUGAE6HQAIW5OLgPGHkmmeMSfAfxzUOBBPCY0x5kwUW_NBbC4AB1NAB2xlF3kon5ziejoE6TqWLCeYy4ALE1fOhZCxFgr6x2HxZCKgRIMnaXpe8-wWrIW8tNerCpsrVgRPrCqz19ggBEC0AAVKgBfeMAG1OgBAA0G8h1DLAZyUeENRhKlXus1h84AdiVAANpqtrJ0p4B4CuOU9grBKBcFXXtrzB32CAFmTQAOvKAG8fQA0epnZMzAbGZnuLQ2swlCb7AfOAD0dQA5AZFGez5gAAgWqD5kYOOfQJWyL5hEcyzoHLDipb0yZvQmXRH8iyTB0sHDwryP7OwbYpjtzuOMB2EJ-uCt6F3NPYy4AK8DABZ2oASTlADgFoAMeizs9wLoDs6NiiAMfSa9VEBR7o6MMzOR7XXnsWB8_zgXIXACwKoAB89xejksC8WAUuyn2Ll2zT1gJlcK-nCkdX4OtfsB13lwACtohcAGNpgAIFRh3rwAaEaAFAAnXXvgt--N8AoZFuZfW_nup-3qune7Y1xl3zgBaOUAHtqgBgGLO9AkBFuVwUPo2j3lTmsAucQ1ElTnDKBXEOaIosVwdWAk6xYDF7B5d3Ye6nl3EP2CAFUdQAAPq5_z6gQjxH0AW5Y-GMB8n2ACc1EJyvSdu_3fQM7_brupuhcAL3agAyvTOzidAEwpeoDPYEAQW_NcD8APRmgAyFTv4AADlABUco_wA98qADR_QAifGham4oIABt5gAJdGABccqiAyGdp-mfBfADltlhuKDhn3tvgPlNoAADmgA8DqAAbWUft5oVhYEQGgAABIwAQApCEDn6X4ZA34ZZTaABuGYABcJH2gAXMqADpXoAMfKoWgA7BaADw-nrn9lJMBPoPYKLHAIwt6HAQ7kZsgbfj5r_owSwRwdwXwVAV2IGiKiIWOuIUeFLsnjQT1h9goe9mwZwbwfwXgUyDMJnKITqNoZIXoTITVr5kYSYcoeYQdvgYQjsJoXRHYboYrmro4ZNu3IACN-gAb3I86ABkeqFjDgIUEJjlLjqB4OoOJvoS9iFoALJKgA37YzYOAgLVDsCACwmr5oAGIWZ2aCsBUuVGiBaRrugA7cH-ZTaAAJdgNhYdWEknRsgtdrfGRjpnpvYQESkPLlmoQbfG3EnGILUffg_h_oADgmgARL5nZwDDAjCbq9F4BVHbY1FBEvaAAESoACZpIWZ2o8o4MAE8iUU8Fus8CWZoSWy-KWwxMo1IjASIkxOxruOuH2Z2VcAgzmmQRe6sJeXRZeva6AfxrmlgYgUSYSBAYo4YZYZ0QJf8VwDm5eYJlemQiG8utumAJc2JmouqUx2uguv-XxbRFgPx5m4JM-GJlCwJqJoJ4JWJNuBJgIRJ7AIBI-9WwWxxT8Gck-rG8-hcUuim7JIBme3JvJ_CwCcmwpCm7WY27Ro4uqCR12VuVg8uremA7JbugutWoWZJHh6wPxMC2w1J12SJrgKJ9OFeVekJ-JZohJZgNmtOqO7c2kNq5kdgoc8cBsMwdhBmgxic8piQoO_oqA4OPmb-H-gAp3KAB5GrsYAJymgAp-b_5w5w7sAI6Lp2A2mDzY6ZnM747AAZo0CMAMkKSM6QlaS5nwYwCIZiCk6Znk5wS0BWDU7DqiFMRoltzQiV5445nMQemFpemPSFl2AlkEBlm5mVlQkglwZ_wIaQlIYK5ZDWno61luY5QNIoZoabaGjxC3xRL4aUACkkZkb6BXAQEWQrgmowCl7FzF5EaCmtYPnqwtYL6vl-JEKqb3Kooaxia8ZClFx_k1gAUSY_kJwgUWA9Hbq6ZQD6ZyhnL_ZA6XrQw4A_p_qAaWAlzyDq6fDs7ahcB6htA0CswNI_xdAzrwAWadF_yEw0Y2YWD9hsDBxdAXbLGnQ3bkUEihgwBUUojJLIKEzFKbCoBlLy6HI_wWzoBZCbqxalaxz0UrgxIMXq7MWsDBzSWyXFaAWqacUSUrh0JQRgVsasJuIBxBy0A0aayoDJQmWSakLlanTt6Fi2UEK3kpJmU_yWVWY3k8Wniqa3j3hwARgeXIJLD2WRKvQ6XgWBIfh-XuKji1k-KVL2WqZRIqXrC4Wp74XlqEX1ozAyW0BWwwCsCY5rlokzk1zqwQDNAlVlXoQAJ8lAKmmmWKLIw_x-kBwwmtVAXVVmwUV8UMgCW0WuBKX0pZWp7qXBynjgmeU5RcWGXrpeGgJRXDaxwRUxVsabXyUOVBLsA7kbYpBLD_ZeU8U-XWVZINwUpc60L-KRK-zrWkL7KRWfwvVbV7X7KHUFD7JsVdDLGXk8V_WXb7L_YZWqVTX9AaWtlaW0C9V6ULW17dQN4rVMLN7izIK6pJx3RswNJGWo1AVnXuILm-Vvm8JPVqbY05QuX41hV_xE0WUk2XU_wBWBJBVyyhWjWoL3VvUE2qbxXqzeVJUk3NxmygoU37Kd4ayLXAp0KWmnQs2jhzVCUC1hy1VnSdWNUF6Rz9Wpya3Zo4Da07DwK0kpLc3fl16q22wkpS1d4Q3hlMVQ3BweIAbrYFARjfV7nVHuC60WBC2eIi1QSe2ziZXViMV9hO2tmni6pZxDJx4am3U2XJRQSnix0IzBAgYkxhhYy7rmU4BdWXXkrmD_awwjjR7p3mBIwgbJ5Yy4z2Lxyp23J0CJzsBXCN1x32JW3h3TVR2jgkK9zx2WC-2uXJ1l29wPpcA50K08UF0rhF1QzzCl0S7JBV1yg104ycDyIN2ji9wt1t070Fwy5d2Q0sWtmUXDU0VBDzUa3Qz-GO4GXqzz3OhjAjHUgRj-CJCJRZJwBYasDdDYKPXLUwV9HwV6rT3E1ZCXVJ0EIdFX3hVj0FxLAwmnmYBAVIPNXhI5yE253613BQN50u1u0zic0MhW08JuXf2nSuAjCuDjiwN3lCXAN4BwWkP4P-2u27kpARjXy3xkM1iPDsANGcnD5HGVJjy9lT58ZSEzhU2QX4PiPvnCLU0Vamzq0Rj_XsAQzf39qmJ4DD3kPJSoCAhlQ5T_XxwlQqNmwjpN2V153R2Ahp2kwRhGOYAlR8NNJ1VZ3gyQxeOoA6MpBmKJ22x0JOLgMBys2SwD0uMwBuP4Mayz6oPgLZQ0LINPlz5JNaOpOSNAX-MFiPRlS4xZPPmfyt0JxOKWOmw22-xqM9U82Fz6M7x1OTq1OylwD4Ph12znXC3eJdygp-2jVXD_XIoWAJPbVHyKNBJdy23S0P3bz_W_3zqgbuM1jTN23KVd1qWR3dAROkLs2Tqc1wPImjbJycByw3GSh3Fmgr4EDFzRW7UQWJ641LUUMp0H0r1yiT1LDt0V0Pq-NT05S4NtMrhOxnTiMQCnQlRKicC1i0aHOuC5N4BQsQAADUyLDTdC9iCto18cEAFT0D7AoTAL_lfd8iA9nd-D1jQyYTJ4ypDjNjR9-DILHto47A6gELULbLjApzAcJiATiLrLqLDTFgajhLyMs88c6gicQroFH1qm-deQeABzDDf8OLUrcTpKlSJKajvj0ritBAgVd4HNvjSws8O1JWe1yz98Fc2VDtEdp93Q1Acl4mnFr1hc5zisyWq-UrTzgtXTAdPTlSoKrrkzwKx5KDpG5GVwPD15wKyFdz5rGTkMwbCLG95mlmOAL6b6pTabaFGF_6QGkt-yMtYcUlhV2l9zgS41ZsttGzJ90NDrE-aTOQC1ozQF7rlzko1za-PrnTiV_rxVvsoKrbD1mrRbsztsajgLhtjbU-0rftM9WtM7lQJt2T4CyzHevsNb9t6wPdDbppnFhlTT7bnrNzUFfNdeDej1_iuqccWpMALlne4787fbyVg7XcEzhbvsxbtspbRVLE_iqmEYSNlAlrUStbtru7fCGccJU4OoVhJCnFlpFVjJtJzJADZNLz8bgFa1TTSwwNHFudlpl1-NJx48k8GM5te8B8YDRLDss9j92SN1otpsjA7s-kmQKQV4BAAMZsjAyaxd0M_czF-UiQ_AewqAIhsQ2waSbM_tyVUEcbOb8wOAt696MS_0R8x2cZXcUg_HPHpswAwbmjSbH14CKb-Txn7M28jACawaSasatr28UsMlUA6h-gn0fTfsZuSygAm_Gv4faACwch_oAGAJiKwTQhNA12mSjAc07g-nrigAdh586ACBkTF8Rgru9B54WChgifKIpPxP9AcVILF6gGIIAKfRIWgA-P_Rd-TEbxepwcjDMrMkpmzQLUCJqfQf1f3fu4I1PFZkcXEYxzvhcUOzwiIgKwG6LIzIQMxoC5i4wTOlPBvqthzUO0NTCkdnHkfUDrxyzrupz4eKv7fVs0IMrbx0phyby-xSBsccdcf6fgc7tvDmrkBZLwmEzutep43rq-zB2g1c2-zDtvW-xhtNsRv6D7IftXvfmBLvW7UjtmxpWw--xg3KXUsXXPPJ2-zL37JJLee4-jiONhj_fyQRfWFaESH7Kfpuc0A-FiGU--yGzk90S2EM-VJoJ092Ek8wCY6Q8TfUf7In4Fg5SQolQlT7KEGoAkFkGECnRJhi-_V44ZDgmK_wlUm0mq9Timkq--zLGjBrHboE8EAqnoRU9dgwHUdYsMgZXUv0cawKMgKY4hw2seNnQVGW_tU5QzdPxzfoDouO-c5bnvv8-wCXlogxthxG3bCA0OxR_IpQ-auXUdMj1TDtxO9B-VKg9T7g80D7KOsxUx8Bz5-xZ59LsYCF_TsoNU9NtjOVIRpqKRy8--z1-3lN_0rq4UmMdNzXcvTZl2H9y5niA6e9-iH99AyiETqPhM809fp7BWF0-s9Hibz1f1LQHnzUc0K4yUm0kSJb9K-_G0mhXEvnim0q0nU8UwkwcZBwf6vyJEqpwV-X_7838kJH8OyzWn90Ucj39mxXAX4JAtdawO4WQMPzYA9BR-EhfuLeQUgz8xOb0S-MACgiS9pe5BKYPEhX41gYwHAPvpAPH5jpJ-7QaAWT2qiwsWIZPTnhIU3gZcEBUEIXjug05opAYevVYlpjxCe9cg4YSAM6ByBaNmOuCLAdQI-iICF4ZGQqNeBEARBZc7AUXgVwwGtwDel0UZPoAyD8dRkBedwGkE-j_05BD8OToHWirrEWGG0P8H_AKijgcAGlUBnsjOjy5Bq7FI7j_ziSZILuFiSmLGBoRXdHOqcRgIqi8Hbw5oaAWzCkE-iZIp2RTdJiU20R50uqTVaUr1SSa4xo2pTYOrihoQ6D6ktaMiB2l4rhh24iGPgRYjpooJMkafU3pkhx7lCTc-PSoeXVJhNczY9jTAG31cSeD-BkgXwekNrAj8KeR4T6NmQIEc9iBlHbYBQKX4MDXEQMEPt0HYHe8uBuYLRiaRATglMke_eEtr0P56tlaX_RwWHD_4vwoAgAjWG4JAGMDjhOggQTgN6F4Cl0EhEKu0Gp5DDoQahcgRALGGdDgAlJc3rSUs6fDT4Gw4_lsLGrf9DhQAqmDp2AH1czhK4Y-mTASjHoNuGDVPujnVRsoOULaYKKFGyEEABUQqMngwAdQqQRQowb1NhDVS2hnIjgKAM6gdBQAne-qUkXWjNQWoAQnaf1MpFCgkJqRHI-RHSJijUQmRlqJ2F8G5GSxq0CsGKL6hfBsjnIDQEUUQE8q5oI0VqOzF6RLRyiUkfoDsmOhchGQO0t1fvD5kABMdoAGXzQABYRgAVWVAAnhkZYEcZkTILKCFEkIAMtgKYBaLyxNEMsL2W0WRm9DZcz0EnEilMEADoStlkAAw_yAVAKQobRdo30TCQAz7x5wpkdwOwEADz1q_gtGWjQsQuQAH7eIBQAAbKgACldQsIYpYguViBvcpwcokKsCyMhOiXRKJdUcgk_J4J4KRAAMchAozsAL8RAK_KdEhTQlER8YwIFACTG2NWoA46UgAHVMgMwUcZQR7EZA8SQTNRookdHyJnRyUKIauNrHriXRCLBpk_X2FJ9U8-LGEqOL7GNRaUfotsY4A7Ed8U-E4UYHHAU4iB4go4vYQuOvzZdnxr0YjB-KvxQs1xksY9qyXGjyBsa4Eluso0uoCNAAVfqAB65wzE1ijgzLMcOy2hZcsgJRADcYrF5YTAkWgrIJvi0xY5QsJOE1VveMqySBBG_mN_BmLzHVZAAiDpBjQxgADHlAAEoqAByv0ABzclgUAAMSoADl5UAr7AEabR6g9iQOMRhEnUTIU4k_RHBGHHmc2ouMPMc_kAAupkGMAAQ_5CkaiABIf8ABY_2eKkliMWWJXU6BJJK74MVxJXaVmowkkKT5wlnEus0HskJjvIq9doOvS0auTFJeEvEI9FajDczJIvRqOq0wjzhb4RE02MFKg5AJRxYUzdrr3S45Q9Q0QPADgEl4RgdJEVYjALWknsBAA2EqAAvvSwn5SGiB1NyYWNCyAAvL0AAvqWxPYkFj7EgAPujAAdv6hZAAPAqhjAAVOZtTQxgATCVAAnBa5YjJ7gWia_l9yAAgBM6mhiYyCXQALvygAT-1AACvn5TAA0fKAAgzUMmIjRxd-TaP2NinMwhxiY4jNwFaihjAAMAGABlfQyK2Bkp7AAABxLB-pN0-xKFgck3xTpW0SFEYFaiSAHpgDChh9PPEpS0pGUtAAUI1jZSu4Pkk6cmJmGcDfeR8OuvJLcmjij4VwVKRMFDAkUHwEYOMWjPS4-ZRp74K8TZP2TLMBGG0wADnmGYwAJDmH0gaW1I-mUjAA2P8P5-poYtqbDDAAeJKRs0haRaMADCioAAJfO_CtNCyAzko9icqipBZlYYpclIzHFCxGAzjYQlIxWVhl5FbkXeqjHkY1VVmzB1ZWGZ3lZLqqwyoAtk_WQbXlnuSVIJXK4MDPS66ziU0IG-N0FBQyyDZasjIJSMNpgBeZLLHKE7PcDtMTx_DaiW1MAChioAE7tKqSWMqQCMOJgAf3kmp-iQ2bOOIyhj8pgAN0VAAhNagEYS042YOjMTnUSaZgAX4TeprUgaVcB5yAAKpUACF0YAHTvC8ewHNAVThxpcs2HZPTkzjzxCM2btwKtmSxMcOADOcbKgCSTkxOUCSRnPimbs3ZkUvrlOP7m5Sopwra2XcHHk-yBAfsmKUXLXmhzF5EUj2TDK3kBwJ5vsrDNPNsY6T25ncuGUgU1bhzkMLLLCadH_5QBKJnAc2fomFT6BpWdCLqlcDlHp92ASRFIhczHRkExKnnD6VcAtlNcfkEkxZE1zRBYhEF-iDBfACa6WCGQlaAMpvVUT4KeeA4Owloh0TtBSFYXCwPXy9nZomu9C_RFhOaGpxfGewhIMilDowy_5qiABTQAaBwA5Rw3D-W7ESwiwVYF4SWPoEhkTt_5ZPEIPLESwKxpFXHeoRAuSLiYcAMClIGJS6pLAZcHwRRf4EXwqLNQaiwBfnWthNd9u4U92RvJrBiLawcojiPXy6r_RgAEkgRQQHkBSA5RbxYFFUz8G0pqJxUqgFACllTAIlIcLuCV2RRYTJaP8gRg0SmmhYhAIwfKexIaKAAn3UAAa2oAAp1ULGgUABwKm_gyWhiaZAXQpaGJDwldAAoxEBdAA0HI3SIlA047EVLfy_cWWGSs2WdAyU8s6AfLaVhktOgDL44AylNh3M2h4sNW1TOqoolGVRCMlxSV8SOPS7ItfxyYx6DpJGXEityQ4P-OsvcBXBxe3438vxHVaTLdIyxdRqMEtavzHxIwVZUcvPHIscolkslKMGMU3x5WtyiJXw2T5wT4JFSk0ZKNEZ1wu-TygOFYjKQZK8OowbSGoCfY1h56cihMESLGBOJPoGSpFdgHGGpwPh3yiJTCtmBlIIlqCLDHiqwAoqw4aKiRDZxNnYqgYVK8MFgEwglc-hN8krgSomERLHYO4yWCCKOHxosMnQ47ndEAE3dRg9XQFTCK4xljXuPxbSOalQBVjuGgq7CfWMaCNiVW3rBpCuLIkujKFuiI1SiH3FRTDxCQY8V4PnpmrFYsKmXCazZW0qrqOSdFS4s1VHxmVqgfFUfA-kzxUZw4kEYskDWqJFkIInBV_C8XYKX48AEEcAGYWqJWFJOLuDoJjX8KyeUqkKJqtlVJ8YRNmeEYdKmCYivIKIpQOyjEgAgg0MaaVBGVs61qNI_KQVNoB8X4jGIkqBzksGIoucSRDkOtGKM1DUiJyHqUCWA1zSSjq0bOPKk70VH5oVRCIYKNOrdSY4u0HoBtfZzrX9o6ImotdBQ36G3CxlQ1OdAugn63CV0CUV0qNFLQ1rN1GkWsrdWDrwEdssI2zJ6WvUbr-OTvMco0AnJO9Q4Bo9gAl2AKAAEI0AD5SiUtDGAAzyMACLyqFkADRcmEXHwbqLc6-XvLa0A2P5gNoWQAJ2mgAVZtwxYBQAJz6rBQAG56gARlcCxgAdiNfMgAS6NAAQAxRZecguQADFZgAQejAAv4rZZAA3hmAAV-KzwTRIgzxb2qV1DHgFw-gAN9NQxpowAFyewGs7JYK4BZBUNbMV-mMRE2BLxsKBHzIAD4zGTaFlFlR5LFNAC3E-owxbEfaLJR0myXeID5AAkMaAA6lMABQcqFkADhpoAHVtP7DLDvrSEMN2m9gDTNTkgFQsJG9jThp4KhjAAKHKAAAdOS464PNoYj_KnMAAm1rEXJILwnA8QGflLgaT95XcJGoXIAAyMoWNFkFredAyjue8XloHwkbY5JWzwjZRFQVaCgWiMxdZu1JZUwyZgSMkBuAKOb2yiUTsp-oc69lZY45MtG6jLLDa61vPX9e1zs78dayy5A6DrAiCyIQFc229V-uthBN6QlsLqnw28ok1YlYjIhikCjYHkI-KzBilNWe7lifiH3NrZKC-6Y8CElwiyIIIZrWLs0hdKFXIrS5rBZarwoQQeqsiPhptGkEge9taG2x4BQguHYAOgQvdpOwAH-CLCk5EFKgsAAQCSgwGo7j-RPUpDDpFUlcHuN2iDls3AEY6sdGQKhnAE_qvceuD4qCG11vVfa7eNYMFnAA3WnRo294vQd4iDpnaw-DIO6JdVsA86coa3ccD_EU1_sq2NYAXcVSF2cMLtDi0Oq73Xjc75tbkSzqzsTQNN9ddnBXRuzDqbN7Wt2eIEpuKrD18acu4ODgwXY_aVwaje3bQAPFQq3d86QFUvLPmVJ56P8GEnBWt3e6bVpundpTqD1W75dHIK4GprrIaagmT9GAC_SeK3x1G8ABZj21oTLVnOWWxRY7ro7oR8GPa-IMYtvUpUS25WjLS5xn4b089rnMnsUm86lN2ggXD_IACMDQomFx8VXAG9de3GP3qb0-LW9yW9vV3tDGAB36OA2P5AA536ABbvzC7UAdQ0fGwdnrpWZ6oAf9EhjADsXIpoE7gBEFAGuyurIVP9LffOmjZ77N2cq8nRHot3fMnGtu5asHS-0Y8MOo9WapeAh7jAZY7O4vS7rqpf6ZFNAD3ddXMDAGuOHtM7YCrnp_bru_HY4BoNp3kFZoUwYOp9GDq8qDOtASvCavaAHF2gJKXTg5zJ2TVX1tMIjPTEREOgttDnctcoA5RXri0y64nAbWxG4i9AoEFQAuu6CsGOc2afUf5rMLlFgdPmwIn5tkLsAo5gAFQDeCpY96FLndj2BnAzgStBkBiDwAutzoKg_aBhJzaicAhvBqygrVoivIwUTIfWi8jNrODIqdtcpA3QxUlg7cPtaqgHXSitUXZMhYIfpH9qyIAoyQLeWrTapMagIVw4amNTMQAjzBwdU6kJFjrwjk61dNmRrTtovIQhqQ8NPdHFSwKoWJnhjDgBBjTR0Yn0bKCKquBhofQUaO6JKP2jH5UAc4ujGZCAAooxTHP5LRgAG3jAARsYga9NHm0LFxsqXUyAufU_qanIiDpRHcPsdLbpAPjljLK5Y8gJ7BgBOtJQN_Aoz2R_VL4rmMsBsCuHKOVGxIG0dTFEg-mNHLiapeRPHkeg4krtFgUhecYxhXErjCdeeNsc7Yyw8Sn3MIwarqoHGRo3QTJsgkOMIgLVhyeev8aqN_hHV9iE1qfrdVMcj4PgmKjgHWPMgfVqyyY-7SoGkLPoDx7buYFxj4nBuO3TuqU3sTYGw4wAM4wSY3o0mSTYlMk1gqFVIn2hKJtE6Vy7iWtYDDHcA3I3INaapDJoqbExp6zei6jkJo4-wBqNimYxsoVvpzkACbfrvi6qhjNpxfcTLUd9HL0aJTiLqbGTvwB4DcoYwAPpyBpt_Fxq1Oyg8eBAWADRJiC2mYA-pmMoaehyG5TT5p1_JadlOlGy6hO8wA0Q9yiyijiWl00aY9MumLT2WK0z0GWMm9BDxUxU2mOiahYuqZ2WYy9xXIxAlVSvPIe-h_WvEChkphEOViiQKns0UuUoYwpXDL1rsg9eXMniTyDEJ6ikKJDadD7S51SQ9Kzc9rtytbk8D6RZGckf13JOzLx7swnm7Yq5mzmdGxmciWPihaA8Zu4M8eAmvHHod7L409o9YWLv9mYHRF_OXF_HgTAJ9FrwiKHUsUMhsduLqg9XFm7jpsCocCnbMPmNYI5ugPHzjOAg2FGsZZvPTbjMQ3FEacs3cEwhFDv4o1TCJuDD2oqoVX8u_bVEp0LHXuV5mYDecBCbG-yLONrIkD2OC0BmxzNs28zrNdmGzgxJs47hbPDmqhjpki-OYdK9nMAFFlrSBiHNEXaho5y3PRbZiPNpzlF2c0MnnNfmmh6EVc1IInMbnQjuJdYLHoxp_wsaLdHRLMN95J6oVRQjKWSpInLkDG0Smxsk1jbQwl6hPPSx5PXq4wZcSinCxyG3ocXm6pTd84ybv4UteEhLBejDGaA6nTLgxWumdExamKkQ1l5envQQaJAGWUS8YC3r4AGXF6Hlmi3aa8uO4fLXF2xP5fayBW4rMAFuqYtuNEwy6puR02FfZ68IRAmwAQOAoXNZBlzdgBbsJe8N3Aj6pTeC-Ff-pAIW8Ul_-ipCcQnV8e7AeviVYyB0i-lQHGxiMvgBAIDEPzWjjy2EBoXmIt58ZjYya5PnEkGVpa8ZaGRNcKrS5782UOBQPL_dUKlq8zHzXk7C1uhhEdKVSNZCy1Jhxg1WtzI9oFI26rQBQDxFgQcAuZW6nQKuCbQxeAAUhoyG15-iihpPlEKjmgvA0qKQaL0qiXVHoRgRAEYwIARhEAosC0CTAaZg20A5ofoKgJ-slRYbylcg3QugFsQ69DSFgHNDggDRDQsALAPeOKSCEuDkEX2N9fKhi9CbE1LwTgAeHM2opYAOmz9a2gwXyY5MVEVWuYNLrdV8LDg62revgQHDi-ONeEf5HmpBRRkYIzqLcgkJeRuaVW8yKFE5rtb8iTW7ccSOahd1PWpCdjhpy8GdVmqzygBv83ubAArdZnZFk4h2cHxYKCKlucPWHMWdg-lKGx17JOrelt73bmnSkhjLPHL3yhiRjrU_qQ3JblLFiM84gCbZp8w3TLROY-OWGOrlJ2m5zcxjT1kABYCYAA49UMYACvlOmTmI82AAqTWqyhi9NAXQABaKUm2LW1OS0dTA7hM9wOneoKZ3pDccosSGJ6ltTC7Kd9LfPLTv_jB70dnrBmMAAjkf1O-Jxq4AShuNb7bTw9Zw8nUmItDkqUKp8wl0dgKFjvxyh2E8UdLaQsIUSFPb7JOUamfQgZZkugAAnlAASAmKnQoOAEhM_ezRnYU1FZ0BZquVlD2fFj-O_HKK5mtTxNDIKTQF0ABY8sdmKnP5AAQjpCj7El0u_KnJ8WAAac0ADVceUTJ5CK5RmxBAsfIoM6HlI-h2UQ7eQQMHK14kKNAtoc6iq6DW6rEC9aAjM2GASsHXXeuZChxKbFOGm2gFVUwBzQAt7AGGTZTzRtgNkP8JoGoC2H9ADAUOPwEWT8Arg_AH4MWGqAZBzQP4MkIyBAAlx-Af9AQPkGoDaP2A_AEqDgAcclQpo6wfgOUCWMQArCGMWx_wEOivRCIdp4x3acwBkhKAiQXMHkBa2SjzQejv4KWBcfVh-AUQNAD454NqB_wkWMx645AAhOleiUCAPAFscNI3HqUVJwAD1ZJSYHAJtAScax-A1Ecp41BwCyTGotTmsPwElGpPNorUHAFgDacWAOnRqW8uU6qeySoxWT9WLo7PVWRynYznAK1H6d2PBAmoS0JEC6c9O-nIAcg_IFRFxPcALDlIBk5Udy3eHYEQWCAGbJZBtHuj5YzjZWdGz-AOz-JPICAA`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.formRef = React.createRef();\n          this.state = {\n            checkedItems: [],\n            defaultCheckedKeys: []\n          };\n        }\n\n        render() {\n          return <TreeCurd getKey='id' deleteFunction={ids => message.info(ids)} checkable editEnable={false} defaultCheckedKeys={this.state.defaultCheckedKeys} onCheck={(extraData, checkedInfo) => {\n            const {\n              checkedItems\n            } = extraData;\n            const {\n              checkedNodes\n            } = checkedInfo;\n            const defaultCheckedKeys = checkedNodes.filter(item => !item.children || !item.children.length).map(item => item.key);\n            this.setState({\n              checkedItems,\n              defaultCheckedKeys\n            });\n          }} getTreeData={() => {\n            return fetch('./').then(() => {\n              return [{\n                id: \"0-0\",\n                name: \"0-0\",\n                children: [{\n                  id: \"0-0-1\",\n                  name: \"0-0-1\"\n                }]\n              }, {\n                id: \"0-1\",\n                name: \"0-1\",\n                children: [{\n                  id: \"0-1-1\",\n                  name: \"0-1-1\"\n                }, {\n                  id: \"0-1-2\",\n                  name: \"0-1-2\"\n                }]\n              }];\n            });\n          }} mdxType=\"TreeCurd\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义结点props-1\"\n    }}>{`自定义结点props`}</h2>\n    <p>{`name='0-0'的  style.color = 'red'`}</p>\n    <Playground __position={3} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.formRef = React.createRef()\\n    }\\n    render() {\\n      return (\\n        <TreeCurd\\n          getKey=\\\"id\\\"\\n          showSearch\\n          deleteFunction={ids => message.info(ids)}\\n          getTreeData={() => {\\n            return fetch(\\'./\\').then(() => {\\n              return [\\n                {\\n                  id: \\'0-0\\',\\n                  name: \\'0-0\\',\\n                  children: [\\n                    {\\n                      id: \\'0-0-1\\',\\n                      name: \\'0-0-1\\',\\n                    },\\n                  ],\\n                },\\n                {\\n                  id: \\'0-1\\',\\n                  name: \\'0-1\\',\\n                  children: [\\n                    {\\n                      id: \\'0-1-1\\',\\n                      name: \\'0-1-1\\',\\n                    },\\n                  ],\\n                },\\n              ]\\n            })\\n          }}\\n          renderEditExtra={extraData => {\\n            const { selectedItems, selectedKeys, type, refresh } = extraData\\n            if (type && this.formRef && this.formRef.current) {\\n              if (type === EditType.ADD) {\\n                this.formRef.current.resetFields()\\n              } else if (type === EditType.EDIT) {\\n                this.formRef.current.setFieldsValue(selectedItems[0])\\n              } else {\\n                this.formRef.current.resetFields()\\n              }\\n            }\\n            return (\\n              <React.Fragment>\\n                <Form ref={this.formRef}>\\n                  {FormUtil.renderFormItems(\\n                    [\\n                      {\\n                        label: \\'类型\\',\\n                        content: (\\n                          <span>\\n                            {type === \\'add\\' ? \\'新增\\' : type ? \\'编辑\\' : \\'\\'}\\n                          </span>\\n                        ),\\n                        name: \\'type\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: false,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'名称\\',\\n                        content: <Input />,\\n                        name: \\'name\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'编码\\',\\n                        content: <Input />,\\n                        name: \\'id\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        labelSpan: 3,\\n                        content: (\\n                          <div className=\\\"fb-ControlGroup\\\">\\n                            <Space>\\n                              <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n                                确定\\n                              </Button>\\n                              <Button onClick={refresh}>重置</Button>\\n                            </Space>\\n                          </div>\\n                        ),\\n                      },\\n                    ],\\n                    1,\\n                  )}\\n                </Form>\\n              </React.Fragment>\\n            )\\n          }}\\n          getNodeProps={node => {\\n            if (node.name === \\'0-0\\') {\\n              return {\\n                style: {\\n                  color: \\'red\\',\\n                },\\n              }\\n            }\\n          }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={``} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.formRef = React.createRef();\n        }\n\n        render() {\n          return <TreeCurd getKey='id' showSearch deleteFunction={ids => message.info(ids)} getTreeData={() => {\n            return fetch('./').then(() => {\n              return [{\n                id: \"0-0\",\n                name: \"0-0\",\n                children: [{\n                  id: \"0-0-1\",\n                  name: \"0-0-1\"\n                }]\n              }, {\n                id: \"0-1\",\n                name: \"0-1\",\n                children: [{\n                  id: \"0-1-1\",\n                  name: \"0-1-1\"\n                }]\n              }];\n            });\n          }} renderEditExtra={extraData => {\n            const {\n              selectedItems,\n              selectedKeys,\n              type,\n              refresh\n            } = extraData;\n\n            if (type && this.formRef && this.formRef.current) {\n              if (type === EditType.ADD) {\n                this.formRef.current.resetFields();\n              } else if (type === EditType.EDIT) {\n                this.formRef.current.setFieldsValue(selectedItems[0]);\n              } else {\n                this.formRef.current.resetFields();\n              }\n            }\n\n            return <React.Fragment>\n                <Form ref={this.formRef} mdxType=\"Form\">\n                  {FormUtil.renderFormItems([{\n                  label: '类型',\n                  content: <span>{type === 'add' ? '新增' : type ? '编辑' : ''}</span>,\n                  name: 'type',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: false\n                    }]\n                  }\n                }, {\n                  label: '名称',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'name',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  label: '编码',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'id',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  labelSpan: 3,\n                  content: <div className=\"fb-ControlGroup\">\n                            <Space mdxType=\"Space\">\n                              <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">\n                                确定\n                              </Button>\n                              <Button onClick={refresh} mdxType=\"Button\">重置</Button>\n                            </Space>\n                          </div>\n                }], 1)}\n                </Form>\n              </React.Fragment>;\n          }} getNodeProps={node => {\n            if (node.name === '0-0') {\n              return {\n                style: {\n                  color: 'red'\n                }\n              };\n            }\n          }} mdxType=\"TreeCurd\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"自定义获取子列表的方法\"\n    }}>{`自定义获取子列表的方法`}</h2>\n    <p>{`子列表名称为：childrenCustom`}</p>\n    <Playground __position={4} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.formRef = React.createRef()\\n    }\\n    render() {\\n      return (\\n        <TreeCurd\\n          getKey=\\\"id\\\"\\n          showSearch\\n          getChildren=\\\"childrenCustom\\\"\\n          deleteFunction={ids => message.info(ids)}\\n          getTreeData={() => {\\n            return fetch(\\'./\\').then(() => {\\n              return [\\n                {\\n                  id: \\'0-0\\',\\n                  name: \\'0-0\\',\\n                  childrenCustom: [\\n                    {\\n                      id: \\'0-0-1\\',\\n                      name: \\'0-0-1\\',\\n                    },\\n                  ],\\n                },\\n                {\\n                  id: \\'0-1\\',\\n                  name: \\'0-1\\',\\n                  childrenCustom: [\\n                    {\\n                      id: \\'0-1-1\\',\\n                      name: \\'0-1-1\\',\\n                    },\\n                  ],\\n                },\\n              ]\\n            })\\n          }}\\n          renderEditExtra={extraData => {\\n            const { selectedItems, selectedKeys, type, refresh } = extraData\\n            if (type && this.formRef && this.formRef.current) {\\n              if (type === EditType.ADD) {\\n                this.formRef.current.resetFields()\\n              } else if (type === EditType.EDIT) {\\n                this.formRef.current.setFieldsValue(selectedItems[0])\\n              } else {\\n                this.formRef.current.resetFields()\\n              }\\n            }\\n            return (\\n              <React.Fragment>\\n                <Form ref={this.formRef}>\\n                  {FormUtil.renderFormItems(\\n                    [\\n                      {\\n                        label: \\'类型\\',\\n                        content: (\\n                          <span>\\n                            {type === \\'add\\' ? \\'新增\\' : type ? \\'编辑\\' : \\'\\'}\\n                          </span>\\n                        ),\\n                        name: \\'type\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: false,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'名称\\',\\n                        content: <Input />,\\n                        name: \\'name\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'编码\\',\\n                        content: <Input />,\\n                        name: \\'id\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        labelSpan: 3,\\n                        content: (\\n                          <div className=\\\"fb-ControlGroup\\\">\\n                            <Space>\\n                              <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n                                确定\\n                              </Button>\\n                              <Button onClick={refresh}>重置</Button>\\n                            </Space>\\n                          </div>\\n                        ),\\n                      },\\n                    ],\\n                    1,\\n                  )}\\n                </Form>\\n              </React.Fragment>\\n            )\\n          }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={``} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.formRef = React.createRef();\n        }\n\n        render() {\n          return <TreeCurd getKey='id' showSearch getChildren='childrenCustom' deleteFunction={ids => message.info(ids)} getTreeData={() => {\n            return fetch('./').then(() => {\n              return [{\n                id: \"0-0\",\n                name: \"0-0\",\n                childrenCustom: [{\n                  id: \"0-0-1\",\n                  name: \"0-0-1\"\n                }]\n              }, {\n                id: \"0-1\",\n                name: \"0-1\",\n                childrenCustom: [{\n                  id: \"0-1-1\",\n                  name: \"0-1-1\"\n                }]\n              }];\n            });\n          }} renderEditExtra={extraData => {\n            const {\n              selectedItems,\n              selectedKeys,\n              type,\n              refresh\n            } = extraData;\n\n            if (type && this.formRef && this.formRef.current) {\n              if (type === EditType.ADD) {\n                this.formRef.current.resetFields();\n              } else if (type === EditType.EDIT) {\n                this.formRef.current.setFieldsValue(selectedItems[0]);\n              } else {\n                this.formRef.current.resetFields();\n              }\n            }\n\n            return <React.Fragment>\n                <Form ref={this.formRef} mdxType=\"Form\">\n                  {FormUtil.renderFormItems([{\n                  label: '类型',\n                  content: <span>{type === 'add' ? '新增' : type ? '编辑' : ''}</span>,\n                  name: 'type',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: false\n                    }]\n                  }\n                }, {\n                  label: '名称',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'name',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  label: '编码',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'id',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  labelSpan: 3,\n                  content: <div className=\"fb-ControlGroup\">\n                            <Space mdxType=\"Space\">\n                              <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">\n                                确定\n                              </Button>\n                              <Button onClick={refresh} mdxType=\"Button\">重置</Button>\n                            </Space>\n                          </div>\n                }], 1)}\n                </Form>\n              </React.Fragment>;\n          }} mdxType=\"TreeCurd\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"扩展操作区\"\n    }}>{`扩展操作区`}</h2>\n    <p>{`自定义一个按钮`}</p>\n    <Playground __position={5} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.formRef = React.createRef()\\n      this.state = {\\n        expandedKeys: [],\\n      }\\n    }\\n    render() {\\n      return (\\n        <TreeCurd\\n          getKey=\\\"id\\\"\\n          deleteFunction={ids => message.info(ids)}\\n          defaultExpandedKeys={this.state.expandedKeys}\\n          onExpand={expandedKeys => {\\n            this.setState({\\n              expandedKeys,\\n            })\\n          }}\\n          getTreeData={() => {\\n            return fetch(\\'./\\').then(() => {\\n              return [\\n                {\\n                  id: \\'0-0\\',\\n                  name: \\'0-0\\',\\n                  children: [\\n                    {\\n                      id: \\'0-0-1\\',\\n                      name: \\'0-0-1\\',\\n                    },\\n                  ],\\n                },\\n                {\\n                  id: \\'0-1\\',\\n                  name: \\'0-1\\',\\n                  children: [\\n                    {\\n                      id: \\'0-1-1\\',\\n                      name: \\'0-1-1\\',\\n                    },\\n                  ],\\n                },\\n              ]\\n            })\\n          }}\\n          renderEditExtra={extraData => {\\n            const { selectedItems, selectedKeys, type, refresh } = extraData\\n            if (type && this.formRef && this.formRef.current) {\\n              if (type === EditType.ADD) {\\n                this.formRef.current.resetFields()\\n              } else if (type === EditType.EDIT) {\\n                this.formRef.current.setFieldsValue(selectedItems[0])\\n              } else {\\n                this.formRef.current.resetFields()\\n              }\\n            }\\n            return (\\n              <React.Fragment>\\n                <Form ref={this.formRef}>\\n                  {FormUtil.renderFormItems(\\n                    [\\n                      {\\n                        label: \\'类型\\',\\n                        content: (\\n                          <span>\\n                            {type === \\'add\\' ? \\'新增\\' : type ? \\'编辑\\' : \\'\\'}\\n                          </span>\\n                        ),\\n                        name: \\'type\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: false,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'名称\\',\\n                        content: <Input />,\\n                        name: \\'name\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        label: \\'编码\\',\\n                        content: <Input />,\\n                        name: \\'id\\',\\n                        labelSpan: 3,\\n                        formItemProps: {\\n                          children: \\'\\',\\n                          rules: [\\n                            {\\n                              required: true,\\n                            },\\n                          ],\\n                        },\\n                      },\\n                      {\\n                        labelSpan: 3,\\n                        content: (\\n                          <div className=\\\"fb-ControlGroup\\\">\\n                            <Space>\\n                              <Button type=\\\"primary\\\" htmlType=\\\"submit\\\">\\n                                确定\\n                              </Button>\\n                              <Button onClick={refresh}>重置</Button>\\n                            </Space>\\n                          </div>\\n                        ),\\n                      },\\n                    ],\\n                    1,\\n                  )}\\n                </Form>\\n              </React.Fragment>\\n            )\\n          }}\\n          renderExtra={(extraData, defaultRender) => {\\n            return (\\n              <React.Fragment>\\n                {defaultRender(extraData)}\\n                <Button>自定义按钮</Button>\\n              </React.Fragment>\\n            )\\n          }}\\n        />\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeCurd,\n      EditType,\n      Button,\n      Input,\n      Form,\n      Space,\n      message,\n      FormUtil\n    }} __codesandbox={``} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.formRef = React.createRef();\n          this.state = {\n            expandedKeys: []\n          };\n        }\n\n        render() {\n          return <TreeCurd getKey='id' deleteFunction={ids => message.info(ids)} defaultExpandedKeys={this.state.expandedKeys} onExpand={expandedKeys => {\n            this.setState({\n              expandedKeys\n            });\n          }} getTreeData={() => {\n            return fetch('./').then(() => {\n              return [{\n                id: \"0-0\",\n                name: \"0-0\",\n                children: [{\n                  id: \"0-0-1\",\n                  name: \"0-0-1\"\n                }]\n              }, {\n                id: \"0-1\",\n                name: \"0-1\",\n                children: [{\n                  id: \"0-1-1\",\n                  name: \"0-1-1\"\n                }]\n              }];\n            });\n          }} renderEditExtra={extraData => {\n            const {\n              selectedItems,\n              selectedKeys,\n              type,\n              refresh\n            } = extraData;\n\n            if (type && this.formRef && this.formRef.current) {\n              if (type === EditType.ADD) {\n                this.formRef.current.resetFields();\n              } else if (type === EditType.EDIT) {\n                this.formRef.current.setFieldsValue(selectedItems[0]);\n              } else {\n                this.formRef.current.resetFields();\n              }\n            }\n\n            return <React.Fragment>\n                <Form ref={this.formRef} mdxType=\"Form\">\n                  {FormUtil.renderFormItems([{\n                  label: '类型',\n                  content: <span>{type === 'add' ? '新增' : type ? '编辑' : ''}</span>,\n                  name: 'type',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: false\n                    }]\n                  }\n                }, {\n                  label: '名称',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'name',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  label: '编码',\n                  content: <Input mdxType=\"Input\" />,\n                  name: 'id',\n                  labelSpan: 3,\n                  formItemProps: {\n                    children: '',\n                    rules: [{\n                      required: true\n                    }]\n                  }\n                }, {\n                  labelSpan: 3,\n                  content: <div className=\"fb-ControlGroup\">\n                            <Space mdxType=\"Space\">\n                              <Button type=\"primary\" htmlType=\"submit\" mdxType=\"Button\">\n                                确定\n                              </Button>\n                              <Button onClick={refresh} mdxType=\"Button\">重置</Button>\n                            </Space>\n                          </div>\n                }], 1)}\n                </Form>\n              </React.Fragment>;\n          }} renderExtra={(extraData, defaultRender) => {\n            return <React.Fragment>\n            {defaultRender(extraData)}\n            <Button mdxType=\"Button\">自定义按钮</Button>\n          </React.Fragment>;\n          }} mdxType=\"TreeCurd\" />;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"属性\"\n    }}>{`属性`}</h2>\n    <Props of={TreeCurd} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}