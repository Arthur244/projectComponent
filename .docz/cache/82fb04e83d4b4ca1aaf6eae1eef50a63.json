{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/text/Text.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/text/Text.tsx","mtime":1594367130805},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJhbnRkL2VzL3Rvb2x0aXAvc3R5bGUvY3NzIjsKaW1wb3J0IF9Ub29sdGlwIGZyb20gImFudGQvZXMvdG9vbHRpcCI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy94dWp1bmppZS9Eb2N1bWVudHMvZ2l0L3Byb2plY3RDb21wb25lbnQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMveHVqdW5qaWUvRG9jdW1lbnRzL2dpdC9wcm9qZWN0Q29tcG9uZW50L25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9Vc2Vycy94dWp1bmppZS9Eb2N1bWVudHMvZ2l0L3Byb2plY3RDb21wb25lbnQvc3JjL3RleHQvVGV4dC50c3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgSHRtbFV0aWwgZnJvbSAnLi4vdXRpbHMvSHRtbFV0aWwnOwoKdmFyIFRleHQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9QdXJlQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFRleHQsIF9QdXJlQ29tcG9uZW50KTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihUZXh0KTsKCiAgZnVuY3Rpb24gVGV4dCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUZXh0KTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoVGV4dCwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLAogICAgICAgICAgdGV4dCA9IF90aGlzJHByb3BzLnRleHQsCiAgICAgICAgICBfdGhpcyRwcm9wcyRtYXhMZW4gPSBfdGhpcyRwcm9wcy5tYXhMZW4sCiAgICAgICAgICBtYXhMZW4gPSBfdGhpcyRwcm9wcyRtYXhMZW4gPT09IHZvaWQgMCA/IDE1IDogX3RoaXMkcHJvcHMkbWF4TGVuLAogICAgICAgICAgcGxhaW5IdG1sID0gX3RoaXMkcHJvcHMucGxhaW5IdG1sLAogICAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLAogICAgICAgICAgc3R5bGUgPSBfdGhpcyRwcm9wcy5zdHlsZTsKICAgICAgdmFyIHBsYWluVGV4dCA9IHBsYWluSHRtbCA/IEh0bWxVdGlsLnBsYWluSHRtbCh0ZXh0KSA6IHRleHQ7CiAgICAgIHZhciBzaG93VG9vbHRpcCA9IG1heExlbiAmJiBtYXhMZW4gPCBwbGFpblRleHQubGVuZ3RoOwogICAgICB2YXIgdXNlVGV4dCA9IHNob3dUb29sdGlwID8gKHBsYWluVGV4dCA9PT0gbnVsbCB8fCBwbGFpblRleHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBsYWluVGV4dC5zdWJzdHIoMCwgbWF4TGVuKSkgKyAnLi4uJyA6IHBsYWluVGV4dDsKICAgICAgdmFyIGVsZW1lbnQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgic3BhbiIsIHsKICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZSwKICAgICAgICBzdHlsZTogc3R5bGUsCiAgICAgICAgX19zZWxmOiB0aGlzLAogICAgICAgIF9fc291cmNlOiB7CiAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgICAgbGluZU51bWJlcjogMzIsCiAgICAgICAgICBjb2x1bW5OdW1iZXI6IDcKICAgICAgICB9CiAgICAgIH0sIHVzZVRleHQpOwoKICAgICAgaWYgKHNob3dUb29sdGlwKSB7CiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KF9Ub29sdGlwLCB7CiAgICAgICAgICB0aXRsZTogcGxhaW5UZXh0LAogICAgICAgICAgX19zZWxmOiB0aGlzLAogICAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgICAgbGluZU51bWJlcjogMzgsCiAgICAgICAgICAgIGNvbHVtbk51bWJlcjogMTQKICAgICAgICAgIH0KICAgICAgICB9LCBlbGVtZW50KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICB9CiAgfSwgewogICAga2V5OiAiX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwiLAogICAgLy8gQHRzLWlnbm9yZQogICAgdmFsdWU6IGZ1bmN0aW9uIF9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsKGtleSwgY29kZSkgewogICAgICAvLyBAdHMtaWdub3JlCiAgICAgIHRoaXNba2V5XSA9IGV2YWwoY29kZSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVGV4dDsKfShQdXJlQ29tcG9uZW50KTsKCnZhciBfZGVmYXVsdCA9IFRleHQ7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBUZXh0ICE9PSAndW5kZWZpbmVkJyAmJiBUZXh0ICYmIFRleHQgPT09IE9iamVjdChUZXh0KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFRleHQpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRleHQsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJUZXh0IiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdGV4dC9UZXh0LnRzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdCA6IHVuZGVmaW5lZDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoVGV4dCwgIlRleHQiLCAiL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9zcmMvdGV4dC9UZXh0LnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvVXNlcnMveHVqdW5qaWUvRG9jdW1lbnRzL2dpdC9wcm9qZWN0Q29tcG9uZW50L3NyYy90ZXh0L1RleHQudHN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5sZWF2ZU1vZHVsZSA6IHVuZGVmaW5lZDsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/text/Text.tsx"],"names":["React","PureComponent","HtmlUtil","Text","props","text","maxLen","plainHtml","className","style","plainText","showTooltip","length","useText","substr","element"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAgD,OAAhD;AAEA,OAAOC,QAAP,MAAqB,mBAArB;;IAoBMC,I;;;;;;;;;;;;;6BACuB;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACjBC,IADiB,eACjBA,IADiB;AAAA,2CACXC,MADW;AAAA,UACXA,MADW,mCACF,EADE;AAAA,UACEC,SADF,eACEA,SADF;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBC,KADxB,eACwBA,KADxB;AAEzB,UAAIC,SAAS,GAAGH,SAAS,GAAGL,QAAQ,CAACK,SAAT,CAAmBF,IAAnB,CAAH,GAA8BA,IAAvD;AACA,UAAMM,WAAW,GAAGL,MAAM,IAAIA,MAAM,GAAGI,SAAS,CAACE,MAAjD;AACA,UAAMC,OAAO,GAAGF,WAAW,GAAG,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,MAAX,CAAkB,CAAlB,EAAqBR,MAArB,KAA+B,KAAlC,GAA0CI,SAArE;AAEA,UAAMK,OAAO,gBACX;AAAM,QAAA,SAAS,EAAEP,SAAjB;AAA4B,QAAA,KAAK,EAAEC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,OADH,CADF;;AAMA,UAAIF,WAAJ,EAAiB;AACf,4BAAO;AAAS,UAAA,KAAK,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BK,OAA5B,CAAP;AACD;;AACD,aAAOA,OAAP;AACD;;;;;;;;;;;EAjBgBd,a;;eAoBJE,I;AAAf;;;;;;;;;;;;;;;;;;;;;;0BApBMA,I","sourcesContent":["import { Tooltip } from 'antd';\nimport React, { PureComponent, ReactNode } from 'react';\nimport IComponentProps from '../interfaces/IComponentProps';\nimport HtmlUtil from '../utils/HtmlUtil';\n\ninterface ITextState {}\ninterface ITextProps extends IComponentProps {\n  /**\n   * 文本内容\n   */\n  text: string;\n\n  /**\n   * 文本长度，设置为0表示不显示\n   */\n  maxLen?: number;\n\n  /**\n   * 是否把富文本解析成纯文本\n   */\n  plainHtml?: boolean;\n}\n\nclass Text extends PureComponent<ITextProps, ITextState> {\n  public render(): ReactNode {\n    const { text, maxLen = 15, plainHtml, className, style } = this.props;\n    let plainText = plainHtml ? HtmlUtil.plainHtml(text) : text;\n    const showTooltip = maxLen && maxLen < plainText.length;\n    const useText = showTooltip ? plainText?.substr(0, maxLen) + '...' : plainText;\n\n    const element = (\n      <span className={className} style={style}>\n        {useText}\n      </span>\n    );\n\n    if (showTooltip) {\n      return <Tooltip title={plainText}>{element}</Tooltip>;\n    }\n    return element;\n  }\n}\n\nexport default Text;\n"]}]}