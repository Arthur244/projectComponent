{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx","mtime":1594367130808},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js","mtime":1609062631902},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSIvVXNlcnMveHVqdW5qaWUvRG9jdW1lbnRzL2dpdC9wcm9qZWN0Q29tcG9uZW50L25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjtpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20iL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqLyAvKiBAanN4IG1keCAqL2ltcG9ydHtQbGF5Z3JvdW5kLFByb3BzfWZyb20nZG9jeic7aW1wb3J0J2FudGQvZGlzdC9hbnRkLmNzcyc7aW1wb3J0IFRyZWVDb250cm9sIGZyb20nLi9UcmVlQ29udHJvbCc7dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJ0cmVlY29udHJvbCJ9LCJUcmVlQ29udHJvbCIpLG1keCgicCIsbnVsbCwiXHU2ODExXHU3NkY4XHU1MTczXHU3Njg0XHU4Rjg1XHU1MkE5XHU1REU1XHU1MTc3IiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiXHU0RTAwXHU3RUY0XHU2NTcwXHU3RUM0XHU4RjZDXHU2MzYyXHU0RTNBXHU2ODExXHU3RUQzXHU2Nzg0IiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlx1NjQxQ1x1N0QyMlx1NjMwN1x1NUI5QVx1NzY4NFx1N0VEM1x1NzBCOSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJcdTY0MUNcdTdEMjJcdTYzMDdcdTVCOUFcdTdFRDNcdTcwQjlcdTUzQ0FcdTUxNzZcdTYyNDBcdTY3MDlcdTcyMzZcdTdFRDNcdTcwQjkiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiZm9yZWFjaCIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJtYXAiKSksbWR4KCJoMyIseyJpZCI6IuaVsOe7hOi9rOaNouS4uuagkSJ9LCJcdTY1NzBcdTdFQzRcdThGNkNcdTYzNjJcdTRFM0FcdTY4MTEiKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJjb250cm9sLmxpc3RUb1RyZWUiKSksbWR4KFBsYXlncm91bmQse19fcG9zaXRpb246MCxfX2NvZGU6JzxkaXY+XG4gIHsoZnVuY3Rpb24gcmVuZGVyVHJlZSgpIHtcbiAgICBsZXQgbGlzdCA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAzLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0xXCcsXG4gICAgICAgIHBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMlwnLFxuICAgICAgICBwaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcyLTFcJyxcbiAgICAgICAgcGlkOiAyLFxuICAgICAgfSxcbiAgICBdXG4gICAgbGV0IGNvbnRyb2wgPSBuZXcgVHJlZUNvbnRyb2woXCdpZFwnLCBcJ2NoaWxkcmVuXCcsIFwnY2hpbGRyZW5cJylcbiAgICBsZXQgdHJlZSA9IGNvbnRyb2wubGlzdFRvVHJlZShcbiAgICAgIGxpc3QubWFwKGl0ZW0gPT4gKHsgLi4uaXRlbSB9KSksXG4gICAgICAobm9kZSwgcGFyZW50KSA9PiB7XG4gICAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgICAgcmV0dXJuICFub2RlLnBpZFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlLnBpZCA9PT0gcGFyZW50LmlkXG4gICAgICB9LFxuICAgIClcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgyPuWOn+Wni+aVsOaNrjwvaDI+XG4gICAgICAgIDxwIHN0eWxlPXt7IHdoaXRlU3BhY2U6IFwncHJlXCcgfX0+e0pTT04uc3RyaW5naWZ5KGxpc3QsIG51bGwsIDQpfTwvcD5cbiAgICAgICAgPGgyPuagkee7k+aehDwvaDI+XG4gICAgICAgIDxwIHN0eWxlPXt7IHdoaXRlU3BhY2U6IFwncHJlXCcgfX0+e0pTT04uc3RyaW5naWZ5KHRyZWUsIG51bGwsIDQpfTwvcD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSkoKX1cbjwvZGl2PicsX19zY29wZTp7cHJvcHM6dGhpcz90aGlzLnByb3BzOnByb3BzLFBsYXlncm91bmQ6UGxheWdyb3VuZCxQcm9wczpQcm9wcyxUcmVlQ29udHJvbDpUcmVlQ29udHJvbH0sX19jb2Rlc2FuZGJveDoidW5kZWZpbmVkIixtZHhUeXBlOiJQbGF5Z3JvdW5kIn0sbWR4KCJkaXYiLG51bGwsZnVuY3Rpb24gcmVuZGVyVHJlZSgpe3ZhciBsaXN0PVt7aWQ6MX0se2lkOjJ9LHtpZDozfSx7aWQ6JzEtMScscGlkOjF9LHtpZDonMS0yJyxwaWQ6MX0se2lkOicyLTEnLHBpZDoyfV07dmFyIGNvbnRyb2w9bmV3IFRyZWVDb250cm9sKCJpZCIsImNoaWxkcmVuIiwiY2hpbGRyZW4iKTt2YXIgdHJlZT1jb250cm9sLmxpc3RUb1RyZWUobGlzdC5tYXAoZnVuY3Rpb24oaXRlbSl7cmV0dXJuIF9vYmplY3RTcHJlYWQoe30saXRlbSk7fSksZnVuY3Rpb24obm9kZSxwYXJlbnQpe2lmKCFwYXJlbnQpe3JldHVybiFub2RlLnBpZDt9cmV0dXJuIG5vZGUucGlkPT09cGFyZW50LmlkO30pO3JldHVybiBtZHgoImRpdiIsbnVsbCxtZHgoImgyIixudWxsLCJcdTUzOUZcdTU5Q0JcdTY1NzBcdTYzNkUiKSxtZHgoInAiLHtzdHlsZTp7d2hpdGVTcGFjZToncHJlJ319LEpTT04uc3RyaW5naWZ5KGxpc3QsbnVsbCw0KSksbWR4KCJoMiIsbnVsbCwiXHU2ODExXHU3RUQzXHU2Nzg0IiksbWR4KCJwIix7c3R5bGU6e3doaXRlU3BhY2U6J3ByZSd9fSxKU09OLnN0cmluZ2lmeSh0cmVlLG51bGwsNCkpKTt9KCkpKSxtZHgoImgzIix7ImlkIjoi6L+H5ruk5Ye65paw55qE5qCRIn0sIlx1OEZDN1x1NkVFNFx1NTFGQVx1NjVCMFx1NzY4NFx1NjgxMSIpLG1keCgicCIsbnVsbCwiXHU2MzExXHU5MDA5XHU1MUZBbmFtZVx1NTMwNVx1NTQyQmFcdTc2ODRcdTY1NzBcdTYzNkVcdUZGMUEiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiY29udHJvbC5maWx0ZXIiKSksbWR4KFBsYXlncm91bmQse19fcG9zaXRpb246MSxfX2NvZGU6JzxkaXY+XG4gIHsoZnVuY3Rpb24gcmVuZGVyVHJlZSgpIHtcbiAgICBsZXQgbGlzdCA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAzLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0xXCcsXG4gICAgICAgIHBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMS0yXCcsXG4gICAgICAgIHBpZDogXCcxLTFcJyxcbiAgICAgICAgbmFtZTogXCdhMTExXCcsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcxLTJcJyxcbiAgICAgICAgcGlkOiAxLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMi0xXCcsXG4gICAgICAgIHBpZDogMixcbiAgICAgICAgbmFtZTogXCdhMjFcJyxcbiAgICAgIH0sXG4gICAgXVxuICAgIGxldCBjb250cm9sID0gbmV3IFRyZWVDb250cm9sKFwnaWRcJywgXCdjaGlsZHJlblwnLCBcJ2NoaWxkcmVuXCcpXG4gICAgbGV0IHRyZWUgPSBjb250cm9sLmxpc3RUb1RyZWUoXG4gICAgICBsaXN0Lm1hcChpdGVtID0+ICh7IC4uLml0ZW0gfSkpLFxuICAgICAgKG5vZGUsIHBhcmVudCkgPT4ge1xuICAgICAgICBpZiAoIXBhcmVudCkge1xuICAgICAgICAgIHJldHVybiAhbm9kZS5waWRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZS5waWQgPT09IHBhcmVudC5pZFxuICAgICAgfSxcbiAgICApXG4gICAgbGV0IGZpbHRlckxpc3QgPSBjb250cm9sLmZpbHRlcih0cmVlLCBub2RlID0+IHtcbiAgICAgIHJldHVybiBub2RlLm5hbWUgJiYgbm9kZS5uYW1lLmluZGV4T2YoXCdhXCcpID49IDBcbiAgICB9KVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDI+5Y6f5aeL5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkobGlzdCwgbnVsbCwgNCl9PC9wPlxuICAgICAgICA8aDI+5qCR57uT5p6EPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkodHJlZSwgbnVsbCwgNCl9PC9wPlxuICAgICAgICA8aDI+6L+H5ruk5Ye655qE5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT5cbiAgICAgICAgICB7SlNPTi5zdHJpbmdpZnkoZmlsdGVyTGlzdCwgbnVsbCwgNCl9XG4gICAgICAgIDwvcD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSkoKX1cbjwvZGl2PicsX19zY29wZTp7cHJvcHM6dGhpcz90aGlzLnByb3BzOnByb3BzLFBsYXlncm91bmQ6UGxheWdyb3VuZCxQcm9wczpQcm9wcyxUcmVlQ29udHJvbDpUcmVlQ29udHJvbH0sX19jb2Rlc2FuZGJveDoidW5kZWZpbmVkIixtZHhUeXBlOiJQbGF5Z3JvdW5kIn0sbWR4KCJkaXYiLG51bGwsZnVuY3Rpb24gcmVuZGVyVHJlZSgpe3ZhciBsaXN0PVt7aWQ6MX0se2lkOjJ9LHtpZDozfSx7aWQ6JzEtMScscGlkOjF9LHtpZDonMS0xLTInLHBpZDonMS0xJyxuYW1lOidhMTExJ30se2lkOicxLTInLHBpZDoxfSx7aWQ6JzItMScscGlkOjIsbmFtZTonYTIxJ31dO3ZhciBjb250cm9sPW5ldyBUcmVlQ29udHJvbCgiaWQiLCJjaGlsZHJlbiIsImNoaWxkcmVuIik7dmFyIHRyZWU9Y29udHJvbC5saXN0VG9UcmVlKGxpc3QubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfb2JqZWN0U3ByZWFkKHt9LGl0ZW0pO30pLGZ1bmN0aW9uKG5vZGUscGFyZW50KXtpZighcGFyZW50KXtyZXR1cm4hbm9kZS5waWQ7fXJldHVybiBub2RlLnBpZD09PXBhcmVudC5pZDt9KTt2YXIgZmlsdGVyTGlzdD1jb250cm9sLmZpbHRlcih0cmVlLGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLm5hbWUmJm5vZGUubmFtZS5pbmRleE9mKCdhJyk+PTA7fSk7cmV0dXJuIG1keCgiZGl2IixudWxsLG1keCgiaDIiLG51bGwsIlx1NTM5Rlx1NTlDQlx1NjU3MFx1NjM2RSIpLG1keCgicCIse3N0eWxlOnt3aGl0ZVNwYWNlOidwcmUnfX0sSlNPTi5zdHJpbmdpZnkobGlzdCxudWxsLDQpKSxtZHgoImgyIixudWxsLCJcdTY4MTFcdTdFRDNcdTY3ODQiKSxtZHgoInAiLHtzdHlsZTp7d2hpdGVTcGFjZToncHJlJ319LEpTT04uc3RyaW5naWZ5KHRyZWUsbnVsbCw0KSksbWR4KCJoMiIsbnVsbCwiXHU4RkM3XHU2RUU0XHU1MUZBXHU3Njg0XHU2NTcwXHU2MzZFIiksbWR4KCJwIix7c3R5bGU6e3doaXRlU3BhY2U6J3ByZSd9fSxKU09OLnN0cmluZ2lmeShmaWx0ZXJMaXN0LG51bGwsNCkpKTt9KCkpKSxtZHgoImgzIix7ImlkIjoi5pCc57Si5oyH5a6a57uT54K5In0sIlx1NjQxQ1x1N0QyMlx1NjMwN1x1NUI5QVx1N0VEM1x1NzBCOSIpLG1keCgicCIsbnVsbCwiXHU2MzExXHU5MDA5XHU1MUZBbmFtZVx1NTMwNVx1NTQyQmFcdTc2ODRcdTdCMkNcdTRFMDBcdTRFMkFcdTY1NzBcdTYzNkVcdUZGMUEiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiY29udHJvbC5zZWFyY2giKSksbWR4KFBsYXlncm91bmQse19fcG9zaXRpb246MixfX2NvZGU6JzxkaXY+XG4gIHsoZnVuY3Rpb24gcmVuZGVyVHJlZSgpIHtcbiAgICBsZXQgbGlzdCA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAzLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0xXCcsXG4gICAgICAgIHBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMS0yXCcsXG4gICAgICAgIHBpZDogXCcxLTFcJyxcbiAgICAgICAgbmFtZTogXCdhMTExXCcsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcxLTJcJyxcbiAgICAgICAgcGlkOiAxLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMi0xXCcsXG4gICAgICAgIHBpZDogMixcbiAgICAgICAgbmFtZTogXCdhMjFcJyxcbiAgICAgIH0sXG4gICAgXVxuICAgIGxldCBjb250cm9sID0gbmV3IFRyZWVDb250cm9sKFwnaWRcJywgXCdjaGlsZHJlblwnLCBcJ2NoaWxkcmVuXCcpXG4gICAgbGV0IHRyZWUgPSBjb250cm9sLmxpc3RUb1RyZWUoXG4gICAgICBsaXN0Lm1hcChpdGVtID0+ICh7IC4uLml0ZW0gfSkpLFxuICAgICAgKG5vZGUsIHBhcmVudCkgPT4ge1xuICAgICAgICBpZiAoIXBhcmVudCkge1xuICAgICAgICAgIHJldHVybiAhbm9kZS5waWRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZS5waWQgPT09IHBhcmVudC5pZFxuICAgICAgfSxcbiAgICApXG4gICAgbGV0IG5vZGVzID0gY29udHJvbC5zZWFyY2godHJlZSwgbm9kZSA9PiB7XG4gICAgICByZXR1cm4gbm9kZS5uYW1lICYmIG5vZGUubmFtZS5pbmRleE9mKFwnYVwnKSA+PSAwXG4gICAgfSlcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgyPuWOn+Wni+aVsOaNrjwvaDI+XG4gICAgICAgIDxwIHN0eWxlPXt7IHdoaXRlU3BhY2U6IFwncHJlXCcgfX0+e0pTT04uc3RyaW5naWZ5KGxpc3QsIG51bGwsIDQpfTwvcD5cbiAgICAgICAgPGgyPui/h+a7pOWHuueahOaVsOaNrjwvaDI+XG4gICAgICAgIDxwIHN0eWxlPXt7IHdoaXRlU3BhY2U6IFwncHJlXCcgfX0+e0pTT04uc3RyaW5naWZ5KG5vZGVzLCBudWxsLCA0KX08L3A+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH0pKCl9XG48L2Rpdj4nLF9fc2NvcGU6e3Byb3BzOnRoaXM/dGhpcy5wcm9wczpwcm9wcyxQbGF5Z3JvdW5kOlBsYXlncm91bmQsUHJvcHM6UHJvcHMsVHJlZUNvbnRyb2w6VHJlZUNvbnRyb2x9LF9fY29kZXNhbmRib3g6InVuZGVmaW5lZCIsbWR4VHlwZToiUGxheWdyb3VuZCJ9LG1keCgiZGl2IixudWxsLGZ1bmN0aW9uIHJlbmRlclRyZWUoKXt2YXIgbGlzdD1be2lkOjF9LHtpZDoyfSx7aWQ6M30se2lkOicxLTEnLHBpZDoxfSx7aWQ6JzEtMS0yJyxwaWQ6JzEtMScsbmFtZTonYTExMSd9LHtpZDonMS0yJyxwaWQ6MX0se2lkOicyLTEnLHBpZDoyLG5hbWU6J2EyMSd9XTt2YXIgY29udHJvbD1uZXcgVHJlZUNvbnRyb2woImlkIiwiY2hpbGRyZW4iLCJjaGlsZHJlbiIpO3ZhciB0cmVlPWNvbnRyb2wubGlzdFRvVHJlZShsaXN0Lm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gX29iamVjdFNwcmVhZCh7fSxpdGVtKTt9KSxmdW5jdGlvbihub2RlLHBhcmVudCl7aWYoIXBhcmVudCl7cmV0dXJuIW5vZGUucGlkO31yZXR1cm4gbm9kZS5waWQ9PT1wYXJlbnQuaWQ7fSk7dmFyIG5vZGVzPWNvbnRyb2wuc2VhcmNoKHRyZWUsZnVuY3Rpb24obm9kZSl7cmV0dXJuIG5vZGUubmFtZSYmbm9kZS5uYW1lLmluZGV4T2YoJ2EnKT49MDt9KTtyZXR1cm4gbWR4KCJkaXYiLG51bGwsbWR4KCJoMiIsbnVsbCwiXHU1MzlGXHU1OUNCXHU2NTcwXHU2MzZFIiksbWR4KCJwIix7c3R5bGU6e3doaXRlU3BhY2U6J3ByZSd9fSxKU09OLnN0cmluZ2lmeShsaXN0LG51bGwsNCkpLG1keCgiaDIiLG51bGwsIlx1OEZDN1x1NkVFNFx1NTFGQVx1NzY4NFx1NjU3MFx1NjM2RSIpLG1keCgicCIse3N0eWxlOnt3aGl0ZVNwYWNlOidwcmUnfX0sSlNPTi5zdHJpbmdpZnkobm9kZXMsbnVsbCw0KSkpO30oKSkpLG1keCgiaDMiLHsiaWQiOiLmkJzntKLmjIflrprnu5PngrktMSJ9LCJcdTY0MUNcdTdEMjJcdTYzMDdcdTVCOUFcdTdFRDNcdTcwQjkiKSxtZHgoInAiLG51bGwsIlx1NjMxMVx1OTAwOVx1NTFGQW5hbWVcdTUzMDVcdTU0MkJhXHU3Njg0XHU3QjJDXHU0RTAwXHU0RTJBXHU2NTcwXHU2MzZFXHU1M0NBXHU1MTc2XHU2MjQwXHU2NzA5XHU3MjM2XHU3RUQzXHU3MEI5XHVGRjFBIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImNvbnRyb2wuc2VhcmNoQ2hhaW4iKSksbWR4KFBsYXlncm91bmQse19fcG9zaXRpb246MyxfX2NvZGU6JzxkaXY+XG4gIHsoZnVuY3Rpb24gcmVuZGVyVHJlZSgpIHtcbiAgICBsZXQgbGlzdCA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAzLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0xXCcsXG4gICAgICAgIHBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMS0yXCcsXG4gICAgICAgIHBpZDogXCcxLTFcJyxcbiAgICAgICAgbmFtZTogXCdhMTExXCcsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcxLTJcJyxcbiAgICAgICAgcGlkOiAxLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMi0xXCcsXG4gICAgICAgIHBpZDogMixcbiAgICAgICAgbmFtZTogXCdhMjFcJyxcbiAgICAgIH0sXG4gICAgXVxuICAgIGxldCBjb250cm9sID0gbmV3IFRyZWVDb250cm9sKFwnaWRcJywgXCdjaGlsZHJlblwnLCBcJ2NoaWxkcmVuXCcpXG4gICAgbGV0IHRyZWUgPSBjb250cm9sLmxpc3RUb1RyZWUoXG4gICAgICBsaXN0Lm1hcChpdGVtID0+ICh7IC4uLml0ZW0gfSkpLFxuICAgICAgKG5vZGUsIHBhcmVudCkgPT4ge1xuICAgICAgICBpZiAoIXBhcmVudCkge1xuICAgICAgICAgIHJldHVybiAhbm9kZS5waWRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZS5waWQgPT09IHBhcmVudC5pZFxuICAgICAgfSxcbiAgICApXG4gICAgbGV0IG5vZGVzID0gY29udHJvbC5zZWFyY2hDaGFpbih0cmVlLCBub2RlID0+IHtcbiAgICAgIHJldHVybiBub2RlLm5hbWUgJiYgbm9kZS5uYW1lLmluZGV4T2YoXCdhXCcpID49IDBcbiAgICB9KVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDI+5Y6f5aeL5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkobGlzdCwgbnVsbCwgNCl9PC9wPlxuICAgICAgICA8aDI+6L+H5ruk5Ye655qE5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkobm9kZXMsIG51bGwsIDQpfTwvcD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSkoKX1cbjwvZGl2PicsX19zY29wZTp7cHJvcHM6dGhpcz90aGlzLnByb3BzOnByb3BzLFBsYXlncm91bmQ6UGxheWdyb3VuZCxQcm9wczpQcm9wcyxUcmVlQ29udHJvbDpUcmVlQ29udHJvbH0sX19jb2Rlc2FuZGJveDoidW5kZWZpbmVkIixtZHhUeXBlOiJQbGF5Z3JvdW5kIn0sbWR4KCJkaXYiLG51bGwsZnVuY3Rpb24gcmVuZGVyVHJlZSgpe3ZhciBsaXN0PVt7aWQ6MX0se2lkOjJ9LHtpZDozfSx7aWQ6JzEtMScscGlkOjF9LHtpZDonMS0xLTInLHBpZDonMS0xJyxuYW1lOidhMTExJ30se2lkOicxLTInLHBpZDoxfSx7aWQ6JzItMScscGlkOjIsbmFtZTonYTIxJ31dO3ZhciBjb250cm9sPW5ldyBUcmVlQ29udHJvbCgiaWQiLCJjaGlsZHJlbiIsImNoaWxkcmVuIik7dmFyIHRyZWU9Y29udHJvbC5saXN0VG9UcmVlKGxpc3QubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfb2JqZWN0U3ByZWFkKHt9LGl0ZW0pO30pLGZ1bmN0aW9uKG5vZGUscGFyZW50KXtpZighcGFyZW50KXtyZXR1cm4hbm9kZS5waWQ7fXJldHVybiBub2RlLnBpZD09PXBhcmVudC5pZDt9KTt2YXIgbm9kZXM9Y29udHJvbC5zZWFyY2hDaGFpbih0cmVlLGZ1bmN0aW9uKG5vZGUpe3JldHVybiBub2RlLm5hbWUmJm5vZGUubmFtZS5pbmRleE9mKCdhJyk+PTA7fSk7cmV0dXJuIG1keCgiZGl2IixudWxsLG1keCgiaDIiLG51bGwsIlx1NTM5Rlx1NTlDQlx1NjU3MFx1NjM2RSIpLG1keCgicCIse3N0eWxlOnt3aGl0ZVNwYWNlOidwcmUnfX0sSlNPTi5zdHJpbmdpZnkobGlzdCxudWxsLDQpKSxtZHgoImgyIixudWxsLCJcdThGQzdcdTZFRTRcdTUxRkFcdTc2ODRcdTY1NzBcdTYzNkUiKSxtZHgoInAiLHtzdHlsZTp7d2hpdGVTcGFjZToncHJlJ319LEpTT04uc3RyaW5naWZ5KG5vZGVzLG51bGwsNCkpKTt9KCkpKSxtZHgoImgzIix7ImlkIjoi5pCc57Si5oyH5a6a57uT54K5LTIifSwiXHU2NDFDXHU3RDIyXHU2MzA3XHU1QjlBXHU3RUQzXHU3MEI5IiksbWR4KCJwIixudWxsLCJcdTYzMTFcdTkwMDlcdTUxRkFuYW1lXHU1MzA1XHU1NDJCYVx1NzY4NFx1N0IyQ1x1NEUwMFx1NEUyQVx1NjU3MFx1NjM2RVx1RkYxQSIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJjb250cm9sLnNlYXJjaCIpKSxtZHgoUGxheWdyb3VuZCx7X19wb3NpdGlvbjo0LF9fY29kZTonPGRpdj5cbiAgeyhmdW5jdGlvbiByZW5kZXJUcmVlKCkge1xuICAgIGxldCBsaXN0ID0gW1xuICAgICAge1xuICAgICAgICBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiAyLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDMsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcxLTFcJyxcbiAgICAgICAgcGlkOiAxLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0xLTJcJyxcbiAgICAgICAgcGlkOiBcJzEtMVwnLFxuICAgICAgICBuYW1lOiBcJ2ExMTFcJyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMlwnLFxuICAgICAgICBwaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcyLTFcJyxcbiAgICAgICAgcGlkOiAyLFxuICAgICAgICBuYW1lOiBcJ2EyMVwnLFxuICAgICAgfSxcbiAgICBdXG4gICAgbGV0IGNvbnRyb2wgPSBuZXcgVHJlZUNvbnRyb2woXCdpZFwnLCBcJ2NoaWxkcmVuXCcsIFwnY2hpbGRyZW5cJylcbiAgICBsZXQgdHJlZSA9IGNvbnRyb2wubGlzdFRvVHJlZShcbiAgICAgIGxpc3QubWFwKGl0ZW0gPT4gKHsgLi4uaXRlbSB9KSksXG4gICAgICAobm9kZSwgcGFyZW50KSA9PiB7XG4gICAgICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgICAgcmV0dXJuICFub2RlLnBpZFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlLnBpZCA9PT0gcGFyZW50LmlkXG4gICAgICB9LFxuICAgIClcbiAgICBsZXQgbm9kZXMgPSBjb250cm9sLnNlYXJjaCh0cmVlLCBub2RlID0+IHtcbiAgICAgIHJldHVybiBub2RlLm5hbWUgJiYgbm9kZS5uYW1lLmluZGV4T2YoXCdhXCcpID49IDBcbiAgICB9KVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDI+5Y6f5aeL5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkobGlzdCwgbnVsbCwgNCl9PC9wPlxuICAgICAgICA8aDI+6L+H5ruk5Ye655qE5pWw5o2uPC9oMj5cbiAgICAgICAgPHAgc3R5bGU9e3sgd2hpdGVTcGFjZTogXCdwcmVcJyB9fT57SlNPTi5zdHJpbmdpZnkobm9kZXMsIG51bGwsIDQpfTwvcD5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfSkoKX1cbjwvZGl2PicsX19zY29wZTp7cHJvcHM6dGhpcz90aGlzLnByb3BzOnByb3BzLFBsYXlncm91bmQ6UGxheWdyb3VuZCxQcm9wczpQcm9wcyxUcmVlQ29udHJvbDpUcmVlQ29udHJvbH0sX19jb2Rlc2FuZGJveDoidW5kZWZpbmVkIixtZHhUeXBlOiJQbGF5Z3JvdW5kIn0sbWR4KCJkaXYiLG51bGwsZnVuY3Rpb24gcmVuZGVyVHJlZSgpe3ZhciBsaXN0PVt7aWQ6MX0se2lkOjJ9LHtpZDozfSx7aWQ6JzEtMScscGlkOjF9LHtpZDonMS0xLTInLHBpZDonMS0xJyxuYW1lOidhMTExJ30se2lkOicxLTInLHBpZDoxfSx7aWQ6JzItMScscGlkOjIsbmFtZTonYTIxJ31dO3ZhciBjb250cm9sPW5ldyBUcmVlQ29udHJvbCgiaWQiLCJjaGlsZHJlbiIsImNoaWxkcmVuIik7dmFyIHRyZWU9Y29udHJvbC5saXN0VG9UcmVlKGxpc3QubWFwKGZ1bmN0aW9uKGl0ZW0pe3JldHVybiBfb2JqZWN0U3ByZWFkKHt9LGl0ZW0pO30pLGZ1bmN0aW9uKG5vZGUscGFyZW50KXtpZighcGFyZW50KXtyZXR1cm4hbm9kZS5waWQ7fXJldHVybiBub2RlLnBpZD09PXBhcmVudC5pZDt9KTt2YXIgbm9kZXM9Y29udHJvbC5zZWFyY2godHJlZSxmdW5jdGlvbihub2RlKXtyZXR1cm4gbm9kZS5uYW1lJiZub2RlLm5hbWUuaW5kZXhPZignYScpPj0wO30pO3JldHVybiBtZHgoImRpdiIsbnVsbCxtZHgoImgyIixudWxsLCJcdTUzOUZcdTU5Q0JcdTY1NzBcdTYzNkUiKSxtZHgoInAiLHtzdHlsZTp7d2hpdGVTcGFjZToncHJlJ319LEpTT04uc3RyaW5naWZ5KGxpc3QsbnVsbCw0KSksbWR4KCJoMiIsbnVsbCwiXHU4RkM3XHU2RUU0XHU1MUZBXHU3Njg0XHU2NTcwXHU2MzZFIiksbWR4KCJwIix7c3R5bGU6e3doaXRlU3BhY2U6J3ByZSd9fSxKU09OLnN0cmluZ2lmeShub2RlcyxudWxsLDQpKSk7fSgpKSksbWR4KCJoMyIseyJpZCI6IumBjeWOhuagkSJ9LCJcdTkwNERcdTUzODZcdTY4MTEiKSxtZHgoInAiLG51bGwsIlx1N0VEOVx1NjI0MFx1NjcwOVx1N0VEM1x1NzBCOVx1NTJBMFx1NEUwQVx1NjVCMFx1NUM1RVx1NjAyNyIpLG1keChQbGF5Z3JvdW5kLHtfX3Bvc2l0aW9uOjUsX19jb2RlOic8ZGl2PlxuICB7KGZ1bmN0aW9uIHJlbmRlclRyZWUoKSB7XG4gICAgbGV0IGxpc3QgPSBbXG4gICAgICB7XG4gICAgICAgIGlkOiAxLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzEtMVwnLFxuICAgICAgICBwaWQ6IDEsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogXCcxLTEtMlwnLFxuICAgICAgICBwaWQ6IFwnMS0xXCcsXG4gICAgICAgIG5hbWU6IFwnYTExMVwnLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IFwnMS0yXCcsXG4gICAgICAgIHBpZDogMSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGlkOiBcJzItMVwnLFxuICAgICAgICBwaWQ6IDIsXG4gICAgICAgIG5hbWU6IFwnYTIxXCcsXG4gICAgICB9LFxuICAgIF1cbiAgICBsZXQgY29udHJvbCA9IG5ldyBUcmVlQ29udHJvbChcJ2lkXCcsIFwnY2hpbGRyZW5cJywgXCdjaGlsZHJlblwnKVxuICAgIGxldCB0cmVlID0gY29udHJvbC5saXN0VG9UcmVlKFxuICAgICAgbGlzdC5tYXAoaXRlbSA9PiAoeyAuLi5pdGVtIH0pKSxcbiAgICAgIChub2RlLCBwYXJlbnQpID0+IHtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHtcbiAgICAgICAgICByZXR1cm4gIW5vZGUucGlkXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGUucGlkID09PSBwYXJlbnQuaWRcbiAgICAgIH0sXG4gICAgKVxuICAgIGNvbnRyb2wuZm9yRWFjaCh0cmVlLCBub2RlID0+IHtcbiAgICAgIG5vZGUubmV3QXR0ID0gXCduZXdBdHRcJ1xuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMj7ljp/lp4vmlbDmja48L2gyPlxuICAgICAgICA8cCBzdHlsZT17eyB3aGl0ZVNwYWNlOiBcJ3ByZVwnIH19PntKU09OLnN0cmluZ2lmeShsaXN0LCBudWxsLCA0KX08L3A+XG4gICAgICAgIDxoMj7pgY3ljobnmoTlkI7nmoTmlbDmja48L2gyPlxuICAgICAgICA8cCBzdHlsZT17eyB3aGl0ZVNwYWNlOiBcJ3ByZVwnIH19PntKU09OLnN0cmluZ2lmeSh0cmVlLCBudWxsLCA0KX08L3A+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH0pKCl9XG48L2Rpdj4nLF9fc2NvcGU6e3Byb3BzOnRoaXM/dGhpcy5wcm9wczpwcm9wcyxQbGF5Z3JvdW5kOlBsYXlncm91bmQsUHJvcHM6UHJvcHMsVHJlZUNvbnRyb2w6VHJlZUNvbnRyb2x9LF9fY29kZXNhbmRib3g6InVuZGVmaW5lZCIsbWR4VHlwZToiUGxheWdyb3VuZCJ9LG1keCgiZGl2IixudWxsLGZ1bmN0aW9uIHJlbmRlclRyZWUoKXt2YXIgbGlzdD1be2lkOjF9LHtpZDoyfSx7aWQ6M30se2lkOicxLTEnLHBpZDoxfSx7aWQ6JzEtMS0yJyxwaWQ6JzEtMScsbmFtZTonYTExMSd9LHtpZDonMS0yJyxwaWQ6MX0se2lkOicyLTEnLHBpZDoyLG5hbWU6J2EyMSd9XTt2YXIgY29udHJvbD1uZXcgVHJlZUNvbnRyb2woImlkIiwiY2hpbGRyZW4iLCJjaGlsZHJlbiIpO3ZhciB0cmVlPWNvbnRyb2wubGlzdFRvVHJlZShsaXN0Lm1hcChmdW5jdGlvbihpdGVtKXtyZXR1cm4gX29iamVjdFNwcmVhZCh7fSxpdGVtKTt9KSxmdW5jdGlvbihub2RlLHBhcmVudCl7aWYoIXBhcmVudCl7cmV0dXJuIW5vZGUucGlkO31yZXR1cm4gbm9kZS5waWQ9PT1wYXJlbnQuaWQ7fSk7Y29udHJvbC5mb3JFYWNoKHRyZWUsZnVuY3Rpb24obm9kZSl7bm9kZS5uZXdBdHQ9J25ld0F0dCc7fSk7cmV0dXJuIG1keCgiZGl2IixudWxsLG1keCgiaDIiLG51bGwsIlx1NTM5Rlx1NTlDQlx1NjU3MFx1NjM2RSIpLG1keCgicCIse3N0eWxlOnt3aGl0ZVNwYWNlOidwcmUnfX0sSlNPTi5zdHJpbmdpZnkobGlzdCxudWxsLDQpKSxtZHgoImgyIixudWxsLCJcdTkwNERcdTUzODZcdTc2ODRcdTU0MEVcdTc2ODRcdTY1NzBcdTYzNkUiKSxtZHgoInAiLHtzdHlsZTp7d2hpdGVTcGFjZToncHJlJ319LEpTT04uc3RyaW5naWZ5KHRyZWUsbnVsbCw0KSkpO30oKSkpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJzcmMvdXRpbHMvVHJlZUNvbnRyb2wubWR4In19KTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx"],"names":["React","mdx","Playground","Props","TreeControl","layoutProps","MDXLayout","MDXContent","components","props","renderTree","list","id","pid","control","tree","listToTree","map","item","node","parent","whiteSpace","JSON","stringify","name","filterList","filter","indexOf","nodes","search","searchChain","forEach","newAtt","isMDXComponent"],"mappings":"6VACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,yB,CACA,cACA,OAASC,UAAT,CAAqBC,KAArB,KAAkC,MAAlC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAGA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEC,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,SAAQ,CACN,KAAM,aADA,CAAR,eAFK,CAKL,gEALK,CAML,cACE,UAAI,UAAU,CAAC,IAAf,iEADF,CAEE,UAAI,UAAU,CAAC,IAAf,+CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,mFAHF,CAIE,UAAI,UAAU,CAAC,IAAf,YAJF,CAKE,UAAI,UAAU,CAAC,IAAf,QALF,CANK,CAaL,SAAQ,CACN,KAAM,QADA,CAAR,wCAbK,CAgBL,aAAG,kBAAY,UAAU,CAAC,GAAvB,uBAAH,CAhBK,CAiBL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,u4BAAnC,CAA46B,OAAO,CAAE,CACn7BC,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KADw5B,CAEn7BP,UAAU,CAAVA,UAFm7B,CAGn7BC,KAAK,CAALA,KAHm7B,CAIn7BC,WAAW,CAAXA,WAJm7B,CAAr7B,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CATQ,CAYR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAZQ,CAAX,CAgBA,GAAIC,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQA,MAAO,gBACL,yCADK,CAEL,SAAG,KAAK,CAAE,CACRS,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CAFK,CAKL,mCALK,CAML,SAAG,KAAK,CAAE,CACRU,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CANK,CAAP,CAUD,CApCJ,EADH,CANE,CAjBK,CA+DL,SAAQ,CACN,KAAM,QADA,CAAR,wCA/DK,CAkEL,2EAAqB,kBAAY,UAAU,CAAC,GAAvB,mBAArB,CAlEK,CAmEL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,qvCAAnC,CAA0xC,OAAO,CAAE,CACjyCN,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KADswC,CAEjyCP,UAAU,CAAVA,UAFiyC,CAGjyCC,KAAK,CAALA,KAHiyC,CAIjyCC,WAAW,CAAXA,WAJiyC,CAAnyC,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,OADH,CAEDC,GAAG,CAAE,KAFJ,CAGDW,IAAI,CAAE,MAHL,CATQ,CAaR,CACDZ,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAbQ,CAgBR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAGDW,IAAI,CAAE,KAHL,CAhBQ,CAAX,CAqBA,GAAIV,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQA,GAAIa,CAAAA,UAAU,CAAGX,OAAO,CAACY,MAAR,CAAeX,IAAf,CAAqB,SAAAI,IAAI,CAAI,CAC5C,MAAOA,CAAAA,IAAI,CAACK,IAAL,EAAaL,IAAI,CAACK,IAAL,CAAUG,OAAV,CAAkB,GAAlB,GAA0B,CAA9C,CACD,CAFgB,CAAjB,CAGA,MAAO,gBACT,yCADS,CAET,SAAG,KAAK,CAAE,CACJN,UAAU,CAAE,KADR,CAAV,EAEQC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFR,CAFS,CAKT,mCALS,CAMT,SAAG,KAAK,CAAE,CACJU,UAAU,CAAE,KADR,CAAV,EAEQC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFR,CANS,CAST,qDATS,CAUT,SAAG,KAAK,CAAE,CACJM,UAAU,CAAE,KADR,CAAV,EAEQC,IAAI,CAACC,SAAL,CAAeE,UAAf,CAA2B,IAA3B,CAAiC,CAAjC,CAFR,CAVS,CAAP,CAcD,CAhDJ,EADH,CANE,CAnEK,CA6HL,SAAQ,CACN,KAAM,QADA,CAAR,wCA7HK,CAgIL,6FAAwB,kBAAY,UAAU,CAAC,GAAvB,mBAAxB,CAhIK,CAiIL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,+mCAAnC,CAAopC,OAAO,CAAE,CAC3pChB,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KADgoC,CAE3pCP,UAAU,CAAVA,UAF2pC,CAG3pCC,KAAK,CAALA,KAH2pC,CAI3pCC,WAAW,CAAXA,WAJ2pC,CAA7pC,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,OADH,CAEDC,GAAG,CAAE,KAFJ,CAGDW,IAAI,CAAE,MAHL,CATQ,CAaR,CACDZ,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAbQ,CAgBR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAGDW,IAAI,CAAE,KAHL,CAhBQ,CAAX,CAqBA,GAAIV,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQA,GAAIgB,CAAAA,KAAK,CAAGd,OAAO,CAACe,MAAR,CAAed,IAAf,CAAqB,SAAAI,IAAI,CAAI,CACvC,MAAOA,CAAAA,IAAI,CAACK,IAAL,EAAaL,IAAI,CAACK,IAAL,CAAUG,OAAV,CAAkB,GAAlB,GAA0B,CAA9C,CACD,CAFW,CAAZ,CAGA,MAAO,gBACL,yCADK,CAEL,SAAG,KAAK,CAAE,CACRN,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CAFK,CAKL,qDALK,CAML,SAAG,KAAK,CAAE,CACRU,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeK,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CAFJ,CANK,CAAP,CAUD,CA5CJ,EADH,CANE,CAjIK,CAuLL,SAAQ,CACN,KAAM,UADA,CAAR,wCAvLK,CA0LL,uIAA+B,kBAAY,UAAU,CAAC,GAAvB,wBAA/B,CA1LK,CA2LL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,onCAAnC,CAAypC,OAAO,CAAE,CAChqCnB,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KADqoC,CAEhqCP,UAAU,CAAVA,UAFgqC,CAGhqCC,KAAK,CAALA,KAHgqC,CAIhqCC,WAAW,CAAXA,WAJgqC,CAAlqC,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,OADH,CAEDC,GAAG,CAAE,KAFJ,CAGDW,IAAI,CAAE,MAHL,CATQ,CAaR,CACDZ,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAbQ,CAgBR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAGDW,IAAI,CAAE,KAHL,CAhBQ,CAAX,CAqBA,GAAIV,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQA,GAAIgB,CAAAA,KAAK,CAAGd,OAAO,CAACgB,WAAR,CAAoBf,IAApB,CAA0B,SAAAI,IAAI,CAAI,CAC5C,MAAOA,CAAAA,IAAI,CAACK,IAAL,EAAaL,IAAI,CAACK,IAAL,CAAUG,OAAV,CAAkB,GAAlB,GAA0B,CAA9C,CACD,CAFW,CAAZ,CAGA,MAAO,gBACL,yCADK,CAEL,SAAG,KAAK,CAAE,CACRN,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CAFK,CAKL,qDALK,CAML,SAAG,KAAK,CAAE,CACRU,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeK,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CAFJ,CANK,CAAP,CAUD,CA5CJ,EADH,CANE,CA3LK,CAiPL,SAAQ,CACN,KAAM,UADA,CAAR,wCAjPK,CAoPL,6FAAwB,kBAAY,UAAU,CAAC,GAAvB,mBAAxB,CApPK,CAqPL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,+mCAAnC,CAAopC,OAAO,CAAE,CAC3pCnB,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KADgoC,CAE3pCP,UAAU,CAAVA,UAF2pC,CAG3pCC,KAAK,CAALA,KAH2pC,CAI3pCC,WAAW,CAAXA,WAJ2pC,CAA7pC,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,OADH,CAEDC,GAAG,CAAE,KAFJ,CAGDW,IAAI,CAAE,MAHL,CATQ,CAaR,CACDZ,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAbQ,CAgBR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAGDW,IAAI,CAAE,KAHL,CAhBQ,CAAX,CAqBA,GAAIV,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQA,GAAIgB,CAAAA,KAAK,CAAGd,OAAO,CAACe,MAAR,CAAed,IAAf,CAAqB,SAAAI,IAAI,CAAI,CACvC,MAAOA,CAAAA,IAAI,CAACK,IAAL,EAAaL,IAAI,CAACK,IAAL,CAAUG,OAAV,CAAkB,GAAlB,GAA0B,CAA9C,CACD,CAFW,CAAZ,CAGA,MAAO,gBACL,yCADK,CAEL,SAAG,KAAK,CAAE,CACRN,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CAFK,CAKL,qDALK,CAML,SAAG,KAAK,CAAE,CACRU,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeK,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CAFJ,CANK,CAAP,CAUD,CA5CJ,EADH,CANE,CArPK,CA2SL,SAAQ,CACN,KAAM,KADA,CAAR,sBA3SK,CA8SL,4EA9SK,CA+SL,IAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,MAAM,CAAE,2kCAAnC,CAAgnC,OAAO,CAAE,CACvnCnB,KAAK,CAAE,KAAO,KAAKA,KAAZ,CAAoBA,KAD4lC,CAEvnCP,UAAU,CAAVA,UAFunC,CAGvnCC,KAAK,CAALA,KAHunC,CAIvnCC,WAAW,CAAXA,WAJunC,CAAznC,CAKG,aAAa,YALhB,CAK+B,OAAO,CAAC,YALvC,EAMF,eACG,QAASM,CAAAA,UAAT,EAAsB,CACjB,GAAIC,CAAAA,IAAI,CAAG,CAAC,CACVC,EAAE,CAAE,CADM,CAAD,CAER,CACDA,EAAE,CAAE,CADH,CAFQ,CAIR,CACDA,EAAE,CAAE,CADH,CAJQ,CAMR,CACDA,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CANQ,CASR,CACDD,EAAE,CAAE,OADH,CAEDC,GAAG,CAAE,KAFJ,CAGDW,IAAI,CAAE,MAHL,CATQ,CAaR,CACDZ,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAbQ,CAgBR,CACDD,EAAE,CAAE,KADH,CAEDC,GAAG,CAAE,CAFJ,CAGDW,IAAI,CAAE,KAHL,CAhBQ,CAAX,CAqBA,GAAIV,CAAAA,OAAO,CAAG,GAAIV,CAAAA,WAAJ,CAAgB,IAAhB,CAAsB,UAAtB,CAAkC,UAAlC,CAAd,CACA,GAAIW,CAAAA,IAAI,CAAGD,OAAO,CAACE,UAAR,CAAmBL,IAAI,CAACM,GAAL,CAAS,SAAAC,IAAI,0BAAUA,IAAV,GAAb,CAAnB,CACN,SAACC,IAAD,CAAOC,MAAP,CAAkB,CACrB,GAAI,CAACA,MAAL,CAAa,CACX,MAAO,CAACD,IAAI,CAACN,GAAb,CACD,CAED,MAAOM,CAAAA,IAAI,CAACN,GAAL,GAAaO,MAAM,CAACR,EAA3B,CACD,CAPU,CAAX,CAQAE,OAAO,CAACiB,OAAR,CAAgBhB,IAAhB,CAAsB,SAAAI,IAAI,CAAI,CAC5BA,IAAI,CAACa,MAAL,CAAc,QAAd,CACD,CAFD,EAGA,MAAO,gBACL,yCADK,CAEL,SAAG,KAAK,CAAE,CACRX,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CAFK,CAKL,2DALK,CAML,SAAG,KAAK,CAAE,CACRU,UAAU,CAAE,KADJ,CAAV,EAEIC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAFJ,CANK,CAAP,CAUD,CA5CJ,EADH,CANE,CA/SK,CAAP,CAsWD,C,qQAED,CACAR,UAAU,CAAC0B,cAAX,CAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport TreeControl from './TreeControl';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"treecontrol\"\n    }}>{`TreeControl`}</h1>\n    <p>{`树相关的辅助工具`}</p>\n    <ul>\n      <li parentName=\"ul\">{`一维数组转换为树结构`}</li>\n      <li parentName=\"ul\">{`搜索指定的结点`}</li>\n      <li parentName=\"ul\">{`搜索指定结点及其所有父结点`}</li>\n      <li parentName=\"ul\">{`foreach`}</li>\n      <li parentName=\"ul\">{`map`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"数组转换为树\"\n    }}>{`数组转换为树`}</h3>\n    <p><inlineCode parentName=\"p\">{`control.listToTree`}</inlineCode></p>\n    <Playground __position={0} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>树结构</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>树结构</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n          </div>;\n        }()}\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"过滤出新的树\"\n    }}>{`过滤出新的树`}</h3>\n    <p>{`挑选出name包含a的数据：`}<inlineCode parentName=\"p\">{`control.filter`}</inlineCode></p>\n    <Playground __position={1} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let filterList = control.filter(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>树结构</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>\\n          {JSON.stringify(filterList, null, 4)}\\n        </p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let filterList = control.filter(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n        <h2>原始数据</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n        <h2>树结构</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n        <h2>过滤出的数据</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(filterList, null, 4)}</p>\n      </div>;\n        }()}\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据：`}<inlineCode parentName=\"p\">{`control.search`}</inlineCode></p>\n    <Playground __position={2} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.search(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.search(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点-1\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据及其所有父结点：`}<inlineCode parentName=\"p\">{`control.searchChain`}</inlineCode></p>\n    <Playground __position={3} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.searchChain(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.searchChain(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点-2\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据：`}<inlineCode parentName=\"p\">{`control.search`}</inlineCode></p>\n    <Playground __position={4} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.search(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.search(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"遍历树\"\n    }}>{`遍历树`}</h3>\n    <p>{`给所有结点加上新属性`}</p>\n    <Playground __position={5} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    control.forEach(tree, node => {\\n      node.newAtt = \\'newAtt\\'\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>遍历的后的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          control.forEach(tree, node => {\n            node.newAtt = 'newAtt';\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>遍历的后的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}