{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/CountUp/CountUp.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/CountUp/CountUp.tsx","mtime":1594367130782},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20iL1VzZXJzL3h1anVuamllL0RvY3VtZW50cy9naXQvcHJvamVjdENvbXBvbmVudC9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7aW1wb3J0IG1vbWVudCBmcm9tJ21vbWVudCc7aW1wb3J0IFJlYWN0LHt1c2VFZmZlY3QsdXNlU3RhdGV9ZnJvbSdyZWFjdCc7aW1wb3J0IFRpbWVTcGFuIGZyb20nLi4vY29yZS9UaW1lU3Bhbic7dmFyIGNsYXNzbmFtZXM9cmVxdWlyZSgnY2xhc3NuYW1lcycpOy8qKgogKiDorqHml7blmagKICogQHBhcmFtIHByb3BzCiAqL3ZhciBDb3VudFVwPWZ1bmN0aW9uIENvdW50VXAocHJvcHMpe3ZhciBjb3VudFVwQ2xhc3NOYW1lPXByb3BzLmNvdW50VXBDbGFzc05hbWUsc3RhcnRUaW1lPXByb3BzLnN0YXJ0VGltZSxmb3JtYXQ9cHJvcHMuZm9ybWF0LHNlcnZlclRpbWVzdGFtcD1wcm9wcy5zZXJ2ZXJUaW1lc3RhbXA7dmFyIF91c2VTdGF0ZT11c2VTdGF0ZShuZXcgVGltZVNwYW4oKSksX3VzZVN0YXRlMj1fc2xpY2VkVG9BcnJheShfdXNlU3RhdGUsMiksdGltZT1fdXNlU3RhdGUyWzBdLHNldFRpbWU9X3VzZVN0YXRlMlsxXTt2YXIgX3VzZVN0YXRlMz11c2VTdGF0ZShEYXRlLm5vdygpKSxfdXNlU3RhdGU0PV9zbGljZWRUb0FycmF5KF91c2VTdGF0ZTMsMiksc2VydlRpbWVDaGFuZ2VUaW1lPV91c2VTdGF0ZTRbMF0sc2V0U2VydlRpbWVDaGFuZ2VUaW1lPV91c2VTdGF0ZTRbMV07dmFyIHVwZGF0ZVRpbWU9ZnVuY3Rpb24gdXBkYXRlVGltZSgpe3ZhciBub3c9c2VydmVyVGltZXN0YW1wP3NlcnZlclRpbWVzdGFtcCsoRGF0ZS5ub3coKS1zZXJ2VGltZUNoYW5nZVRpbWUpOkRhdGUubm93KCk7dmFyIGNvdW50PW5vdy1tb21lbnQoc3RhcnRUaW1lKS52YWx1ZU9mKCk7c2V0VGltZShuZXcgVGltZVNwYW4oMCwwLDAsMCxjb3VudCkpO307dXNlRWZmZWN0KGZ1bmN0aW9uKCl7Y29uc29sZS5sb2coJ3NldFNlcnZUaW1lQ2hhbmdlVGltZScpO3NldFNlcnZUaW1lQ2hhbmdlVGltZShEYXRlLm5vdygpKTt9LFtzZXJ2ZXJUaW1lc3RhbXBdKTt1c2VFZmZlY3QoZnVuY3Rpb24oKXt1cGRhdGVUaW1lKCk7dmFyIGNvdW50VXA9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXt1cGRhdGVUaW1lKCk7fSwxMDAwKTtyZXR1cm4gZnVuY3Rpb24gY2xlYXIoKXtjbGVhckludGVydmFsKGNvdW50VXApO307fSxbc3RhcnRUaW1lXSk7cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpjbGFzc25hbWVzKCdjb3VudFVwQ29udGVudCcsY291bnRVcENsYXNzTmFtZSl9LHRpbWUuZm9ybWF0KGZvcm1hdCkpO307ZXhwb3J0IGRlZmF1bHQgQ291bnRVcDtpZih0eXBlb2YgQ291bnRVcCE9PSd1bmRlZmluZWQnJiZDb3VudFVwJiZDb3VudFVwPT09T2JqZWN0KENvdW50VXApJiZPYmplY3QuaXNFeHRlbnNpYmxlKENvdW50VXApKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoQ291bnRVcCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiQ291bnRVcCIsZmlsZW5hbWU6InNyYy9Db3VudFVwL0NvdW50VXAudHN4In19KTt9"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/CountUp/CountUp.tsx"],"names":["moment","React","useEffect","useState","TimeSpan","classnames","require","CountUp","props","countUpClassName","startTime","format","serverTimestamp","time","setTime","Date","now","servTimeChangeTime","setServTimeChangeTime","updateTime","count","valueOf","console","log","countUp","setInterval","clear","clearInterval"],"mappings":"qKAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CAEA,GAAMC,CAAAA,UAAU,CAAGC,OAAO,CAAC,YAAD,CAA1B,CA2BA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAA0B,IAChCC,CAAAA,gBADgC,CACyBD,KADzB,CAChCC,gBADgC,CACdC,SADc,CACyBF,KADzB,CACdE,SADc,CACHC,MADG,CACyBH,KADzB,CACHG,MADG,CACKC,eADL,CACyBJ,KADzB,CACKI,eADL,eAGhBT,QAAQ,CAAC,GAAIC,CAAAA,QAAJ,EAAD,CAHQ,wCAGjCS,IAHiC,eAG3BC,OAH2B,8BAIYX,QAAQ,CAACY,IAAI,CAACC,GAAL,EAAD,CAJpB,yCAIjCC,kBAJiC,eAIbC,qBAJa,eAMxC,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMH,CAAAA,GAAG,CAAGJ,eAAe,CAAGA,eAAe,EAAIG,IAAI,CAACC,GAAL,GAAaC,kBAAjB,CAAlB,CAAyDF,IAAI,CAACC,GAAL,EAApF,CACA,GAAMI,CAAAA,KAAK,CAAGJ,GAAG,CAAGhB,MAAM,CAACU,SAAD,CAAN,CAAkBW,OAAlB,EAApB,CACAP,OAAO,CAAC,GAAIV,CAAAA,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyBgB,KAAzB,CAAD,CAAP,CACD,CAJD,CAMAlB,SAAS,CAAC,UAAM,CACdoB,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAL,qBAAqB,CAACH,IAAI,CAACC,GAAL,EAAD,CAArB,CACD,CAHQ,CAGN,CAACJ,eAAD,CAHM,CAAT,CAKAV,SAAS,CAAC,UAAM,CACdiB,UAAU,GACV,GAAMK,CAAAA,OAAO,CAAGC,WAAW,CAAC,UAAM,CAChCN,UAAU,GACX,CAF0B,CAExB,IAFwB,CAA3B,CAGA,MAAO,SAASO,CAAAA,KAAT,EAAiB,CACtBC,aAAa,CAACH,OAAD,CAAb,CACD,CAFD,CAGD,CARQ,CAQN,CAACd,SAAD,CARM,CAAT,CAUA,mBACE,2BAAK,SAAS,CAAEL,UAAU,CAAC,gBAAD,CAAmBI,gBAAnB,CAA1B,EAAiEI,IAAI,CAACF,MAAL,CAAYA,MAAZ,CAAjE,CADF,CAGD,CA9BD,CAgCA,cAAeJ,CAAAA,OAAf,C","sourcesContent":["import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport TimeSpan from '../core/TimeSpan';\n\nconst classnames = require('classnames');\n\ninterface ICountUpProps {\n  /**\n   * 服务器时间戳，如果不传，以客户端时间为准\n   */\n  serverTimestamp?: number;\n\n  /**\n   * 计时开始时间\n   */\n  startTime: string;\n\n  /**\n   * 显示时间的格式，最大只能格式化到天\n   * dd 表示天  hh 表示小时  mm表示分钟  ss表示秒\n   * HH可超过60小时  MM和SS同理\n   * 如 25小时20分钟10秒  可用HH:mm:ss表示为25:20:10  也可用dd hh:mm:ss 表示为01 01:20:10\n   */\n  format?: string;\n\n  /**\n   * 计时器显示的样式类名\n   */\n  countUpClassName?: string;\n}\n\n/**\n * 计时器\n * @param props\n */\nconst CountUp = (props: ICountUpProps) => {\n  const { countUpClassName, startTime, format, serverTimestamp } = props;\n\n  const [time, setTime] = useState(new TimeSpan());\n  const [servTimeChangeTime, setServTimeChangeTime] = useState(Date.now());\n\n  const updateTime = () => {\n    const now = serverTimestamp ? serverTimestamp + (Date.now() - servTimeChangeTime) : Date.now();\n    const count = now - moment(startTime).valueOf();\n    setTime(new TimeSpan(0, 0, 0, 0, count));\n  };\n\n  useEffect(() => {\n    console.log('setServTimeChangeTime');\n    setServTimeChangeTime(Date.now());\n  }, [serverTimestamp]);\n\n  useEffect(() => {\n    updateTime();\n    const countUp = setInterval(() => {\n      updateTime();\n    }, 1000);\n    return function clear() {\n      clearInterval(countUp);\n    };\n  }, [startTime]);\n\n  return (\n    <div className={classnames('countUpContent', countUpClassName)}>{time.format(format)}</div>\n  );\n};\n\nexport default CountUp;\n"]}]}