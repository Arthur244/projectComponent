{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx","mtime":1594367130808},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js","mtime":1609062631902},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/utils/TreeControl.mdx"],"names":["React","mdx","Playground","Props","TreeControl","layoutProps","MDXLayout","MDXContent","components","props","renderTree","list","id","pid","control","tree","listToTree","map","item","node","parent","whiteSpace","JSON","stringify","name","filterList","filter","indexOf","nodes","search","searchChain","forEach","newAtt","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport TreeControl from './TreeControl';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"treecontrol\"\n    }}>{`TreeControl`}</h1>\n    <p>{`树相关的辅助工具`}</p>\n    <ul>\n      <li parentName=\"ul\">{`一维数组转换为树结构`}</li>\n      <li parentName=\"ul\">{`搜索指定的结点`}</li>\n      <li parentName=\"ul\">{`搜索指定结点及其所有父结点`}</li>\n      <li parentName=\"ul\">{`foreach`}</li>\n      <li parentName=\"ul\">{`map`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"数组转换为树\"\n    }}>{`数组转换为树`}</h3>\n    <p><inlineCode parentName=\"p\">{`control.listToTree`}</inlineCode></p>\n    <Playground __position={0} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>树结构</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>树结构</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n          </div>;\n        }()}\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"过滤出新的树\"\n    }}>{`过滤出新的树`}</h3>\n    <p>{`挑选出name包含a的数据：`}<inlineCode parentName=\"p\">{`control.filter`}</inlineCode></p>\n    <Playground __position={1} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let filterList = control.filter(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>树结构</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>\\n          {JSON.stringify(filterList, null, 4)}\\n        </p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let filterList = control.filter(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n        <h2>原始数据</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n        <h2>树结构</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n        <h2>过滤出的数据</h2>\n        <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(filterList, null, 4)}</p>\n      </div>;\n        }()}\n  </div>\n    </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据：`}<inlineCode parentName=\"p\">{`control.search`}</inlineCode></p>\n    <Playground __position={2} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.search(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.search(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点-1\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据及其所有父结点：`}<inlineCode parentName=\"p\">{`control.searchChain`}</inlineCode></p>\n    <Playground __position={3} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.searchChain(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.searchChain(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"搜索指定结点-2\"\n    }}>{`搜索指定结点`}</h3>\n    <p>{`挑选出name包含a的第一个数据：`}<inlineCode parentName=\"p\">{`control.search`}</inlineCode></p>\n    <Playground __position={4} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    let nodes = control.search(tree, node => {\\n      return node.name && node.name.indexOf(\\'a\\') >= 0\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>过滤出的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(nodes, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          let nodes = control.search(tree, node => {\n            return node.name && node.name.indexOf('a') >= 0;\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>过滤出的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(nodes, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    <h3 {...{\n      \"id\": \"遍历树\"\n    }}>{`遍历树`}</h3>\n    <p>{`给所有结点加上新属性`}</p>\n    <Playground __position={5} __code={'<div>\\n  {(function renderTree() {\\n    let list = [\\n      {\\n        id: 1,\\n      },\\n      {\\n        id: 2,\\n      },\\n      {\\n        id: 3,\\n      },\\n      {\\n        id: \\'1-1\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'1-1-2\\',\\n        pid: \\'1-1\\',\\n        name: \\'a111\\',\\n      },\\n      {\\n        id: \\'1-2\\',\\n        pid: 1,\\n      },\\n      {\\n        id: \\'2-1\\',\\n        pid: 2,\\n        name: \\'a21\\',\\n      },\\n    ]\\n    let control = new TreeControl(\\'id\\', \\'children\\', \\'children\\')\\n    let tree = control.listToTree(\\n      list.map(item => ({ ...item })),\\n      (node, parent) => {\\n        if (!parent) {\\n          return !node.pid\\n        }\\n        return node.pid === parent.id\\n      },\\n    )\\n    control.forEach(tree, node => {\\n      node.newAtt = \\'newAtt\\'\\n    })\\n    return (\\n      <div>\\n        <h2>原始数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(list, null, 4)}</p>\\n        <h2>遍历的后的数据</h2>\\n        <p style={{ whiteSpace: \\'pre\\' }}>{JSON.stringify(tree, null, 4)}</p>\\n      </div>\\n    )\\n  })()}\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      TreeControl\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <div>\n    {function renderTree() {\n          let list = [{\n            id: 1\n          }, {\n            id: 2\n          }, {\n            id: 3\n          }, {\n            id: '1-1',\n            pid: 1\n          }, {\n            id: '1-1-2',\n            pid: '1-1',\n            name: 'a111'\n          }, {\n            id: '1-2',\n            pid: 1\n          }, {\n            id: '2-1',\n            pid: 2,\n            name: 'a21'\n          }];\n          let control = new TreeControl(\"id\", \"children\", \"children\");\n          let tree = control.listToTree(list.map(item => ({ ...item\n          })), (node, parent) => {\n            if (!parent) {\n              return !node.pid;\n            }\n\n            return node.pid === parent.id;\n          });\n          control.forEach(tree, node => {\n            node.newAtt = 'newAtt';\n          });\n          return <div>\n            <h2>原始数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(list, null, 4)}</p>\n            <h2>遍历的后的数据</h2>\n            <p style={{\n              whiteSpace: 'pre'\n            }}>{JSON.stringify(tree, null, 4)}</p>\n          </div>;\n        }()}\n    </div>\n  </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}