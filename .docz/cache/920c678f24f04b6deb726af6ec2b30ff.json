{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/limitUpload/LimitUpload.mdx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/limitUpload/LimitUpload.mdx","mtime":1609755868542},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/@mdx-js/loader/index.js","mtime":1609062631902},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/limitUpload/LimitUpload.mdx"],"names":["React","mdx","Playground","Props","LimitUpload","UploadType","UploadAcceptType","UploadOutlined","layoutProps","MDXLayout","MDXContent","components","props","Upload","Button","Form","file","response","id","fileList","console","log","alert","name","success","IMAGE","OFFICE","uid","status","url","loading","borderLeft","paddingLeft","method","state","columns","formRef","createRef","current","setFieldsValue","myFile","thumbUrl","resetFields","Component","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport 'antd/dist/antd.css';\nimport LimitUpload from './LimitUpload';\nimport UploadType from '../enums/UploadType';\nimport UploadAcceptType from '../enums/UploadAcceptType';\nimport { Upload,Button, Form } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"limitupload\"\n    }}>{`LimitUpload`}</h1>\n    <p>{`可设置最大上传文件数量的组件，通常，在 `}<strong parentName=\"p\">{`上传头像`}</strong>{` 时，这个组件很有用。`}</p>\n    <h3 {...{\n      \"id\": \"主要做了以下工作\"\n    }}>{`主要做了以下工作`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`可自定义最大允许上传的文件数量`}</li>\n      <li parentName=\"ul\">{`上传错误的处理`}</li>\n      <li parentName=\"ul\">{`根据type自动设置accept`}</li>\n      <li parentName=\"ul\">{`根据type自动设置显示元素`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"你可以\"\n    }}>{`你可以`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`自定义显示元素`}</li>\n      <li parentName=\"ul\">{`自定义最大允许上传的数量`}</li>\n      <li parentName=\"ul\">{`自定义错误处理方式`}</li>\n      <li parentName=\"ul\">{`设置type`}</li>\n      <li parentName=\"ul\">{`设置accept`}</li>\n      <li parentName=\"ul\">{`设置已存在的文件`}</li>\n      <li parentName=\"ul\">{`给antd的Upload透传props`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"示例\"\n    }}>{`示例`}</h2>\n    <h3 {...{\n      \"id\": \"默认，请观察开发者工具的输出，当文件上传成功、移除时，会触发onchange\"\n    }}>{`默认，请观察开发者工具的输出，当文件\"上传成功、移除\"时，会触发onChange`}</h3>\n    <Playground __position={0} __code={'<LimitUpload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n  onChange={fileList => {\\n    console.log(\\'fileList\\', fileList)\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} onChange={fileList => {\n        console.log('fileList', fileList);\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"上传异常时\"\n    }}>{`上传异常时`}</h3>\n    <Playground __position={1} __code={'<LimitUpload\\n  action=\\\"./\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload action=\"./\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义上传异常的提示方法\"\n    }}>{`自定义上传异常的提示方法`}</h3>\n    <Playground __position={2} __code={'<LimitUpload\\n  action=\\\"./\\\"\\n  onError={file => {\\n    alert(`${file.name}上传失败`)\\n  }}\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload action=\"./\" onError={file => {\n        alert(`${file.name}上传失败`);\n      }} validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"禁用\"\n    }}>{`禁用`}</h3>\n    <Playground __position={3} __code={'<LimitUpload\\n  disabled\\n  action=\\\"./\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.success) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>\\n<hr />\\n<LimitUpload disabled type={UploadType.IMAGE} action=\\\"./\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload disabled action=\"./\" validateFile={file => {\n        if (file.response && file.response.success) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n  <hr />\n  <LimitUpload disabled type={UploadType.IMAGE} action=\"./\" mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"限制上传数量为2个，上传2个文件后，上传按钮会消失\"\n    }}>{`限制上传数量为2个，上传2个文件后，上传按钮会消失`}</h3>\n    <Playground __position={4} __code={'<LimitUpload\\n  maxNumber={2}\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload maxNumber={2} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"图片上传\"\n    }}>{`图片上传`}</h3>\n    <Playground __position={5} __code={'<LimitUpload\\n  type={UploadType.IMAGE}\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload type={UploadType.IMAGE} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"office文档上传，只能选择office文档\"\n    }}>{`office文档上传，只能选择office文档`}</h3>\n    <Playground __position={6} __code={'<LimitUpload\\n  accept={UploadAcceptType.OFFICE}\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload accept={UploadAcceptType.OFFICE} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"设置已上传文件\"\n    }}>{`设置已上传文件`}</h3>\n    <Playground __position={7} __code={'<LimitUpload\\n  defaultFileList={[\\n    {\\n      uid: \\'1\\',\\n      name: \\'xxx.png\\',\\n      status: \\'done\\',\\n      response: {\\n        status: \\'done\\',\\n      }, // custom error message to show\\n      url: \\'http://www.baidu.com/xxx.png\\',\\n    },\\n    {\\n      uid: \\'2\\',\\n      name: \\'yyy.png\\',\\n      response: {\\n        status: \\'done\\',\\n      },\\n      url: \\'http://www.baidu.com/yyy.png\\',\\n    },\\n  ]}\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload defaultFileList={[{\n        uid: '1',\n        name: 'xxx.png',\n        status: 'done',\n        response: {\n          status: 'done'\n        },\n        // custom error message to show\n        url: 'http://www.baidu.com/xxx.png'\n      }, {\n        uid: '2',\n        name: 'yyy.png',\n        response: {\n          status: 'done'\n        },\n        url: 'http://www.baidu.com/yyy.png'\n      }]} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义渲染方法\"\n    }}>{`自定义渲染方法`}</h3>\n    <Playground __position={8} __code={'<LimitUpload\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  renderChooser={loading => {\\n    return (\\n      <span style={{ borderLeft: \\'3px solid red\\', paddingLeft: 10 }}>\\n        {loading ? \\'上传中...\\' : \\'点我上传\\'}\\n      </span>\\n    )\\n  }}\\n  validateFile={file => {\\n    console.log(\\'file\\', file)\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n  <LimitUpload action=\"https://jsonplaceholder.typicode.com/posts/\" renderChooser={loading => {\n        return <span style={{\n          borderLeft: '3px solid red',\n          paddingLeft: 10\n        }}>{loading ? '上传中...' : '点我上传'}</span>;\n      }} validateFile={file => {\n        console.log(\"file\", file);\n\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"自定义传递给upload的属性\"\n    }}>{`自定义传递给upload的属性`}</h3>\n    <p>{`观察开发者工具，请求是PUT`}</p>\n    <Playground __position={9} __code={'<LimitUpload\\n  uploadProps={{\\n    method: \\'put\\',\\n  }}\\n  action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n  validateFile={file => {\\n    if (file.response && file.response.id) {\\n      return true\\n    } else {\\n      return false\\n    }\\n  }}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n <LimitUpload uploadProps={{\n        method: 'put'\n      }} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n        if (file.response && file.response.id) {\n          return true;\n        } else {\n          return false;\n        }\n      }} mdxType=\"LimitUpload\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"结合表单\"\n    }}>{`结合表单`}</h3>\n    <Playground __position={10} __code={'class Demo extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        columns: [],\\n      }\\n      this.formRef = React.createRef()\\n    }\\n    componentDidMount() {\\n      this.formRef.current.setFieldsValue({\\n        myFile: [\\n          {\\n            uid: \\'1\\',\\n            name: \\'aaa.png\\',\\n            status: \\'done\\',\\n            response: { id: 2 },\\n            url:\\n              \\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\\',\\n            thumbUrl:\\n              \\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\\',\\n          },\\n        ],\\n      })\\n    }\\n\\n    render() {\\n      return (\\n        <div>\\n          <Form ref={this.formRef} layout=\\\"inline\\\">\\n            <Form.Item label=\\\"文件\\\" name=\\\"myFile\\\">\\n              <LimitUpload\\n                type={UploadType.IMAGE}\\n                action=\\\"https://jsonplaceholder.typicode.com/posts/\\\"\\n                validateFile={file => {\\n                  console.log(\\'file\\', file)\\n                  if (\\n                    file.response &&\\n                    file.status === \\'done\\' &&\\n                    file.response.id\\n                  ) {\\n                    return true\\n                  } else {\\n                    return false\\n                  }\\n                }}\\n              />\\n            </Form.Item>\\n          </Form>\\n          <Button\\n            onClick={() => {\\n              this.formRef.current.setFieldsValue({\\n                myFile: [\\n                  {\\n                    uid: \\'1\\',\\n                    name: \\'bb.png\\',\\n                    status: \\'done\\',\\n                    response: { id: 1 },\\n                    url:\\n                      \\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\\',\\n                    thumbUrl:\\n                      \\'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\\',\\n                  },\\n                ],\\n              })\\n            }}\\n          >\\n            修改表单值\\n          </Button>\\n          <Button\\n            onClick={() => {\\n              this.formRef.current.setFieldsValue({})\\n              this.formRef.current.resetFields()\\n            }}\\n          >\\n            重置表单值\\n          </Button>\\n        </div>\\n      )\\n    }\\n  }'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      LimitUpload,\n      UploadType,\n      UploadAcceptType,\n      Upload,\n      Button,\n      Form,\n      UploadOutlined\n    }} __codesandbox={`undefined`} mdxType=\"Playground\">\n      {class Demo extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {\n            columns: []\n          };\n          this.formRef = React.createRef();\n        }\n\n        componentDidMount() {\n          this.formRef.current.setFieldsValue({\n            myFile: [{\n              uid: '1',\n              name: 'aaa.png',\n              status: 'done',\n              response: {\n                id: 2\n              },\n              url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n              thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n            }]\n          });\n        }\n\n        render() {\n          return <div>\n      <Form ref={this.formRef} layout=\"inline\" mdxType=\"Form\">\n        <Form.Item label=\"文件\" name=\"myFile\">\n          <LimitUpload type={UploadType.IMAGE} action=\"https://jsonplaceholder.typicode.com/posts/\" validateFile={file => {\n                  console.log(\"file\", file);\n\n                  if (file.response && file.status === \"done\" && file.response.id) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                }} mdxType=\"LimitUpload\" />\n        </Form.Item>\n      </Form>\n      <Button onClick={() => {\n              this.formRef.current.setFieldsValue({\n                myFile: [{\n                  uid: '1',\n                  name: 'bb.png',\n                  status: 'done',\n                  response: {\n                    id: 1\n                  },\n                  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n                  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n                }]\n              });\n            }} mdxType=\"Button\">\n        修改表单值\n      </Button>\n      <Button onClick={() => {\n              this.formRef.current.setFieldsValue({});\n              this.formRef.current.resetFields();\n            }} mdxType=\"Button\">\n        重置表单值\n      </Button>\n    </div>;\n        }\n\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"属性\"\n    }}>{`属性`}</h2>\n    <Props of={LimitUpload} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]}]}