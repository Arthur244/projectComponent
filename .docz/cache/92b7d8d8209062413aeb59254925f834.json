{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.tsx","mtime":1609063495176},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/utils/FormUtil.tsx"],"names":["Col","FormItem","React","FormUtil","formItemList","columnCount","defaultLabelSpan","defaultWrapSpan","length","defaultSpan","rows","i","item","span","label","Math","min","labelSpan","undefined","round","itemProps","wrapperCol","labelCol","offset","wrapSpan","formItem","content","props","Object","assign","name","rules","valuePropName","formItemProps","children","contentIsFormItem","cloneElement","col","row","totalSpan","cols","push","map","rowIndex","colIndex","index"],"mappings":"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","sourcesContent":["import { Row } from 'antd';\nimport Col, { ColProps } from 'antd/lib/col';\nimport FormItem, { FormItemProps } from 'antd/lib/form/FormItem';\nimport React from 'react';\nimport IFormItemData from '../interfaces/IFormItemData';\n\nclass FormUtil {\n  /**\n   * 渲染表单项\n   * @param formItemList 表单数据源\n   *    * @param columnCount 列数，默认为2\n   * @param defaultLabelSpan 每个表单项的标签默认占用的列数\n   */\n  static renderFormItems(\n    formItemList: IFormItemData[],\n    columnCount: number = 2,\n    defaultLabelSpan = 6,\n    defaultWrapSpan?: number,\n  ) {\n    if (!formItemList || !formItemList.length) {\n      return null;\n    }\n\n    const defaultSpan = 24 / columnCount;\n\n    const rows: { totalSpan: number; cols: { span: number; formItem: React.ReactNode }[] }[] = [];\n    // 循环表单项\n    for (let i = 0; i < formItemList.length; i++) {\n      const item = formItemList[i];\n\n      // 获取一个表单项占多少列，优先级从高到低为\n      // 1. item.span\n      // 2. item.label.length > 6? 占一整列（24）：defaultSpan\n      let span = item.span;\n      if (!span) {\n        if (item.label && typeof item.label === 'string' && item.label.length > 6) {\n          span = 24;\n        } else {\n          span = defaultSpan;\n        }\n      }\n      span = Math.min(24, span);\n\n      // 创建formItem\n      // 获取 label占用的空间，优先用item设置的值，未设置，则根据defaultSpan取一个合适的值，以确保对齐\n      // 例如：defaultSpan是12, defaultLabelSpan=6，而当前ispan = 8, 则当前item的labelspan= 12*6/8\n      const labelSpan = Math.min(\n        24,\n        item.labelSpan !== undefined\n          ? item.labelSpan\n          : Math.round((defaultLabelSpan * defaultSpan) / span),\n      );\n      // 如果表单项有label，则设置labelCol；否则，设置offsetCol，以确保表单元素是对齐的\n      const itemProps: { labelCol?: ColProps; wrapperCol?: ColProps } = {};\n      itemProps.wrapperCol = {};\n      if (item.label) {\n        itemProps.labelCol = { span: labelSpan };\n      } else {\n        itemProps.wrapperCol.offset = labelSpan;\n      }\n\n      // 设置内容占用的列数\n      // 优先使用item.wrapSpan，\n      // 其次为defaultWrapSpan\n      // 如果都未设置，则: 自动计算 = 24 - labelSpan\n      if (item.wrapSpan !== undefined) {\n        itemProps.wrapperCol.span = item.wrapSpan;\n      } else if (defaultWrapSpan) {\n        itemProps.wrapperCol.span = defaultWrapSpan;\n      } else {\n        itemProps.wrapperCol.span = 24 - labelSpan;\n      }\n\n      let formItem = null;\n\n      if (item.content) {\n        const props: FormItemProps = Object.assign({\n          label: item.label,\n          name: item.name,\n          rules: item.rules,\n          valuePropName: item.valuePropName || 'value',\n          ...itemProps,\n          ...item.formItemProps,\n          children: null,\n        });\n\n        if (item.contentIsFormItem) {\n          formItem = React.cloneElement(\n            item.content as React.ReactElement,\n            Object.assign(props, (item.content as React.ReactElement).props),\n          );\n        } else {\n          formItem = <FormItem {...props}>{item.content}</FormItem>;\n        }\n      }\n\n      // 创建col\n      const col = {\n        span,\n        formItem,\n      };\n\n      // 获取合适的row\n      // 先获取已存在的最后一个row，如果不存在，或者span装不下当前col，则新建一个\n      let row;\n      if (rows.length) {\n        row = rows[rows.length - 1];\n      }\n\n      if (!row || row.totalSpan + span > 24) {\n        row = { totalSpan: 0, cols: [] };\n        rows.push(row);\n      }\n\n      row.totalSpan += span;\n      row.cols.push(col);\n    }\n\n    // 循环row，渲染react节点\n    return rows.map((row, rowIndex) => {\n      return (\n        <Row key={rowIndex}>\n          {row.cols.map((col, colIndex) => {\n            return (\n              <Col key={colIndex} span={col.span}>\n                {col.formItem}\n              </Col>\n            );\n          })}\n        </Row>\n      );\n    });\n  }\n\n  static renderInlinFormItems(formItemList: IFormItemData[]) {\n    if (!formItemList || !formItemList.length) {\n      return null;\n    }\n\n    return formItemList.map((item, index) => {\n      return (\n        <FormItem\n          key={index}\n          label={item.label}\n          name={item.name}\n          rules={item.rules}\n          {...item.formItemProps}\n        >\n          {item.content}\n        </FormItem>\n      );\n    });\n  }\n}\n\nexport default FormUtil;\n"]}]}