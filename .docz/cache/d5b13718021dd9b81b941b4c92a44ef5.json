{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/searchTable/SearchTable.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/searchTable/SearchTable.tsx","mtime":1594367130804},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/searchTable/SearchTable.tsx"],"names":["React","Component","Column","SearchTable","state","pageSize","props","defaultPageSize","total","Math","max","ceil","refresh","requestList","setSearchParams","searchParams","onSearchParamsChange","setState","changePage","setColumn","source","target","newColumns","titleList","newColumns1","i","length","push","title","sourceIndex","indexOf","targetIndex","current","dataSource","columns","loading","defaultSearchParams","prevProps","pageIndex","maxPageIndex","getListFunction","onDataChange","setLoading","res","data","range","className","tableClassName","style","tableStyle","tableProps","renderExtra","rowKey","disableAutoHidePage","showTotal","defaultShowTotal","selectedEnable","showSizeChanger","showQuickJumper","dragEnable","selectedRowKeys","selectedRows","pageTotal","undefined","onChange","value","onShowSizeChange","_","size","oldIndex","newIndex"],"mappings":"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","sourcesContent":["import { Table } from 'antd';\nimport { ColumnsType, ColumnType, TableProps } from 'antd/lib/table';\nimport React, { Component, ReactNode } from 'react';\nimport IComponentProps from '../interfaces/IComponentProps';\nconst { Column } = Table;\n\nexport interface ITableResponse<T> {\n  dataSource: T[];\n  total: number;\n}\nexport interface ISearchTableExtra<T> {\n  /**\n   * 当前选中的key列表\n   */\n  selectedRowKeys?: any[];\n\n  /**\n   * 当前选中的数据列表\n   */\n  selectedRows?: T[];\n\n  /**\n   * 是否加载中\n   */\n  loading: boolean;\n\n  /**\n   * 获取搜索参数\n   */\n  searchParams: any;\n\n  /**\n   * 刷新\n   */\n  refresh: () => void;\n\n  /**\n   * 设置搜索参数，此方法会把页码重置到第一页\n   */\n  setSearchParams: (params: any) => void;\n}\n\ninterface ISearchTableState<T> {\n  total: number;\n  current: number;\n  pageSize?: number;\n  dataSource: T[];\n  selectedRowKeys?: any[];\n  selectedRows?: T[];\n  loading: boolean;\n  newColumns: ColumnType<T>[];\n  /**\n   * 搜索参数\n   */\n  searchParams?: any;\n}\ninterface ISearchTableProps<T> extends IComponentProps {\n  /**\n   * 表格的列数据\n   */\n  columns: ColumnsType<T>;\n\n  /**\n   * 请求数据的方法，需返回指定格式的数据\n   *\n   * @param currentPage 当前页码，从1开始\n   * @param pageSize 一页显示的数据量\n   * @param searchParams 搜索参数\n   */\n  getListFunction: (\n    currentPage: number,\n    pageSize: number,\n    searchParams: any,\n  ) => Promise<ITableResponse<T>>;\n\n  rowKey?: ((record: T) => string) | string;\n\n  /**\n   * 渲染表格附加的表单，通常用来放置批量删除，批量设置状态这样的按钮\n   */\n  renderExtra?: (extraData: ISearchTableExtra<T>) => ReactNode;\n\n  /**\n   * 是否显示快速跳转页码的输入框\n   */\n  showQuickJumper?: boolean;\n\n  /**\n   * 是否可切换每页显示的数量\n   */\n  showSizeChanger?: boolean;\n\n  /**\n   * 显示总数量的方法\n   */\n  showTotal?: ((total: number, range: [number, number]) => React.ReactNode) | false;\n\n  /**\n   * 表格的样式名\n   */\n  tableClassName?: string;\n\n  /**\n   * 表格的样式\n   */\n  tableStyle?: React.CSSProperties;\n\n  /**\n   * 表格每页显示的数量\n   */\n  pageSize?: number;\n\n  /**\n   * 是否禁用： 当不满一页时，是否自动隐藏分面器\n   */\n  disableAutoHidePage?: boolean;\n\n  /**\n   * 需要额外设置给Table的props\n   */\n  tableProps?: TableProps<T>;\n\n  /**\n   * 是否可选中\n   */\n  selectedEnable?: boolean;\n\n  /**\n   * 是否可拖动\n   */\n  dragEnable?: boolean;\n\n  /**\n   * 默认搜索参数\n   */\n  defaultSearchParams?: any;\n\n  /**\n   * 搜索参数变化时触发的事件\n   */\n  onSearchParamsChange?: (searchParams: any) => void;\n\n  /**\n   * 数据源发生变化时触发的事件\n   */\n  onDataChange?: (data: ITableResponse<T>) => void;\n}\n\nclass SearchTable<T extends object = any> extends Component<\n  ISearchTableProps<T>,\n  ISearchTableState<T>\n> {\n  static defaultPageSize = 10;\n\n  private get pageSize() {\n    return this.state.pageSize || this.props.pageSize || SearchTable.defaultPageSize || 10;\n  }\n\n  private get maxPageIndex() {\n    const { total } = this.state;\n    return Math.max(1, Math.ceil(total / this.pageSize));\n  }\n\n  constructor(props: ISearchTableProps<T>) {\n    super(props);\n    this.state = {\n      total: 0,\n      current: 1,\n      dataSource: [],\n      newColumns: this.props.columns,\n      loading: false,\n      searchParams: props.defaultSearchParams,\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  componentDidUpdate(prevProps: ISearchTableProps<T>) {\n    if (prevProps.columns !== this.props.columns) {\n      this.setState({ newColumns: this.props.columns });\n    }\n  }\n\n  private changePage(pageIndex?: number) {\n    const { current } = this.state;\n    if (!pageIndex) {\n      pageIndex = current;\n    }\n    const maxPageIndex = this.maxPageIndex;\n\n    if (pageIndex < 1) {\n      pageIndex = 1;\n    }\n\n    if (pageIndex > maxPageIndex) {\n      pageIndex = maxPageIndex;\n    }\n    this.setState({ current: pageIndex }, () => this.requestList());\n  }\n\n  public refresh = () => {\n    this.requestList();\n  };\n\n  private setLoading(loading: boolean) {\n    this.setState({ loading });\n  }\n\n  private setSearchParams = (searchParams: any) => {\n    const { onSearchParamsChange } = this.props;\n    this.setState({ searchParams }, () => {\n      this.changePage(1);\n      if (onSearchParamsChange) {\n        onSearchParamsChange(searchParams);\n      }\n    });\n  };\n\n  private async requestList() {\n    const { getListFunction, onDataChange } = this.props;\n    const { searchParams } = this.state;\n    const { current } = this.state;\n\n    this.setLoading(true);\n    const res = await getListFunction(current, this.pageSize, searchParams);\n    this.setLoading(false);\n    const data: ITableResponse<T> = {\n      dataSource: res.dataSource,\n      total: res.total,\n    };\n    this.setState(\n      {\n        ...data,\n      },\n      () => {\n        if (onDataChange) {\n          onDataChange(data);\n        }\n        if (this.state.current > this.maxPageIndex) {\n          this.changePage();\n        }\n      },\n    );\n  }\n\n  setColumn = (source: any, target: any) => {\n    let { newColumns } = this.state;\n    const titleList = [];\n    const newColumns1 = [];\n    for (let i = 0; i < newColumns.length; i += 1) {\n      titleList.push(newColumns[i].title);\n      newColumns1.push(newColumns[i]);\n    }\n    let sourceIndex = titleList.indexOf(source.title);\n    let targetIndex = titleList.indexOf(target.title);\n    newColumns1[sourceIndex] = newColumns[targetIndex];\n    newColumns1[targetIndex] = newColumns[sourceIndex];\n    this.setState({\n      newColumns: newColumns1,\n    });\n  };\n\n  private defaultShowTotal(total: number, range: [number, number]): React.ReactNode {\n    return `共${total}项`;\n  }\n\n  public render(): ReactNode {\n    const {\n      className,\n      tableClassName,\n      style,\n      tableStyle,\n      tableProps,\n      renderExtra,\n      rowKey,\n      disableAutoHidePage,\n      showTotal = this.defaultShowTotal,\n      selectedEnable,\n      showSizeChanger = true,\n      showQuickJumper = true,\n      dragEnable,\n    } = this.props;\n\n    const pageSize = this.pageSize;\n    const {\n      selectedRowKeys,\n      selectedRows,\n      loading,\n      dataSource,\n      total,\n      current,\n      newColumns,\n      searchParams,\n    } = this.state;\n    const pageTotal: number = total / pageSize;\n    return (\n      <div className={className} style={style}>\n        {renderExtra &&\n          renderExtra({\n            selectedRowKeys,\n            selectedRows,\n            loading,\n            searchParams,\n            refresh: this.refresh,\n            setSearchParams: this.setSearchParams,\n          })}\n        <Table<T>\n          className={tableClassName}\n          bordered\n          style={tableStyle}\n          {...tableProps}\n          rowKey={rowKey || 'id'}\n          loading={loading}\n          dataSource={dataSource}\n          pagination={\n            !disableAutoHidePage && pageTotal <= 1\n              ? false\n              : {\n                  total,\n                  current,\n                  showQuickJumper,\n                  showTotal: showTotal === false ? undefined : showTotal,\n                  showSizeChanger,\n                  pageSize: pageSize,\n                  onChange: (value: number) => {\n                    this.changePage(value);\n                  },\n                  onShowSizeChange: (_, size: number) => {\n                    const oldIndex = current * pageSize;\n                    const newIndex = Math.ceil(oldIndex / size);\n                    this.setState({ pageSize: size }, () => this.changePage(newIndex));\n                  },\n                }\n          }\n          rowSelection={\n            selectedEnable\n              ? {\n                  onChange: (selectedRowKeys: React.ReactText[], selectedRows: T[]) => {\n                    this.setState({ selectedRowKeys, selectedRows });\n                  },\n                }\n              : undefined\n          }\n          columns={newColumns}\n        >\n          {/* {newColumns.map((item, index) => (\n            <Column<T>\n              key={index}\n              title={\n                dragEnable ? (\n                  <div\n                    draggable\n                    onDragStart={event => {\n                      event.dataTransfer.setData('item', JSON.stringify(item));\n                    }}\n                    style={{ cursor: 'move' }}\n                    data-set={JSON.stringify(item)}\n                    onDragOver={event => {\n                      event.preventDefault();\n                    }}\n                    onDrop={(event: any) => {\n                      const item = event.dataTransfer.getData('item');\n                      this.setColumn(JSON.parse(item), JSON.parse(event.target.dataset.set));\n                    }}\n                  >\n                    {item.title}\n                  </div>\n                ) : (\n                  <span>{item.title}</span>\n                )\n              }\n              dataIndex={item.dataIndex}\n              render={(value, record, index) =>\n                item.render ? item.render(value, record, index) : <span>{value}</span>\n              }\n              {...item}\n            />\n          ))} */}\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default SearchTable;\n"]}]}