{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/curd/Curd.tsx","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/curd/Curd.tsx","mtime":1596508511879},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/curd/Curd.tsx"],"names":["DeleteOutlined","EditOutlined","EyeOutlined","React","Component","ConfirmButton","SearchForm","SearchTable","classnames","require","Curd","props","extraData","defaultRenderExtra","selectedRowKeys","disabledCreate","renderCreater","renderCreateElement","renderBatchDeleteElement","deletingKeyList","state","showCreate","_batchDeleteEnable","remove","loading","length","defaultRenderEditColumns","record","params","disabledRecordDelete","disabledRecordEdit","disabledRecordPreview","showDelete","_showDelete","showEdit","_showEdit","showPreview","_showPreview","key","getRecordKey","renderDeleteElement","renderEditElement","renderEditPreviewElement","loadingDelete","indexOf","edit","preview","closeEdit","setState","visibleEdit","closePreview","visiblePreview","visibleCreate","closeCreate","idList","deleteFunction","refresh","editRecord","rowKey","disabledEditColumn","renderEditColumns","editColumnWidth","title","fixed","width","align","className","render","text","index","columns","getListFunction","onDataChange","onSearchParamsChange","selectedEnable","renderTableExtra","searchItem","pageSize","disabledDelete","renderEditer","renderPreviewer","showSizeChanger","showQuickJumper","inlineMaxNumber","searchFormProps","tableProps","style","showTotal","tableSelectedEnable","Boolean","undefined","editColumn","getEditColumn","useColumns","concat","scroll","x","initialValues","setSearchParams","values","disabledEdit","disabledPreview"],"mappings":"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","sourcesContent":["import { DeleteOutlined, EditOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\nimport { ColumnsType, ColumnType, TableProps } from 'antd/lib/table';\nimport React, { Component, ReactNode } from 'react';\nimport ConfirmButton from '../confirmButton/ConfirmButton';\nimport IComponentProps from '../interfaces/IComponentProps';\nimport IFormItemData from '../interfaces/IFormItemData';\nimport SearchForm, { ISearchFormProps } from '../searchForm/SearchForm';\nimport SearchTable, { ISearchTableExtra, ITableResponse } from '../searchTable/SearchTable';\nimport './Curd.less';\n\nconst classnames = require('classnames');\n\ninterface ICurdState<T> {\n  /**\n   * 删除中的ID列表\n   */\n  deletingKeyList: any[];\n\n  visibleEdit?: boolean;\n  editRecord?: T;\n\n  visiblePreview?: boolean;\n\n  visibleCreate?: boolean;\n}\ninterface ICurdProps<T> extends IComponentProps {\n  /**\n   * 表格的列数据\n   */\n  columns: ColumnsType<T>;\n\n  /**\n   * 请求数据的方法，需返回指定格式的数据\n   *\n   * @param currentPage 当前页码，从1开始\n   * @param pageSize 一页显示的数据量\n   * @param searchParams 搜索参数\n   */\n  getListFunction: (\n    currentPage: number,\n    pageSize: number,\n    searchParams: any,\n  ) => Promise<ITableResponse<T>>;\n\n  /**\n   * 数据标识符，可以是属性名称或者一个函数，如果是函数，返回值表示标识符的值\n   */\n  rowKey?: string | ((record: T) => string);\n\n  /**\n   * 一页显示的数量\n   */\n  pageSize?: number;\n\n  /**\n   * 渲染编辑列\n   *\n   * @param record 数据项\n   * @param index 数据行序号\n   * @param defaultRender 默认的渲染方法，可调用此方法以插入默认渲染的元素\n   */\n  renderEditColumns?: (\n    record: T,\n    index: number,\n    defaultRender: (\n      record: T,\n      params?: {\n        disabledRecordDelete?: boolean;\n        disabledRecordEdit?: boolean;\n        disabledRecordPreview?: boolean;\n      },\n    ) => ReactNode,\n  ) => ReactNode;\n\n  /**\n   * 渲染列表顶部操作区\n   *\n   * @param extraData 表格的扩展区可用的数据的方法，例如selectedRowKeys\n   * @param defaultRenderTableExtra 默认的渲染方法，可调用此方法以插入默认渲染的元素\n   */\n  renderTableExtra?: (\n    extraData: ISearchTableExtra<T>,\n    defaultRenderTableExtra: (extraData: ISearchTableExtra<T>) => ReactNode,\n  ) => ReactNode;\n\n  /**\n   * 搜索表单的数据\n   */\n  searchItem?: IFormItemData[];\n\n  /**\n   * 删除函数\n   */\n  deleteFunction?: (idList: any[]) => Promise<any>;\n\n  /**\n   * 渲染编辑页面，通常是一个弹窗\n   *\n   * @param visible 是否期望可见\n   * @param close 关闭的方法，调用此方法后，visible会变成false\n   * @extraData 表格对外扩展方法，如果需要刷新，可使用extraData.refresh()\n   * @record 当前编辑的源数据\n   */\n  renderEditer?: (\n    visible: boolean,\n    close: () => void,\n    extraData: ISearchTableExtra<T>,\n    record?: T,\n  ) => ReactNode;\n\n  /**\n   * 渲染新建页面\n   * @param visible 是否期望可见\n   * @param close 关闭的方法，调用此方法后，visible会变成false\n   * @extraData 表格对外扩展方法，如果需要刷新，可使用extraData.refresh()\n   */\n  renderCreater?: (\n    visible: boolean,\n    close: () => void,\n    extraData: ISearchTableExtra<T>,\n  ) => ReactNode;\n\n  /**\n   * 渲染编辑页面，通常是一个弹窗\n   *\n   * @param visible 是否期望可见\n   * @param close 关闭的方法，调用此方法后，visible会变成false\n   * @extraData 表格对外扩展方法，如果需要刷新，可使用extraData.refresh()\n   * @record 要查看的源数据\n   */\n  renderPreviewer?: (\n    visible: boolean,\n    close: () => void,\n    extraData: ISearchTableExtra<T>,\n    record?: T,\n  ) => ReactNode;\n\n  /**\n   * 自定义新建操作的外观元素\n   */\n  renderCreateElement?: () => ReactNode;\n\n  /**\n   * 自定义批量删除的外观元素\n   */\n  renderBatchDeleteElement?: () => ReactNode;\n\n  /**\n   * 自定义删除的外观元素\n   */\n  renderDeleteElement?: () => ReactNode;\n\n  /**\n   * 自定义编辑的外观元素\n   */\n  renderEditElement?: () => ReactNode;\n\n  /**\n   * 自定义预览（查看）的外观元素\n   */\n  renderEditPreviewElement?: () => ReactNode;\n\n  /**\n   * 是否可选择\n   */\n  selectedEnable?: boolean;\n\n  /**\n   * 是否禁用新建\n   */\n  disabledCreate?: boolean;\n\n  /**\n   * 是否禁用删除\n   */\n  disabledDelete?: boolean;\n\n  /**\n   * 是否禁用编辑\n   */\n  disabledEdit?: boolean;\n\n  /**\n   * 是否禁用预览\n   */\n  disabledPreview?: boolean;\n\n  /**\n   * 是否禁用编辑列\n   */\n  disabledEditColumn?: boolean;\n\n  /**\n   * 编辑列的宽度\n   */\n  editColumnWidth?: number;\n\n  /**\n   * 是否可切换每页显示的数量\n   */\n  showSizeChanger?: boolean;\n\n  /**\n   * 是否显示快速跳转页码的输入框\n   */\n  showQuickJumper?: boolean;\n\n  /**\n   * 显示总数量的方法, false表示不显示\n   */\n  showTotal?: ((total: number, range: [number, number]) => React.ReactNode) | false;\n\n  /**\n   * 搜索表单项小于等于几时，使用inline，默认为3\n   */\n  inlineMaxNumber?: number;\n\n  /**\n   * 传递给搜索表单的props\n   */\n  searchFormProps?: ISearchFormProps;\n\n  /**\n   * 传递给表格的props\n   */\n  tableProps?: TableProps<T>;\n\n  /**\n   * 搜索参数变化时触发的事件\n   */\n  onSearchParamsChange?: (searchParams: any) => void;\n\n  /**\n   * 数据源发生变化时触发的事件\n   */\n  onDataChange?: (data: ITableResponse<T>) => void;\n}\n\n/**\n * 包含增删改查的组件\n *\n * ## 自带以下功能\n * + 列表--分页表格\n * + 增--表格上方操作区“新增按钮”-->打开新建弹窗\n * + 改--操作列“编辑按钮”-->打开编辑弹窗\n * + 删--操作列“删除按钮”-->删除操作\n *\n * ## 必填属性\n * + columns--表格列\n * + getListFunction--获取列表的方法\n *\n * ## 可选属性\n *\n * + rowKey--标识符，默认ID。 删除会用以rowKey为参数\n * + 扩展操作列\n * + 扩展表格上方操作区\n * + searchItems--搜索表单项，如设置，则自动在表格上方显示搜索表单\n * + renderEdit--渲染编辑视图，如果设置，则自动自动显示编辑按钮和新建按钮。\n * + renderCreate--渲染新建视图，如果新建和编辑一样，可共享renderEdit方法\n * + deleteFunction--删除，如设置，则\n *    + 自动显示“删除按钮”\n *    + 自动使表格可选择\n * + 禁用：增、改、删\n * + 禁用：编辑列\n * + 自定义：编辑按钮、删除按钮、新建按钮\n */\nclass Curd<T extends object = any> extends Component<ICurdProps<T>, ICurdState<T>> {\n  private extraData?: ISearchTableExtra<T>;\n\n  constructor(props: ICurdProps<T>) {\n    super(props);\n    this.state = {\n      deletingKeyList: [],\n    };\n  }\n\n  private defaultRenderExtra = (extraData: ISearchTableExtra<T>) => {\n    const { selectedRowKeys } = extraData;\n    const {\n      disabledCreate,\n      renderCreater,\n      renderCreateElement,\n      renderBatchDeleteElement,\n    } = this.props;\n    const { deletingKeyList } = this.state;\n    return (\n      <React.Fragment>\n        {!disabledCreate && renderCreater && (\n          <span\n            onClick={() => {\n              this.showCreate();\n            }}\n          >\n            {renderCreateElement ? (\n              renderCreateElement()\n            ) : (\n              <Button type=\"primary\" icon={<EditOutlined />}>\n                新建\n              </Button>\n            )}\n          </span>\n        )}\n        {this._batchDeleteEnable && (\n          <ConfirmButton\n            onConfirm={() => {\n              this.remove(selectedRowKeys);\n            }}\n            getElement={loading => {\n              return renderBatchDeleteElement ? (\n                renderBatchDeleteElement()\n              ) : (\n                <Button\n                  icon={<DeleteOutlined />}\n                  danger\n                  loading={loading || deletingKeyList.length > 0}\n                >\n                  批量删除\n                </Button>\n              );\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  private async remove(idList?: any[]) {\n    if (!idList) {\n      return;\n    }\n    const { deleteFunction } = this.props;\n    if (!deleteFunction) {\n      return;\n    }\n    this.setState({ deletingKeyList: idList });\n    await deleteFunction(idList);\n    this.setState({ deletingKeyList: [] });\n    if (this.extraData) {\n      this.extraData.refresh();\n    }\n  }\n\n  private edit(record: T): void {\n    this.setState({ visibleEdit: true, editRecord: record });\n  }\n\n  private preview(record: T): void {\n    this.setState({ visiblePreview: true, editRecord: record });\n  }\n\n  private get _showDelete() {\n    const { deleteFunction, disabledDelete } = this.props;\n    return Boolean(!disabledDelete && deleteFunction);\n  }\n\n  private get _showEdit() {\n    const { renderEditer, disabledEdit } = this.props;\n    return Boolean(!disabledEdit && renderEditer);\n  }\n\n  private get _showPreview() {\n    const { renderPreviewer, disabledPreview } = this.props;\n    return Boolean(!disabledPreview && renderPreviewer);\n  }\n\n  private getRecordKey(record: T) {\n    const { rowKey = 'id' } = this.props;\n    if (typeof rowKey === 'string') {\n      return (record as any)[rowKey];\n    }\n    return rowKey(record);\n  }\n\n  private defaultRenderEditColumns = (\n    record: T,\n    params?: {\n      disabledRecordDelete?: boolean;\n      disabledRecordEdit?: boolean;\n      disabledRecordPreview?: boolean;\n    },\n  ) => {\n    const {\n      disabledRecordDelete = false,\n      disabledRecordEdit = false,\n      disabledRecordPreview = false,\n    } = params || {};\n    const showDelete = this._showDelete && !disabledRecordDelete;\n    const showEdit = this._showEdit && !disabledRecordEdit;\n    const showPreview = this._showPreview && !disabledRecordPreview;\n    const key = this.getRecordKey(record);\n    const { renderDeleteElement, renderEditElement, renderEditPreviewElement } = this.props;\n    return (\n      <React.Fragment>\n        {showDelete && (\n          <ConfirmButton\n            onConfirm={() => {\n              this.remove([this.getRecordKey(record)]);\n            }}\n            getElement={loading => {\n              const { deletingKeyList: loadingDelete } = this.state;\n              return renderDeleteElement ? (\n                renderDeleteElement()\n              ) : (\n                <Tooltip title=\"删除\">\n                  <Button\n                    type=\"link\"\n                    danger\n                    icon={<DeleteOutlined />}\n                    loading={loading || loadingDelete.indexOf(key) >= 0}\n                  />\n                </Tooltip>\n              );\n            }}\n          />\n        )}\n        {showEdit && (\n          <span onClick={() => this.edit(record)}>\n            {renderEditElement ? (\n              renderEditElement()\n            ) : (\n              <Tooltip title=\"编辑\">\n                <Button icon={<EditOutlined />} type=\"link\" />\n              </Tooltip>\n            )}\n          </span>\n        )}\n        {showPreview &&\n          (renderEditPreviewElement ? (\n            renderEditPreviewElement()\n          ) : (\n            <span onClick={() => this.preview(record)}>\n              <Tooltip title=\"查看\">\n                <Button icon={<EyeOutlined />} type=\"link\" />\n              </Tooltip>\n            </span>\n          ))}\n      </React.Fragment>\n    );\n  };\n\n  private getEditColumn(): ColumnType<T> | null {\n    const { disabledEditColumn, renderEditColumns, editColumnWidth = 120 } = this.props;\n    if (disabledEditColumn) {\n      return null;\n    }\n    return {\n      title: '操作',\n      fixed: 'right',\n      width: editColumnWidth,\n      align: 'right',\n      className: 'fh-CurdEditColumn',\n      render: (text, record, index) => {\n        return renderEditColumns\n          ? renderEditColumns(record, index, this.defaultRenderEditColumns)\n          : this.defaultRenderEditColumns(record);\n      },\n    };\n  }\n\n  private closeEdit = () => {\n    this.setState({ visibleEdit: false });\n  };\n\n  private closePreview = () => {\n    this.setState({ visiblePreview: false });\n  };\n\n  private showCreate = () => {\n    this.setState({ visibleCreate: true });\n  };\n\n  private closeCreate = () => {\n    this.setState({ visibleCreate: false });\n  };\n\n  private get _batchDeleteEnable() {\n    if (this.extraData) {\n      const { selectedRowKeys } = this.extraData;\n      const { disabledDelete, deleteFunction } = this.props;\n      return Boolean(\n        !disabledDelete && deleteFunction && selectedRowKeys && selectedRowKeys.length,\n      );\n    }\n    return false;\n  }\n\n  public render(): ReactNode {\n    const {\n      columns,\n      getListFunction,\n      onDataChange,\n      onSearchParamsChange,\n      rowKey = 'id',\n      deleteFunction,\n      selectedEnable,\n      renderTableExtra,\n      searchItem,\n      pageSize,\n      disabledCreate,\n      disabledDelete,\n      renderCreater,\n      renderEditer,\n      renderPreviewer,\n      showSizeChanger,\n      showQuickJumper,\n      inlineMaxNumber,\n      searchFormProps,\n      tableProps,\n      className,\n      style,\n      showTotal,\n    } = this.props;\n    const { visibleCreate, visibleEdit, editRecord, visiblePreview } = this.state;\n    const tableSelectedEnable = Boolean(\n      selectedEnable === true ||\n        (selectedEnable === undefined && !disabledDelete && deleteFunction),\n    );\n    const editColumn = this.getEditColumn();\n    const useColumns = editColumn ? columns.concat([editColumn]) : columns;\n    return (\n      <SearchTable<T>\n        columns={useColumns}\n        getListFunction={getListFunction}\n        onDataChange={onDataChange}\n        onSearchParamsChange={onSearchParamsChange}\n        rowKey={rowKey}\n        pageSize={pageSize}\n        showSizeChanger={showSizeChanger}\n        showQuickJumper={showQuickJumper}\n        showTotal={showTotal}\n        tableProps={{\n          scroll: {\n            x: 800,\n          },\n          ...tableProps,\n        }}\n        defaultSearchParams={searchFormProps?.initialValues}\n        style={style}\n        className={classnames('fh-Curd', className)}\n        selectedEnable={tableSelectedEnable}\n        renderExtra={(extraData: ISearchTableExtra<T>) => {\n          const { setSearchParams } = extraData;\n          this.extraData = extraData;\n          return (\n            <React.Fragment>\n              {/* 渲染搜索表单 */}\n              {searchItem && (\n                <SearchForm\n                  {...searchFormProps}\n                  inlineMaxNumber={inlineMaxNumber}\n                  itemList={searchItem}\n                  onSubmit={(values: any) => {\n                    setSearchParams(values);\n                  }}\n                />\n              )}\n              {/* 渲染表格批量操作区 */}\n              <div className=\"fh-ControlGroup\">\n                {renderTableExtra\n                  ? renderTableExtra(extraData, this.defaultRenderExtra)\n                  : this.defaultRenderExtra(extraData)}\n              </div>\n              {!disabledCreate &&\n                renderCreater &&\n                renderCreater(Boolean(visibleCreate), this.closeCreate, extraData)}\n\n              {this._showEdit &&\n                editRecord &&\n                renderEditer &&\n                renderEditer(Boolean(visibleEdit), this.closeEdit, extraData, editRecord)}\n\n              {this._showPreview &&\n                editRecord &&\n                renderPreviewer &&\n                renderPreviewer(Boolean(visiblePreview), this.closePreview, extraData, editRecord)}\n            </React.Fragment>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default Curd;\n"]}]}