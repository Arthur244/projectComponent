{"remainingRequest":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js!/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts","dependencies":[{"path":"/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts","mtime":1594367130786},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/cache-loader/dist/cjs.js","mtime":1609062632110},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/thread-loader/dist/cjs.js","mtime":1609062632658},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609062558293},{"path":"/Users/xujunjie/Documents/git/projectComponent/node_modules/source-map-loader/index.js","mtime":1609062632650}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xujunjie/Documents/git/projectComponent/src/core/TimeSpan.ts"],"names":["DAY_TO_HOUR","HOUR_TO_MINUTE","MINUTE_TO_SECOND","SECOND_TO_MILLISECOND","TimeSpan","days","hours","minutes","seconds","milliseconds","_milliseconds","ts","Math","abs","formatStr","o","D","floor","totalDays","H","totalHours","M","totalMinutes","S","totalSeconds","I","totalMilliseconds","d","h","m","s","i","result","key","replace","RegExp","replacefun","arg","arguments","number","currentRegStr","numberStr","toString","length","substr","ceil"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,WAAW,GAAG,EAApB;AACA,IAAMC,cAAc,GAAG,EAAvB;AACA,IAAMC,gBAAgB,GAAG,EAAzB;AACA,IAAMC,qBAAqB,GAAG,IAA9B;AAEA;AACA;AACA;AACA;AACA;;IACMC,Q;AAGJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,sBAA6E;AAAA,QAAjEC,IAAiE,uEAA1D,CAA0D;AAAA,QAAvDC,KAAuD,uEAA/C,CAA+C;AAAA,QAA5CC,OAA4C,uEAAlC,CAAkC;AAAA,QAA/BC,OAA+B,uEAArB,CAAqB;AAAA,QAAlBC,YAAkB,uEAAH,CAAG;;AAAA;;AAAA,SAVrEC,aAUqE;AAC3E,SAAKA,aAAL,GAAqBD,YAArB;AACA,SAAKC,aAAL,IAAsBF,OAAO,GAAGL,qBAAhC;AACA,SAAKO,aAAL,IAAsBH,OAAO,GAAGL,gBAAV,GAA6BC,qBAAnD;AACA,SAAKO,aAAL,IAAsBJ,KAAK,GAAGL,cAAR,GAAyBC,gBAAzB,GAA4CC,qBAAlE;AACA,SAAKO,aAAL,IACEL,IAAI,GAAGL,WAAP,GAAqBC,cAArB,GAAsCC,gBAAtC,GAAyDC,qBAD3D;AAED;AAED;AACF;AACA;AACA;AACA;AACA;;;;;wBACMQ,E,EAAc;AAChB,aAAO,IAAIP,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKM,aAAL,GAAqBC,EAAE,CAACD,aAAjD,CAAP;AACD;AAED;AACF;AACA;AACA;;;;0BACQ;AACJ,aAAO,IAAIN,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBQ,IAAI,CAACC,GAAL,CAAS,KAAKH,aAAd,CAAzB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;;AA8EE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BACiC;AAAA,UAAxBI,SAAwB,uEAAZ,UAAY;AAC7B,UAAIC,CAAC,GAAG;AACNC,QAAAA,CAAC,EAAEJ,IAAI,CAACK,KAAL,CAAW,KAAKC,SAAhB,CADG;AAENC,QAAAA,CAAC,EAAEP,IAAI,CAACK,KAAL,CAAW,KAAKG,UAAhB,CAFG;AAGNC,QAAAA,CAAC,EAAET,IAAI,CAACK,KAAL,CAAW,KAAKK,YAAhB,CAHG;AAINC,QAAAA,CAAC,EAAEX,IAAI,CAACK,KAAL,CAAW,KAAKO,YAAhB,CAJG;AAKNC,QAAAA,CAAC,EAAEb,IAAI,CAACK,KAAL,CAAW,KAAKS,iBAAhB,CALG;AAMNC,QAAAA,CAAC,EAAE,KAAKtB,IANF;AAONuB,QAAAA,CAAC,EAAE,KAAKtB,KAPF;AAQNuB,QAAAA,CAAC,EAAE,KAAKtB,OARF;AASNuB,QAAAA,CAAC,EAAE,KAAKtB,OATF;AAUNuB,QAAAA,CAAC,EAAE,KAAKtB;AAVF,OAAR;AAYA,UAAIuB,MAAM,GAAGlB,SAAb;;AAb6B,iCAcpBmB,GAdoB;AAe3BD,QAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,IAAIC,MAAJ,CAAW,MAAMF,GAAN,GAAY,IAAvB,CAAf,EAA6CG,UAA7C,CAAT;;AAEA,iBAASA,UAAT,GAAsB;AACpB,cAAIC,GAAG,GAAGC,SAAV;AACA,cAAIC,MAAM,GAAIxB,CAAD,CAAWkB,GAAX,CAAb;AACA,cAAIO,aAAa,GAAGH,GAAG,CAAC,CAAD,CAAH,CAAOH,OAAP,CAAe,IAAIC,MAAJ,CAAWF,GAAX,EAAgB,GAAhB,CAAf,EAAqC,GAArC,CAApB;AAEA,cAAIQ,SAAS,GAAGF,MAAM,CAACG,QAAP,EAAhB;AACA,cAAID,SAAS,CAACE,MAAV,GAAmBH,aAAa,CAACG,MAArC,EAA6C,OAAOF,SAAP,CAA7C,KACK,OAAOD,aAAa,CAACI,MAAd,CAAqB,CAArB,EAAwBJ,aAAa,CAACG,MAAd,GAAuBF,SAAS,CAACE,MAAzD,IAAmEF,SAA1E;AACN;AAzB0B;;AAc7B,WAAK,IAAIR,GAAT,IAAgBlB,CAAhB,EAAmB;AAAA,cAAVkB,GAAU;AAYlB;;AACD,aAAOD,MAAP;AACD;;;;;;;;;;wBA1HU;AACT,UAAI,KAAKtB,aAAL,IAAsB,CAA1B,EAA6B,OAAOE,IAAI,CAACK,KAAL,CAAW,KAAKC,SAAhB,CAAP,CAA7B,KACK,OAAON,IAAI,CAACiC,IAAL,CAAU,KAAK3B,SAAf,CAAP;AACN;AAED;AACF;AACA;AACA;;;;wBACc;AACV,UAAI,KAAKR,aAAL,IAAsB,CAA1B,EAA6B,OAAOE,IAAI,CAACK,KAAL,CAAW,KAAKG,UAAhB,IAA8BpB,WAArC,CAA7B,KACK,OAAOY,IAAI,CAACiC,IAAL,CAAU,KAAKzB,UAAf,IAA6BpB,WAApC;AACN;AAED;AACF;AACA;AACA;;;;wBACgB;AACZ,UAAI,KAAKU,aAAL,IAAsB,CAA1B,EAA6B,OAAOE,IAAI,CAACK,KAAL,CAAW,KAAKK,YAAhB,IAAgCrB,cAAvC,CAA7B,KACK,OAAOW,IAAI,CAACiC,IAAL,CAAU,KAAKvB,YAAf,IAA+BrB,cAAtC;AACN;AAED;AACF;AACA;AACA;;;;wBACgB;AACZ,UAAI,KAAKS,aAAL,IAAsB,CAA1B,EAA6B,OAAOE,IAAI,CAACK,KAAL,CAAW,KAAKO,YAAhB,IAAgCtB,gBAAvC,CAA7B,KACK,OAAOU,IAAI,CAACiC,IAAL,CAAU,KAAKrB,YAAf,IAA+BtB,gBAAtC;AACN;AAED;AACF;AACA;AACA;;;;wBACqB;AACjB,UAAI,KAAKQ,aAAL,IAAsB,CAA1B,EAA6B,OAAOE,IAAI,CAACK,KAAL,CAAW,KAAKP,aAAhB,IAAiCP,qBAAxC,CAA7B,KACK,OAAOS,IAAI,CAACiC,IAAL,CAAU,KAAKnC,aAAf,IAAgCP,qBAAvC;AACN;AAED;AACF;AACA;AACA;;;;wBACkB;AACd,aAAO,KAAKiB,UAAL,GAAkBpB,WAAzB;AACD;AACD;AACF;AACA;AACA;;;;wBACmB;AACf,aAAO,KAAKsB,YAAL,GAAoBrB,cAA3B;AACD;AACD;AACF;AACA;AACA;;;;wBACqB;AACjB,aAAO,KAAKuB,YAAL,GAAoBtB,gBAA3B;AACD;AACD;AACF;AACA;AACA;;;;wBACqB;AACjB,aAAO,KAAKQ,aAAL,GAAqBP,qBAA5B;AACD;AACD;AACF;AACA;AACA;;;;wBAC0B;AACtB,aAAO,KAAKO,aAAZ;AACD;;;;;;eAkDYN,Q;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAjLMJ,W;0BACAC,c;0BACAC,gB;0BACAC,qB;0BAOAC,Q","sourcesContent":["const DAY_TO_HOUR = 24;\nconst HOUR_TO_MINUTE = 60;\nconst MINUTE_TO_SECOND = 60;\nconst SECOND_TO_MILLISECOND = 1000;\n\n/**\n * 表示一个时间段\n * @author : xujunjie (yinhunfeixue@163.com)\n * @Date   : 2017-11-19 12:52:53\n */\nclass TimeSpan {\n  private _milliseconds: number;\n\n  /**\n   * 实例化TimeSpan.\n   * @param {number} days 天数.\n   * @param {number} hours 小时.\n   * @param {number} minutes 分钟.\n   * @param {number} seconds 秒数.\n   * @param {number} milliseconds 毫秒.\n   */\n  constructor(days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n    this._milliseconds = milliseconds;\n    this._milliseconds += seconds * SECOND_TO_MILLISECOND;\n    this._milliseconds += minutes * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n    this._milliseconds += hours * HOUR_TO_MINUTE * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n    this._milliseconds +=\n      days * DAY_TO_HOUR * HOUR_TO_MINUTE * MINUTE_TO_SECOND * SECOND_TO_MILLISECOND;\n  }\n\n  /**\n   * 此实例加上另一个TimeSpan\n   * @param {TimeSpan} ts\n   *\n   * @return {TimeSpan} 此实例的值与 ts 的值之和的新的 TimeSpan，不改变当前实例.\n   */\n  add(ts: TimeSpan) {\n    return new TimeSpan(0, 0, 0, 0, this._milliseconds + ts._milliseconds);\n  }\n\n  /**\n   * 返回新的 TimeSpan 对象，其值是当前 TimeSpan 对象的绝对值.\n   * @return {TimeSpan} 新的 TimeSpan，其值是当前 TimeSpan 对象的绝对值.\n   */\n  abs() {\n    return new TimeSpan(0, 0, 0, 0, Math.abs(this._milliseconds));\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整天数\n   * @type {number}\n   */\n  get days() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalDays);\n    else return Math.ceil(this.totalDays);\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整小时数\n   * @type {number}\n   */\n  get hours() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalHours) % DAY_TO_HOUR;\n    else return Math.ceil(this.totalHours) % DAY_TO_HOUR;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整分钟数\n   * @type {number}\n   */\n  get minutes() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalMinutes) % HOUR_TO_MINUTE;\n    else return Math.ceil(this.totalMinutes) % HOUR_TO_MINUTE;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整秒数\n   * @type {number}\n   */\n  get seconds() {\n    if (this._milliseconds >= 0) return Math.floor(this.totalSeconds) % MINUTE_TO_SECOND;\n    else return Math.ceil(this.totalSeconds) % MINUTE_TO_SECOND;\n  }\n\n  /**\n   * 获取由当前 TimeSpan 结构表示的整毫秒数\n   * @type {number}\n   */\n  get milliseconds() {\n    if (this._milliseconds >= 0) return Math.floor(this._milliseconds) % SECOND_TO_MILLISECOND;\n    else return Math.ceil(this._milliseconds) % SECOND_TO_MILLISECOND;\n  }\n\n  /**\n   * 获取以整天数和天的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalDays() {\n    return this.totalHours / DAY_TO_HOUR;\n  }\n  /**\n   * 获取以整小时数和小时的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalHours() {\n    return this.totalMinutes / HOUR_TO_MINUTE;\n  }\n  /**\n   * 获取以整分钟数和分钟的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalMinutes() {\n    return this.totalSeconds / MINUTE_TO_SECOND;\n  }\n  /**\n   * 获取以整秒数和秒的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalSeconds() {\n    return this._milliseconds / SECOND_TO_MILLISECOND;\n  }\n  /**\n   * 获取以整毫秒数和毫秒的小数部分表示的当前 TimeSpan 结构的值\n   * @type {number}\n   */\n  get totalMilliseconds() {\n    return this._milliseconds;\n  }\n\n  /**\n   * 按指定格式格式化\n   * D——totalDays\n   * H——totalHours\n   * M——totalMinutes\n   * S——totalSeconds\n   * I——totalMilliseconds\n   * d——天\n   * h——时\n   * m——分\n   * s——秒\n   * i——毫秒\n   *\n   * @param {string} formatStr 格式字符串\n   * @return {string} 格式化之后的字符串\n   *\n   */\n  format(formatStr = 'hh:mm:ss') {\n    let o = {\n      D: Math.floor(this.totalDays),\n      H: Math.floor(this.totalHours),\n      M: Math.floor(this.totalMinutes),\n      S: Math.floor(this.totalSeconds),\n      I: Math.floor(this.totalMilliseconds),\n      d: this.days,\n      h: this.hours,\n      m: this.minutes,\n      s: this.seconds,\n      i: this.milliseconds,\n    };\n    let result = formatStr;\n    for (let key in o) {\n      result = result.replace(new RegExp('(' + key + '+)'), replacefun);\n\n      function replacefun() {\n        let arg = arguments;\n        let number = (o as any)[key];\n        let currentRegStr = arg[1].replace(new RegExp(key, 'g'), '0');\n\n        let numberStr = number.toString();\n        if (numberStr.length > currentRegStr.length) return numberStr;\n        else return currentRegStr.substr(0, currentRegStr.length - numberStr.length) + numberStr;\n      }\n    }\n    return result;\n  }\n}\n\nexport default TimeSpan;\n"]}]}